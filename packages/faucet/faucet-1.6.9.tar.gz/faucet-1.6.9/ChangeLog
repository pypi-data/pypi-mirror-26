CHANGES
=======

1.6.9
-----

* 2.8.1 still occasionally disconnects with more tolerant settings
* Version bump for release
* Try 2.8.1 with increased socket timeout
* Set higher socket timeout
* Revert "Try upgrade to OVS 2.8.1 again now implemented controller ratelimiting/mininet limits."
* Try upgrade to OVS 2.8.1 again now implemented controller ratelimiting/mininet limits
* Control channel rate limiting
* Allow setting of OVS rate limit
* pylint
* "separate"
* Default to CPU limited host and 1ms link delays, to avoid thrashing test host
* The help text for "n" on learned\_macs less confusing
* BGP status can be queried on startup before BGP service ready
* Detect DP level config changes
* ACL only change optimization not used when ACL changes to or from no ACL
* pytype fixed
* Fix host cache test
* sort MAC list for comparison
* Host count verification needs to account for stacking
* Check host learned count
* Ensure reported learned hosts count is the same as hosts learned
* Stale cache entry (ports) can cause hosts not to reported as learned
* Fix isfragment()
* Better ACL change logging
* Move isfragment logic to own method
* pytype broken
* Wait for ACL IP tuple rules to be pushed
* unknown ports should use port number as a str
* Allow ACL to be designated exact match only
* pylint
* Implement exact match tuple testing
* Revert "Remove/recreate test directory on each controller restart attempt."
* Remove/recreate test directory on each controller restart attempt
* Add Prometheus histogram of packet in processing time
* Don't use /tmp (is RAM and tends to run out of space)
* Make OVS build dependencies configurable
* Make FaucetSingleStackStringOfDPTaggedTest less load dependant
* Reduce image size slightly by installing OVS first and purging some build tools
* Ryu blows up parsing fragments
* Too strict to check packet ins from port down (packet ins port up/down may arrive out of order)
* Specify a test ryu.conf for controllers
* Don't use curl to do portmod
* Check multiple IP versions for controller listen
* Do not process packet ins from down port
* Allow configuration of BGP listen address
* Ryu 4.19
* Add valve\_util.get\_setting() and use it instead of os.getenv()
* Initialize Gauge DP status at config time
* Use OF port number for Gauge stats if port number not configured
* OVSV typo
* Git clone OVS to workaround openvswitch.org outage
* Add unit test for vlan referred by its name
* Fix type compatibility issues for vlan
* Make OVS compile noiser so Travis doesn't false positive hung build
* Don't wait disabling stack ports
* Update TODO for handling failure of redundant DPs in stacking
* Stacking should tolerate failures of redundant links
* Can't default to > 1 switch to switch links because non stack tests don't generate loop free topologies
* Do not specify networkx version
* Stacking with multiple links can cause a loop
* Stacking should work with multiple stack links between DPs
* Separate implementation for constructing string of DPs
* pylint
* Stack tests should allow configuration of number of switch to switch links
* shortest\_path\_port() should consider port status
* add\_edge() API change for networkx 2.x
* No longer need to pin networkx version
* Preversion 1.6.9

1.6.8
-----

* Version bump for release
* add release target to docs
* fix environment variables for db and admin user
* Permanent learn tests require hard\_timeout not present
* ensure hard\_timeout set on eth\_src flows
* hard/idle timeouts reversed on eth\_src flows
* Fix flow\_timeout method call
* add release target; closes #767
* OVS 2.8.1 connections to controller unstable under heavy load. Will continue to troubleshoot
* More relaxed OVS connect time to reduce test load
* When cold starting dataplane, reset the host cache to cause routes etc to be re-resolved
* fix extra / typo
* add compose file for rpi
* Re-attempt OVS upgrade to 2.8.1
* Sync Aruba TFM to generic
* VLAN table does not need eth\_src
* Don't need catchall ICMP entry at all
* Don't necessarily need to catch all ICMP
* Specifically match echo request/reply to control plane
* Sync Aruba TFM to generic
* icmpv6\_type moves to VIP, eth\_src doesn't need ip\_proto and icmpv6\_type
* sync Aruba TFM to generic
* Move ip proto/icmpv6 matches to VIP from eth\_src
* Move eth\_src matches from VLAN table to eth\_src table, so VLAN table doesn't need eth\_src
* Allow configuration of BGP server addresses (available in Ryu 4.19)
* Ryu 4.18
* exabgp should attempt only one connection
* Actually, don't look at hw\_src in NAs - might not be present and not worth believing if it is
* Some IPv6 hosts can use a src IP from a different subnet to the one they're NA'ing for. Handle this situation and also verify NA'd hw\_src is the same as eth\_src
* Move group flood bucket builder to valve\_of
* LACP test shouldn't care about aggregator ID
* Test that traffic over LAG works
* Avoid loopback flood on LAG members
* LAG list moved back to VLAN
* Test connectivity before and after loop mitigation
* OVS dumps should be .log so dumped first
* Add dump-ports
* More OVS diagnostics
* dump OVS switch flows using nice ofctl utility
* bgp log helper for IPv6
* Use log helper for BGP
* matching lines log helper, and try to capture only relevant OVS log lines
* Use DP-centric LAGs
* pylint
* pylint
* pylint
* pylint
* pylint
* pylint
* pylint
* pylint
* Concentrate more Ryu lib imports through valve\_of
* Concentrate Ryu lib imports in valve\_of
* Add quiet commands helper
* Prometheus expire still flakey until load
* Loop check should retry flood if loop is not yet ready
* Loop test needs bridge tools
* iproute2 needed for tc
* Add trivial loop protection (typically for access ports)
* whitespace
* iperf can fail to start due to port conflict
* Completely rewrite prometheus expiry test
* Fix prom learn mac helper
* Helper to check MAC present in Prometheus
* Update example configurations for faucet/gauge to show newer features
* Revert debug level change
* flap port at beginning of FaucetSingleHostsTimeoutPrometheusTest to make more deterministic
* Disable learning jitter for FaucetSingleHostsTimeoutPrometheusTest to make test deterministic
* FaucetSingleHostsTimeoutPrometheusTest diags
* Wrong arg order setting up for Prometheus timeout test
* More diagnostics
* Temporary debug log level
* put back to single quotes
* add FAUCET\_PREFIX for specifying paths of volumes
* partner LACP port number does not matter
* Dump YAML, then logs, then other files
* Somewhat less disk space (don't cache mininet/pytype in layers)
* Always update metrics on receiving a packet
* Did not dump test files
* Dump pcaps last
* Make FaucetHostsTimeoutPrometheusTest less load dependant
* gNMI, use new replace/update methods
* Don't hardcode DP ports in LACP test
* Remove erroneous second copy of check script
* pylint
* add update test for nsodbc poller
* Move flow checks to outside of the class
* fake couchdb server deletes docs associated with a deleted database
* Add unit tests for gauge\_nsodbc
* pylint
* pylint
* Change mock datapath attribute from id to dp\_id to match faucet.dp
* pylint
* pylint
* pylint
* Test 2-port LAG
* Adding missing import
* TODOs for LAGs
* Implement LAG ID
* Fix for hardware tests
* Support multiple links per host (first user LACP)
* Add multiple Update and Replace IETF JSON support to SET
* Documentation
* Increase test CPU oversubscription again
* Move DP config change detection to DP class
* pylint
* pylint
* test\_config has all kinds of bad config which other tests now catch
* ACL parse check not robust enough
* More config checks for ACLs (including bad match conditions)
* More config parsing checks (including resolving VLAN names in routers, empty interface lists, enabling stacking and routing)
* Test that an unknown router VLAN is rejected
* Fix test
* Move more stacking implementation out of valve.py
* Move stacking implementation for flooding to own class, re-enable stacking tests
* Indent
* Update valve\_of.py
* Update valve\_of.py
* Move flood action list builders to valve\_of
* Missed L3 True
* pytype unhappy
* Move learn banning implementation to host manager
* Move flow-removed triggered host learning to own class. Move API call to render DP as dict, to DP class
* Move VLAN expiry implementation to VLAN class
* Simplify host learning functions
* Incremental refactor for host cache
* Simply host expiry
* Try to make apt-get quieter
* Explicitly expire all hosts learned on a port when port goes down. Don't skip deleting from VLAN table when VLAN deconfigured
* Block/unblockl learning on port depending on LACP status
* Send LACP down flows when LACP expires
* Delete other port flows when lacp down executed, and ensure learning does not happen while LACP is down
* Delete port flows when LACP down
* Block traffic on port while lacp down
* Add prom client to \_\_init\_\_ args so GaugeFlowTableDBLogger can be instantiated
* pylint
* Added unit tests for DatabaseCouch in nsodbc
* Add functionality to couchdb server so that it adds and deletes docs and views
* Break/fix
* Fix pylint revealed by import cleanup
* Only call update metrics if packet in handler returned some flows
* Still too slow updating metrics on packet in
* Remove old python2 imports
* Allow old python2 imports to be removed
* LACP expire log fix
* Retry iperf stats when switch ports 0 traffic
* Don't try to rate limit metric updates (makes tests slow)
* Add unit test for ConnectionCouch in nsodbc.py
* Add a pretend http request handler for couchdb
* Add links to our build server
* Add packaging files for our FAUCET VM
* Add some files necessary for packaging faucet
* Default to prometheus for port\_stats poller in example gauge config
* Fix example faucet.yaml
* Remove math module import
* Use tempfile.mkstemp() to make a new temp file instead of tempfile.TemporaryFile(), so the file can be opened and closed
* Refactoring the GaugeWatcherTest class  & pylint
* Remove GaugeUpdateTest class since there are no tests in it, and make all methods within it into functions
* Move the get\_stats method into parent class
* Refactor creating ofp messages into another class
* added unit tests for watcher.py
* ffi-dev only
* Add FFI
* LACP test doesn't need to be serial
* Make port up message clearer
* Test FIB route expiry
* dead FIB routes not actually deleted
* Update gNMI README
* Update gNMI updater
* Update gNMI Get
* Add gNMI Set
* Add gNMI Capabilities
* Update run\_target script
* Update FCTL test to use MAC address format
* Suppress pytype warning for using python3 only feature
* Add colons between octets in mac addresses
* Update faucet prometheus exporter port
* Fix UnboundLocalError when fctl has a connection error
* Pre vesion bump
* pylint
* Add doc for profiling
* Version bump
* Reduce interval for gauge thread poller tests
* refactor port stats poller & flow table poller tests
