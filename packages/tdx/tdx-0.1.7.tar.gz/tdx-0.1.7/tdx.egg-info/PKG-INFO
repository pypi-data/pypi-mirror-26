Metadata-Version: 1.1
Name: tdx
Version: 0.1.7
Summary: Tools for working with container types, command data operations, and concise exception handling
Home-page: https://github.com/stroxler/tdx
Author: Steven Troxler
Author-email: steven.troxler@gmail.com
License: MIT
Description-Content-Type: UNKNOWN
Description: tdx: small tools for working with datatypes, data, and exceptions
        ---------------------------------------------------------------------
        
        In `collections.py` there are some tools for working with lists,
        sets, dicts, and iterables more declaratively.
        
        In `data.py` there are some functiions to more concisely read and
        write yaml in the most common use cases.
        
        In `exceptions.py` there are some error handling tools. They are all
        callback-oriented, so not necessarily user-friendly; mostly they are
        intended for use in `decorators.py`.
        
        In `decorators.py` there are some general decorator tools, in particular
        one to wrap a function in a debugger call on error and one to attach
        context to exception messages. There's also a `wraptify` function that
        will convert decorators that use `functools.wraps` (and therefore
        clobber a lot of metadata from the target) into decorators which preserve
        metadata using `wrapt.decorator`.
        
        In `validation.py` there are some general validation checks that seem
        to come in handy in lots of contexts. For example, making sure that a
        dict has all of a set of required keys, and all other keys are part
        of some optional set.
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2.7
