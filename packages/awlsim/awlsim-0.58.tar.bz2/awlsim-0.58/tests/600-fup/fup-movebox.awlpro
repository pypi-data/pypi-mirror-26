<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim project file generated by awlsim-0.58-pre -->
<awlsim_project date_create="2012-08-13 00:00:00.000000"
                date_modify="2017-10-26 19:21:21.346295"
                format_version="1">
	<!-- CPU core configuration -->
	<cpu>
		<!-- CPU core feature specification -->
		<specs nr_accus="2"
		       nr_counters="256"
		       nr_flags="2048"
		       nr_inputs="128"
		       nr_localbytes="1024"
		       nr_outputs="128"
		       nr_timers="256" />

		<!-- CPU core configuration -->
		<config clock_memory_byte="-1"
		        ext_insns_enable="1"
		        mnemonics="2"
		        ob_startinfo_enable="0" />
	</cpu>

	<!-- AWL/STL language configuration -->
	<language_awl>
		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="Main"
		        type="0"><![CDATA[
ORGANIZATION_BLOCK OB 1
BEGIN
	CALL "FC_TEST_movebox_0"
	CALL "FC_TEST_movebox_1"
	CALL "FC_TEST_movebox_2"
	
	CALL SFC 46 // STOP CPU
END_ORGANIZATION_BLOCK

]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST movebox 0"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_movebox_0" : VOID
BEGIN
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= FALSE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= FALSE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= FALSE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= FALSE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	1111
	__ASSERT==	MW 8,	1111
	__ASSERT==	MW 10,	1111
	__ASSERT==	MW 12,	1111
	__ASSERT==	M 50.0,	FALSE
	__ASSERT==	MW 14,	1111
	__ASSERT==	MW 16,	1111
	__ASSERT==	M 50.1,	FALSE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= TRUE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= FALSE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= FALSE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= FALSE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	4444
	__ASSERT==	MW 8,	1111
	__ASSERT==	MW 10,	1111
	__ASSERT==	MW 12,	1111
	__ASSERT==	M 50.0,	FALSE
	__ASSERT==	MW 14,	1111
	__ASSERT==	MW 16,	1111
	__ASSERT==	M 50.1,	FALSE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= FALSE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= TRUE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= FALSE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= FALSE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	1111
	__ASSERT==	MW 8,	4545
	__ASSERT==	MW 10,	4545
	__ASSERT==	MW 12,	1111
	__ASSERT==	M 50.0,	FALSE
	__ASSERT==	MW 14,	1111
	__ASSERT==	MW 16,	1111
	__ASSERT==	M 50.1,	FALSE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= TRUE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= TRUE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= FALSE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= FALSE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	4444
	__ASSERT==	MW 8,	4545
	__ASSERT==	MW 10,	4545
	__ASSERT==	MW 12,	1111
	__ASSERT==	M 50.0,	FALSE
	__ASSERT==	MW 14,	1111
	__ASSERT==	MW 16,	1111
	__ASSERT==	M 50.1,	FALSE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= FALSE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= FALSE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= TRUE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= FALSE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	1111
	__ASSERT==	MW 8,	1111
	__ASSERT==	MW 10,	1111
	__ASSERT==	MW 12,	4646
	__ASSERT==	M 50.0,	TRUE
	__ASSERT==	MW 14,	1111
	__ASSERT==	MW 16,	1111
	__ASSERT==	M 50.1,	FALSE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= TRUE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= FALSE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= TRUE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= FALSE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	4444
	__ASSERT==	MW 8,	1111
	__ASSERT==	MW 10,	1111
	__ASSERT==	MW 12,	4646
	__ASSERT==	M 50.0,	TRUE
	__ASSERT==	MW 14,	1111
	__ASSERT==	MW 16,	1111
	__ASSERT==	M 50.1,	FALSE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= FALSE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= TRUE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= TRUE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= FALSE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	1111
	__ASSERT==	MW 8,	4545
	__ASSERT==	MW 10,	4545
	__ASSERT==	MW 12,	4646
	__ASSERT==	M 50.0,	TRUE
	__ASSERT==	MW 14,	1111
	__ASSERT==	MW 16,	1111
	__ASSERT==	M 50.1,	FALSE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= TRUE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= TRUE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= TRUE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= FALSE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	4444
	__ASSERT==	MW 8,	4545
	__ASSERT==	MW 10,	4545
	__ASSERT==	MW 12,	4646
	__ASSERT==	M 50.0,	TRUE
	__ASSERT==	MW 14,	1111
	__ASSERT==	MW 16,	1111
	__ASSERT==	M 50.1,	FALSE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= FALSE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= FALSE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= FALSE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= TRUE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	1111
	__ASSERT==	MW 8,	1111
	__ASSERT==	MW 10,	1111
	__ASSERT==	MW 12,	1111
	__ASSERT==	M 50.0,	FALSE
	__ASSERT==	MW 14,	4747
	__ASSERT==	MW 16,	4747
	__ASSERT==	M 50.1,	TRUE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= TRUE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= FALSE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= FALSE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= TRUE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	4444
	__ASSERT==	MW 8,	1111
	__ASSERT==	MW 10,	1111
	__ASSERT==	MW 12,	1111
	__ASSERT==	M 50.0,	FALSE
	__ASSERT==	MW 14,	4747
	__ASSERT==	MW 16,	4747
	__ASSERT==	M 50.1,	TRUE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= FALSE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= TRUE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= FALSE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= TRUE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	1111
	__ASSERT==	MW 8,	4545
	__ASSERT==	MW 10,	4545
	__ASSERT==	MW 12,	1111
	__ASSERT==	M 50.0,	FALSE
	__ASSERT==	MW 14,	4747
	__ASSERT==	MW 16,	4747
	__ASSERT==	M 50.1,	TRUE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= TRUE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= TRUE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= FALSE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= TRUE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	4444
	__ASSERT==	MW 8,	4545
	__ASSERT==	MW 10,	4545
	__ASSERT==	MW 12,	1111
	__ASSERT==	M 50.0,	FALSE
	__ASSERT==	MW 14,	4747
	__ASSERT==	MW 16,	4747
	__ASSERT==	M 50.1,	TRUE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= FALSE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= FALSE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= TRUE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= TRUE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	1111
	__ASSERT==	MW 8,	1111
	__ASSERT==	MW 10,	1111
	__ASSERT==	MW 12,	4646
	__ASSERT==	M 50.0,	TRUE
	__ASSERT==	MW 14,	4747
	__ASSERT==	MW 16,	4747
	__ASSERT==	M 50.1,	TRUE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= TRUE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= FALSE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= TRUE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= TRUE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	4444
	__ASSERT==	MW 8,	1111
	__ASSERT==	MW 10,	1111
	__ASSERT==	MW 12,	4646
	__ASSERT==	M 50.0,	TRUE
	__ASSERT==	MW 14,	4747
	__ASSERT==	MW 16,	4747
	__ASSERT==	M 50.1,	TRUE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= FALSE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= TRUE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= TRUE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= TRUE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	1111
	__ASSERT==	MW 8,	4545
	__ASSERT==	MW 10,	4545
	__ASSERT==	MW 12,	4646
	__ASSERT==	M 50.0,	TRUE
	__ASSERT==	MW 14,	4747
	__ASSERT==	MW 16,	4747
	__ASSERT==	M 50.1,	TRUE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	L		1111
	T		MW 0
	T		MW 2
	T		MW 4
	T		MW 6
	T		MW 8
	T		MW 10
	T		MW 12
	T		MW 14
	T		MW 16
	T		MW 18
	T		MW 20
	T		MW 22
	T		MW 24
	T		MW 26
	T		MW 28
	T		MW 30
	T		MW 32
	L		0
	T		MW 50
	CALL "FC_movebox_0" (
		// VAR_INPUT
		IN0		:= 4242,  // INT
		IN1		:= 4343,  // INT
		EN2		:= TRUE,  // BOOL
		IN2		:= 4444,  // INT
		EN3		:= TRUE,  // BOOL
		IN3		:= 4545,  // INT
		EN4		:= TRUE,  // BOOL
		IN4		:= 4646,  // INT
		EN5		:= TRUE,  // BOOL
		IN5		:= 4747,  // INT
		IN6		:= 4848,  // INT
		IN7		:= 4949,  // INT
		IN8		:= 5050,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0,  // INT
		OUT1_0		:= MW 2,  // INT
		OUT1_1		:= MW 4,  // INT
		OUT2		:= MW 6,  // INT
		OUT3_0		:= MW 8,  // INT
		OUT3_1		:= MW 10,  // INT
		OUT4		:= MW 12,  // INT
		ENO4		:= M 50.0,  // BOOL
		OUT5_0		:= MW 14,  // INT
		OUT5_1		:= MW 16,  // INT
		ENO5		:= M 50.1,  // BOOL
		OUT6		:= MW 18,  // INT
		ENO6		:= M 50.2,  // BOOL
		OUT7_0		:= MW 20,  // INT
		OUT7_1		:= MW 22,  // INT
		ENO7		:= M 50.3,  // BOOL
		OUT8_0		:= MW 24,  // INT
		OUT8_1		:= MW 26,  // INT
		OUT8_2		:= MW 28,  // INT
		OUT8_3		:= MW 30,  // INT
		OUT8_4		:= MW 32,  // INT
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	MW 2,	4343
	__ASSERT==	MW 4,	4343
	__ASSERT==	MW 6,	4444
	__ASSERT==	MW 8,	4545
	__ASSERT==	MW 10,	4545
	__ASSERT==	MW 12,	4646
	__ASSERT==	M 50.0,	TRUE
	__ASSERT==	MW 14,	4747
	__ASSERT==	MW 16,	4747
	__ASSERT==	M 50.1,	TRUE
	__ASSERT==	MW 18,	4848
	__ASSERT==	M 50.2,	TRUE
	__ASSERT==	MW 20,	4949
	__ASSERT==	MW 22,	4949
	__ASSERT==	M 50.3,	TRUE
	__ASSERT==	MW 24,	5050
	__ASSERT==	MW 26,	5050
	__ASSERT==	MW 28,	5050
	__ASSERT==	MW 30,	5050
	__ASSERT==	MW 32,	5050
	
	
	BE
END_FUNCTION

]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST movebox 1"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_movebox_1" : VOID
BEGIN
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= FALSE ,  // BOOL
		EN2		:= FALSE ,  // BOOL
		EN40		:= FALSE ,  // BOOL
		EN41		:= FALSE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	1111
	__ASSERT==	MD 30,	1111
	__ASSERT==	MD 40,	1111
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= TRUE ,  // BOOL
		EN2		:= FALSE ,  // BOOL
		EN40		:= FALSE ,  // BOOL
		EN41		:= FALSE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	1111
	__ASSERT==	MD 30,	1111
	__ASSERT==	MD 40,	1111
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= FALSE ,  // BOOL
		EN2		:= TRUE ,  // BOOL
		EN40		:= FALSE ,  // BOOL
		EN41		:= FALSE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	1111
	__ASSERT==	MD 30,	1111
	__ASSERT==	MD 40,	1111
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= TRUE ,  // BOOL
		EN2		:= TRUE ,  // BOOL
		EN40		:= FALSE ,  // BOOL
		EN41		:= FALSE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	22450
	__ASSERT==	MD 30,	L#42424242
	__ASSERT==	MD 40,	1111
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= FALSE ,  // BOOL
		EN2		:= FALSE ,  // BOOL
		EN40		:= TRUE ,  // BOOL
		EN41		:= FALSE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	1111
	__ASSERT==	MD 30,	1111
	__ASSERT==	MD 40,	1111
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= TRUE ,  // BOOL
		EN2		:= FALSE ,  // BOOL
		EN40		:= TRUE ,  // BOOL
		EN41		:= FALSE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	1111
	__ASSERT==	MD 30,	1111
	__ASSERT==	MD 40,	1111
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= FALSE ,  // BOOL
		EN2		:= TRUE ,  // BOOL
		EN40		:= TRUE ,  // BOOL
		EN41		:= FALSE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	1111
	__ASSERT==	MD 30,	1111
	__ASSERT==	MD 40,	1111
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= TRUE ,  // BOOL
		EN2		:= TRUE ,  // BOOL
		EN40		:= TRUE ,  // BOOL
		EN41		:= FALSE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	22450
	__ASSERT==	MD 30,	L#42424242
	__ASSERT==	MD 40,	1111
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= FALSE ,  // BOOL
		EN2		:= FALSE ,  // BOOL
		EN40		:= FALSE ,  // BOOL
		EN41		:= TRUE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	1111
	__ASSERT==	MD 30,	1111
	__ASSERT==	MD 40,	1111
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= TRUE ,  // BOOL
		EN2		:= FALSE ,  // BOOL
		EN40		:= FALSE ,  // BOOL
		EN41		:= TRUE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	1111
	__ASSERT==	MD 30,	1111
	__ASSERT==	MD 40,	1111
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= FALSE ,  // BOOL
		EN2		:= TRUE ,  // BOOL
		EN40		:= FALSE ,  // BOOL
		EN41		:= TRUE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	1111
	__ASSERT==	MD 30,	1111
	__ASSERT==	MD 40,	1111
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= TRUE ,  // BOOL
		EN2		:= TRUE ,  // BOOL
		EN40		:= FALSE ,  // BOOL
		EN41		:= TRUE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	22450
	__ASSERT==	MD 30,	L#42424242
	__ASSERT==	MD 40,	1111
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= FALSE ,  // BOOL
		EN2		:= FALSE ,  // BOOL
		EN40		:= TRUE ,  // BOOL
		EN41		:= TRUE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	1111
	__ASSERT==	MD 30,	1111
	__ASSERT==	MD 40,	2424
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= TRUE ,  // BOOL
		EN2		:= FALSE ,  // BOOL
		EN40		:= TRUE ,  // BOOL
		EN41		:= TRUE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	1111
	__ASSERT==	MD 30,	1111
	__ASSERT==	MD 40,	2424
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= FALSE ,  // BOOL
		EN2		:= TRUE ,  // BOOL
		EN40		:= TRUE ,  // BOOL
		EN41		:= TRUE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	1111
	__ASSERT==	MD 30,	1111
	__ASSERT==	MD 40,	2424
	
	
	L	1111
	T	MW 0
	T	MW 20
	T	MD 30
	T	MD 40
	CALL "FC_movebox_1" (
		// VAR_INPUT
		IN0		:= L#42424242 ,  // DINT
		EN1		:= TRUE ,  // BOOL
		EN2		:= TRUE ,  // BOOL
		EN40		:= TRUE ,  // BOOL
		EN41		:= TRUE ,  // BOOL
		IN4		:= 2424 ,  // INT
		// VAR_OUTPUT
		OUT0		:= MW 0 ,  // WORD
		OUT2		:= MW 20 ,  // WORD
		OUT3		:= MD 30 ,  // DINT
		OUT4		:= MD 40 ,  // DINT
	)
	__ASSERT==	MW 0,	22450
	__ASSERT==	MW 20,	22450
	__ASSERT==	MD 30,	L#42424242
	__ASSERT==	MD 40,	2424
	
	
	BE
END_FUNCTION
]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST movebox 2"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_movebox_2" : VOID
BEGIN
	L	0
	T	MB 0
	L	L#11111111
	T	MD 10
	T	MD 20
	CALL "FC_movebox_2" (
		// VAR_INPUT
		EN0		:= FALSE,  // BOOL
		EN1		:= FALSE,  // BOOL
		IN0		:= B#16#42,  // BYTE
		// VAR_OUTPUT
		ENO0		:= M 0.0,  // BOOL
		OUT0		:= MD 10,  // DWORD
		OUT1		:= MD 20,  // DWORD
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	MD 10,	L#11111111
	__ASSERT==	MD 20,	L#11111111
	
	
	L	0
	T	MB 0
	L	L#11111111
	T	MD 10
	T	MD 20
	CALL "FC_movebox_2" (
		// VAR_INPUT
		EN0		:= TRUE,  // BOOL
		EN1		:= FALSE,  // BOOL
		IN0		:= B#16#42,  // BYTE
		// VAR_OUTPUT
		ENO0		:= M 0.0,  // BOOL
		OUT0		:= MD 10,  // DWORD
		OUT1		:= MD 20,  // DWORD
	)
	__ASSERT==	M 0.0,	TRUE
	__ASSERT==	MD 10,	DW#16#42
	__ASSERT==	MD 20,	L#11111111
	
	
	L	0
	T	MB 0
	L	L#11111111
	T	MD 10
	T	MD 20
	CALL "FC_movebox_2" (
		// VAR_INPUT
		EN0		:= FALSE,  // BOOL
		EN1		:= TRUE,  // BOOL
		IN0		:= B#16#42,  // BYTE
		// VAR_OUTPUT
		ENO0		:= M 0.0,  // BOOL
		OUT0		:= MD 10,  // DWORD
		OUT1		:= MD 20,  // DWORD
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	MD 10,	L#11111111
	__ASSERT==	MD 20,	L#11111111
	
	
	L	0
	T	MB 0
	L	L#11111111
	T	MD 10
	T	MD 20
	CALL "FC_movebox_2" (
		// VAR_INPUT
		EN0		:= TRUE,  // BOOL
		EN1		:= TRUE,  // BOOL
		IN0		:= B#16#42,  // BYTE
		// VAR_OUTPUT
		ENO0		:= M 0.0,  // BOOL
		OUT0		:= MD 10,  // DWORD
		OUT1		:= MD 20,  // DWORD
	)
	__ASSERT==	M 0.0,	TRUE
	__ASSERT==	MD 10,	DW#16#42
	__ASSERT==	MD 20,	DW#16#42
	
	
	BE
END_FUNCTION
]]></source>
	</language_awl>

	<!-- FUP/FBD language configuration -->
	<language_fup>
		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="movebox 0"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FUP version="0">
	<blockdecl name='"FC_movebox_0"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="IN0" type="INT" />
			<field name="IN1" type="INT" />
			<field name="EN2" type="BOOL" />
			<field name="IN2" type="INT" />
			<field name="EN3" type="BOOL" />
			<field name="IN3" type="INT" />
			<field name="EN4" type="BOOL" />
			<field name="IN4" type="INT" />
			<field name="EN5" type="BOOL" />
			<field name="IN5" type="INT" />
			<field name="IN6" type="INT" />
			<field name="IN7" type="INT" />
			<field name="IN8" type="INT" />
		</inputs>
		<outputs>
			<field name="OUT0" type="INT" />
			<field name="OUT1_0" type="INT" />
			<field name="OUT1_1" type="INT" />
			<field name="OUT2" type="INT" />
			<field name="OUT3_0" type="INT" />
			<field name="OUT3_1" type="INT" />
			<field name="OUT4" type="INT" />
			<field name="ENO4" type="BOOL" />
			<field name="OUT5_0" type="INT" />
			<field name="OUT5_1" type="INT" />
			<field name="ENO5" type="BOOL" />
			<field name="OUT6" type="INT" />
			<field name="ENO6" type="BOOL" />
			<field name="OUT7_0" type="INT" />
			<field name="OUT7_1" type="INT" />
			<field name="ENO7" type="BOOL" />
			<field name="OUT8_0" type="INT" />
			<field name="OUT8_1" type="INT" />
			<field name="OUT8_2" type="INT" />
			<field name="OUT8_3" type="INT" />
			<field name="OUT8_4" type="INT" />
		</outputs>
		<retval>
			<field name="RET_VAL" type="void" />
		</retval>
	</interface>
	<grids>
		<grid height="32" width="12">
			<wires>
				<wire id="0" />
				<wire id="1" />
				<wire id="2" />
				<wire id="3" />
				<wire id="4" />
				<wire id="5" />
				<wire id="6" />
				<wire id="7" />
				<wire id="8" />
				<wire id="9" />
				<wire id="10" />
				<wire id="11" />
				<wire id="12" />
				<wire id="13" />
				<wire id="14" />
				<wire id="15" />
				<wire id="16" />
				<wire id="17" />
				<wire id="18" />
				<wire id="19" />
				<wire id="20" />
				<wire id="21" />
				<wire id="22" />
				<wire id="23" />
				<wire id="24" />
				<wire id="25" />
				<wire id="26" />
				<wire id="27" />
				<wire id="28" />
				<wire id="29" />
				<wire id="30" />
				<wire id="31" />
				<wire id="32" />
				<wire id="33" />
			</wires>
			<elements>
				<element type="move" x="2" y="1">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="-1" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="0" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="1" />
						<connection dir_in="0" dir_out="1" pos="1" text="ENO" wire="-1" />
					</connections>
				</element>
				<element content="#IN0" subtype="load" type="operand" x="1" y="3">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="0" />
					</connections>
				</element>
				<element content="#OUT0" subtype="assign" type="operand" x="3" y="2">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="1" />
					</connections>
				</element>
				<element type="move" x="2" y="6">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="2" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="3" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="4" />
						<connection dir_in="0" dir_out="1" pos="1" text="ENO" wire="-1" />
					</connections>
				</element>
				<element content="#EN2" subtype="load" type="operand" x="1" y="7">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="2" />
					</connections>
				</element>
				<element content="#IN2" subtype="load" type="operand" x="1" y="8">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="3" />
					</connections>
				</element>
				<element content="#OUT2" subtype="assign" type="operand" x="3" y="7">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="4" />
					</connections>
				</element>
				<element type="move" x="5" y="1">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="-1" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="5" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="6" />
						<connection dir_in="0" dir_out="1" pos="1" text="OUT1" wire="7" />
						<connection dir_in="0" dir_out="1" pos="2" text="ENO" wire="-1" />
					</connections>
				</element>
				<element content="#IN1" subtype="load" type="operand" x="4" y="3">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="5" />
					</connections>
				</element>
				<element content="#OUT1_0" subtype="assign" type="operand" x="6" y="2">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="6" />
					</connections>
				</element>
				<element content="#OUT1_1" subtype="assign" type="operand" x="6" y="3">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="7" />
					</connections>
				</element>
				<element type="move" x="5" y="6">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="8" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="9" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="10" />
						<connection dir_in="0" dir_out="1" pos="1" text="OUT1" wire="11" />
						<connection dir_in="0" dir_out="1" pos="2" text="ENO" wire="-1" />
					</connections>
				</element>
				<element content="#EN3" subtype="load" type="operand" x="4" y="7">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="8" />
					</connections>
				</element>
				<element content="#IN3" subtype="load" type="operand" x="4" y="8">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="9" />
					</connections>
				</element>
				<element content="#OUT3_0" subtype="assign" type="operand" x="6" y="7">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="10" />
					</connections>
				</element>
				<element content="#OUT3_1" subtype="assign" type="operand" x="6" y="8">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="11" />
					</connections>
				</element>
				<element type="move" x="2" y="11">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="12" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="13" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="14" />
						<connection dir_in="0" dir_out="1" pos="1" text="ENO" wire="15" />
					</connections>
				</element>
				<element content="#EN4" subtype="load" type="operand" x="1" y="12">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="12" />
					</connections>
				</element>
				<element content="#IN4" subtype="load" type="operand" x="1" y="13">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="13" />
					</connections>
				</element>
				<element content="#OUT4" subtype="assign" type="operand" x="3" y="12">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="14" />
					</connections>
				</element>
				<element content="#ENO4" subtype="assign" type="operand" x="3" y="13">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="15" />
					</connections>
				</element>
				<element type="move" x="5" y="11">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="16" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="17" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="18" />
						<connection dir_in="0" dir_out="1" pos="1" text="OUT1" wire="19" />
						<connection dir_in="0" dir_out="1" pos="2" text="ENO" wire="20" />
					</connections>
				</element>
				<element content="#EN5" subtype="load" type="operand" x="4" y="12">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="16" />
					</connections>
				</element>
				<element content="#IN5" subtype="load" type="operand" x="4" y="13">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="17" />
					</connections>
				</element>
				<element content="#OUT5_0" subtype="assign" type="operand" x="6" y="12">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="18" />
					</connections>
				</element>
				<element content="#OUT5_1" subtype="assign" type="operand" x="6" y="13">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="19" />
					</connections>
				</element>
				<element content="#ENO5" subtype="assign" type="operand" x="6" y="14">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="20" />
					</connections>
				</element>
				<element type="move" x="2" y="16">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="-1" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="21" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="22" />
						<connection dir_in="0" dir_out="1" pos="1" text="ENO" wire="23" />
					</connections>
				</element>
				<element content="#IN6" subtype="load" type="operand" x="1" y="18">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="21" />
					</connections>
				</element>
				<element content="#OUT6" subtype="assign" type="operand" x="3" y="17">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="22" />
					</connections>
				</element>
				<element content="#ENO6" subtype="assign" type="operand" x="3" y="18">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="23" />
					</connections>
				</element>
				<element type="move" x="5" y="16">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="-1" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="24" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="25" />
						<connection dir_in="0" dir_out="1" pos="1" text="OUT1" wire="26" />
						<connection dir_in="0" dir_out="1" pos="2" text="ENO" wire="27" />
					</connections>
				</element>
				<element content="#IN7" subtype="load" type="operand" x="4" y="18">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="24" />
					</connections>
				</element>
				<element content="#OUT7_0" subtype="assign" type="operand" x="6" y="17">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="25" />
					</connections>
				</element>
				<element content="#OUT7_1" subtype="assign" type="operand" x="6" y="18">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="26" />
					</connections>
				</element>
				<element content="#ENO7" subtype="assign" type="operand" x="6" y="19">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="27" />
					</connections>
				</element>
				<element type="move" x="5" y="21">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="-1" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="28" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="29" />
						<connection dir_in="0" dir_out="1" pos="1" text="OUT1" wire="30" />
						<connection dir_in="0" dir_out="1" pos="2" text="OUT2" wire="31" />
						<connection dir_in="0" dir_out="1" pos="3" text="OUT3" wire="32" />
						<connection dir_in="0" dir_out="1" pos="4" text="OUT4" wire="33" />
						<connection dir_in="0" dir_out="1" pos="5" text="ENO" wire="-1" />
					</connections>
				</element>
				<element content="#IN8" subtype="load" type="operand" x="4" y="23">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="28" />
					</connections>
				</element>
				<element content="#OUT8_0" subtype="assign" type="operand" x="6" y="22">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="29" />
					</connections>
				</element>
				<element content="#OUT8_1" subtype="assign" type="operand" x="6" y="23">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="30" />
					</connections>
				</element>
				<element content="#OUT8_2" subtype="assign" type="operand" x="6" y="24">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="31" />
					</connections>
				</element>
				<element content="#OUT8_3" subtype="assign" type="operand" x="6" y="25">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="32" />
					</connections>
				</element>
				<element content="#OUT8_4" subtype="assign" type="operand" x="6" y="26">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="33" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>

		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="movebox 1"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FUP version="0">
	<blockdecl name='"FC_movebox_1"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="IN0" type="DINT" />
			<field name="EN1" type="BOOL" />
			<field name="EN2" type="BOOL" />
			<field name="EN40" type="BOOL" />
			<field name="EN41" type="BOOL" />
			<field name="IN4" type="INT" />
		</inputs>
		<outputs>
			<field name="OUT0" type="WORD" />
			<field name="OUT2" type="WORD" />
			<field name="OUT3" type="DINT" />
			<field name="OUT4" type="DINT" />
		</outputs>
		<retval>
			<field name="RET_VAL" type="VOID" />
		</retval>
	</interface>
	<grids>
		<grid height="20" width="13">
			<wires>
				<wire id="0" />
				<wire id="1" />
				<wire id="2" />
				<wire id="3" />
				<wire id="4" />
				<wire id="5" />
				<wire id="6" />
				<wire id="7" />
				<wire id="8" />
				<wire id="9" />
				<wire id="10" />
				<wire id="11" />
				<wire id="12" />
			</wires>
			<elements>
				<element type="move" x="2" y="7">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="-1" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="1" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="0" />
						<connection dir_in="0" dir_out="1" pos="1" text="OUT1" wire="2" />
						<connection dir_in="0" dir_out="1" pos="2" text="ENO" wire="-1" />
					</connections>
				</element>
				<element type="move" x="4" y="6">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="3" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="0" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="5" />
						<connection dir_in="0" dir_out="1" pos="1" text="ENO" wire="-1" />
					</connections>
				</element>
				<element content="#IN0" subtype="load" type="operand" x="1" y="9">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="1" />
					</connections>
				</element>
				<element content="#OUT2" subtype="assign" type="operand" x="7" y="3">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="4" />
					</connections>
				</element>
				<element content="#OUT0" subtype="assign" type="operand" x="3" y="9">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="2" />
					</connections>
				</element>
				<element content="#EN1" subtype="load" type="operand" x="3" y="7">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="3" />
					</connections>
				</element>
				<element type="move" x="6" y="5">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="6" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="5" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="4" />
						<connection dir_in="0" dir_out="1" pos="1" text="ENO" wire="-1" />
					</connections>
				</element>
				<element content="#EN2" subtype="load" type="operand" x="5" y="6">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="6" />
					</connections>
				</element>
				<element type="move" x="2" y="13">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="9" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="7" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="8" />
						<connection dir_in="0" dir_out="1" pos="1" text="ENO" wire="-1" />
					</connections>
				</element>
				<element content="#IN4" subtype="load" type="operand" x="1" y="15">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="7" />
					</connections>
				</element>
				<element content="#OUT4" subtype="assign" type="operand" x="3" y="14">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="8" />
					</connections>
				</element>
				<element subtype="and" type="boolean" x="1" y="12">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="10" />
						<connection dir_in="1" dir_out="0" pos="1" wire="11" />
						<connection dir_in="0" dir_out="1" pos="0" wire="9" />
					</connections>
				</element>
				<element content="#EN40" subtype="load" type="operand" x="0" y="12">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="10" />
					</connections>
				</element>
				<element content="#EN41" subtype="load" type="operand" x="0" y="13">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="11" />
					</connections>
				</element>
				<element type="move" x="8" y="4">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="-1" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="4" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="12" />
						<connection dir_in="0" dir_out="1" pos="1" text="ENO" wire="-1" />
					</connections>
				</element>
				<element content="#OUT3" subtype="assign" type="operand" x="9" y="5">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="12" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>

		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="movebox 2"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<FUP version="0">
	<blockdecl name='"FC_movebox_2"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="EN0" type="BOOL" />
			<field name="EN1" type="BOOL" />
			<field name="IN0" type="BYTE" />
		</inputs>
		<outputs>
			<field name="ENO0" type="BOOL" />
			<field name="OUT0" type="DWORD" />
			<field name="OUT1" type="DWORD" />
		</outputs>
		<retval>
			<field name="RET_VAL" type="VOID" />
		</retval>
	</interface>
	<grids>
		<grid height="18" width="12">
			<wires>
				<wire id="0" />
				<wire id="1" />
				<wire id="2" />
				<wire id="3" />
				<wire id="4" />
				<wire id="5" />
				<wire id="6" />
			</wires>
			<elements>
				<element type="move" x="2" y="3">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="3" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="4" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="2" />
						<connection dir_in="0" dir_out="1" pos="1" text="OUT1" wire="0" />
						<connection dir_in="0" dir_out="1" pos="2" text="ENO" wire="6" />
					</connections>
				</element>
				<element type="move" x="6" y="3">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" wire="1" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" wire="0" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" wire="5" />
						<connection dir_in="0" dir_out="1" pos="1" text="ENO" wire="-1" />
					</connections>
				</element>
				<element content="#EN1" subtype="load" type="operand" x="5" y="4">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="1" />
					</connections>
				</element>
				<element content="#OUT0" subtype="assign" type="operand" x="3" y="4">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="2" />
					</connections>
				</element>
				<element content="#EN0" subtype="load" type="operand" x="1" y="4">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="3" />
					</connections>
				</element>
				<element content="#IN0" subtype="load" type="operand" x="1" y="5">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" wire="4" />
					</connections>
				</element>
				<element content="#OUT1" subtype="assign" type="operand" x="7" y="4">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="5" />
					</connections>
				</element>
				<element content="#ENO0" subtype="assign" type="operand" x="3" y="6">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" wire="6" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>
	</language_fup>

	<!-- Symbol table configuration -->
	<symbols>
		<!-- symbol table source code -->
		<source enabled="1"
		        name="symbol table"
		        type="3"><![CDATA[
126,FC_movebox_0            FC 20       FC 20
126,FC_TEST_movebox_0       FC 21       FC 21
126,FC_movebox_1            FC 30       FC 30
126,FC_TEST_movebox_1       FC 31       FC 31
126,FC_movebox_2            FC 40       FC 40
126,FC_TEST_movebox_2       FC 41       FC 41

]]></source>
	</symbols>

	<!-- Core server link configuration -->
	<core_link>
		<!-- Locally spawned core server -->
		<spawn_local enable="1"
		             interpreters="$DEFAULT"
		             port_range_begin="4183"
		             port_range_end="8278" />

		<!-- Remote server connection -->
		<connect host="192.168.179.31"
		         port="4151"
		         timeout_ms="3000" />

		<!-- Transport tunnel -->
		<tunnel local_port="-1"
		        type="0">
			<ssh executable="ssh"
			     port="22"
			     user="pi" />
		</tunnel>
	</core_link>

	<!-- Hardware modules configuration -->
	<hardware>
		<!-- Loaded hardware module -->
		<module name="dummy">
			<params>
				<param name="inputAddressBase"
				       value="0" />
				<param name="outputAddressBase"
				       value="0" />
				<param name="removeOnReset"
				       value="True" />
			</params>
		</module>
	</hardware>

	<!-- Graphical user interface configuration -->
	<gui>
		<editor autoindent="1"
		        font="Courier,12,-1,2,50,0,0,0,0,0"
		        paste_autoindent="1"
		        validation="1" />
	</gui>
</awlsim_project>
