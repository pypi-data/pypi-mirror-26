# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rst/cbse/Tick.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rst.timing import Timestamp_pb2 as rst_dot_timing_dot_Timestamp__pb2
from rst.timing import Duration_pb2 as rst_dot_timing_dot_Duration__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rst/cbse/Tick.proto',
  package='rst.cbse',
  syntax='proto2',
  serialized_pb=_b('\n\x13rst/cbse/Tick.proto\x12\x08rst.cbse\x1a\x1arst/timing/Timestamp.proto\x1a\x19rst/timing/Duration.proto\"\xd3\x01\n\x04Tick\x12\x17\n\x0fsequence_number\x18\x01 \x02(\r\x12(\n\ttimestamp\x18\x02 \x02(\x0b\x32\x15.rst.timing.Timestamp\x12\x30\n\x11virtual_timestamp\x18\x03 \x01(\x0b\x32\x15.rst.timing.Timestamp\x12&\n\x08timestep\x18\x04 \x01(\x0b\x32\x14.rst.timing.Duration\x12.\n\x10virtual_timestep\x18\x05 \x01(\x0b\x32\x14.rst.timing.DurationB\nB\x08TickType')
  ,
  dependencies=[rst_dot_timing_dot_Timestamp__pb2.DESCRIPTOR,rst_dot_timing_dot_Duration__pb2.DESCRIPTOR,])




_TICK = _descriptor.Descriptor(
  name='Tick',
  full_name='rst.cbse.Tick',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sequence_number', full_name='rst.cbse.Tick.sequence_number', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='rst.cbse.Tick.timestamp', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='virtual_timestamp', full_name='rst.cbse.Tick.virtual_timestamp', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestep', full_name='rst.cbse.Tick.timestep', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='virtual_timestep', full_name='rst.cbse.Tick.virtual_timestep', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=89,
  serialized_end=300,
)

_TICK.fields_by_name['timestamp'].message_type = rst_dot_timing_dot_Timestamp__pb2._TIMESTAMP
_TICK.fields_by_name['virtual_timestamp'].message_type = rst_dot_timing_dot_Timestamp__pb2._TIMESTAMP
_TICK.fields_by_name['timestep'].message_type = rst_dot_timing_dot_Duration__pb2._DURATION
_TICK.fields_by_name['virtual_timestep'].message_type = rst_dot_timing_dot_Duration__pb2._DURATION
DESCRIPTOR.message_types_by_name['Tick'] = _TICK
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Tick = _reflection.GeneratedProtocolMessageType('Tick', (_message.Message,), dict(
  DESCRIPTOR = _TICK,
  __module__ = 'rst.cbse.Tick_pb2'
  # @@protoc_insertion_point(class_scope:rst.cbse.Tick)
  ))
_sym_db.RegisterMessage(Tick)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('B\010TickType'))
# @@protoc_insertion_point(module_scope)
