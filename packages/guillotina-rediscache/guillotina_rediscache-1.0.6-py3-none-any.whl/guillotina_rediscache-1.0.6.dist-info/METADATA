Metadata-Version: 2.0
Name: guillotina-rediscache
Version: 1.0.6
Summary: guillotina cache implementation using redis + lru in-memory cache
Home-page: https://github.com/guillotinaweb/guillotina_rediscache
Author: Nathan Van Gheem
Author-email: vangheem@gmail.com
License: BSD
Keywords: asyncio,REST,guillotina,cache,redis
Platform: UNKNOWN
Classifier: License :: OSI Approved :: BSD License
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Dist: guillotina
Requires-Dist: aioredis
Requires-Dist: lru-dict
Requires-Dist: ujson
Provides-Extra: test
Requires-Dist: pytest; extra == 'test'
Requires-Dist: docker; extra == 'test'
Requires-Dist: backoff; extra == 'test'
Requires-Dist: psycopg2; extra == 'test'
Requires-Dist: pytest-asyncio (<=0.5.0); extra == 'test'
Requires-Dist: pytest-asyncio (<=0.5.0); extra == 'test'
Requires-Dist: pytest-aiohttp; extra == 'test'

Introduction
============

.. image:: https://travis-ci.org/guillotinaweb/guillotina_rediscache.svg?branch=master
   :target: https://travis-ci.org/guillotinaweb/guillotina_rediscache


`guillotina_rediscache` implements redis into guillotina with an additional
in-memory layer cache.

In order to coordinate invalidating the in-memory cache, `guillotina_rediscache`
utilizes the pub/sub feature redis provides.



Configuration
-------------

app_settings for this::

    {
      "databases": {
        "db": {
          ...
          "cache_strategy": "redis"
          ...
        }
      },
      "redis": {
          'host': 'localhost',
          'port': 6379,
          'ttl': 3600,
          'memory_cache_size': 1000,
          'pool': {
              'minsize': 5,
              'maxsize': 100
          }
      }
    }

1.0.6 (2017-10-19)
------------------

- Use ujson
  [vangheem]


1.0.5 (2017-10-02)
------------------

- Track all keys needing invalidation and do invalidation in an async task
  so the request can finish faster.
  [vangheem]


1.0.4 (2017-05-29)
------------------

- Test fixes
  [vangheem]


1.0.3 (2017-05-26)
------------------

- Fix delete not properly invalidating cache
  [vangheem]


1.0.2 (2017-05-15)
------------------

- Fix channel publishing invalidations
  [vangheem]


1.0.1 (2017-05-15)
------------------

- Fix release


1.0.0 (2017-05-15)
------------------

- initial release


