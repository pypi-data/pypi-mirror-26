
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'INT STRING ASTERIX LPAREN RPAREN LBRACK RBRACK LBRACE RBRACE ASSIGN COLON COMMA PercentID AtID ID ADD SUB MUL SHL LSHR ASHR AND OR XOR SDIV EQ NE SLT SLE SGT SGE ALLOCA LOAD STORE ICMP CALL BITCAST GETELEMENTPTR ZEXT PTRTOINT RET BR LABEL DEFINE NULL GLOBAL TYPE TO VOID I1 I8 I32 I64program : top_decstop_decs : tdec top_decs\n            | gdec top_decs\n            | fdec top_decstop_decs : tdec : PercentID ASSIGN TYPE tyty : VOIDty : I1ty : I8ty : I32ty : I64ty : ty ASTERIXty : LBRACE ty_list RBRACEty : LBRACK INT ID ty RBRACKty : ty LPAREN ty_list RPARENty : PercentIDty_list : tyty_list : ty COMMA ty_listty_list : gdec : AtID ASSIGN GLOBAL ty ginitginit : NULLginit : AtIDginit : INTginit : STRINGginit : LBRACK ty_ginit_list RBRACKginit : LBRACE ty_ginit_list RBRACEty_ginit_list : ty ginitty_ginit_list : ty ginit COMMA ty_ginit_listty_ginit_list : fdec : DEFINE ty AtID LPAREN ty_id_list RPAREN LBRACE fbody RBRACEty_id_list : ty PercentIDty_id_list : ty PercentID COMMA ty_id_listty_id_list : fbody : block named_block_listfbody : blockblock : insns terminatorblock : terminatorinsns : optionally_named_insninsns : optionally_named_insn insnsoptionally_named_insn : PercentID ASSIGN insnoptionally_named_insn : insninsn : bop ty operand COMMA operandinsn : ALLOCA tyinsn : LOAD ty COMMA ty operandinsn : STORE ty operand COMMA ty operandinsn : ICMP cnd ty operand COMMA operandinsn : CALL ty operand LPAREN ty_operand_list RPARENinsn : CALL ty operand LPAREN RPARENinsn : BITCAST ty operand TO tyinsn : GETELEMENTPTR ty COMMA ty operand COMMA ty_operand_listinsn : GETELEMENTPTR ty COMMA ty operandinsn : ZEXT ty operand TO tyinsn : PTRTOINT ty ASTERIX operand TO tybop : ADD\n            | SUB\n            | MUL\n            | SHL\n            | LSHR\n            | ASHR\n            | AND\n            | OR\n            | XOR\n            | SDIVcnd : EQ\n            | NE\n            | SLT\n            | SLE\n            | SGT\n            | SGEty_operand_list : ty operandty_operand_list : ty operand COMMA ty_operand_listterminator : RET VOIDterminator : RET ty operandterminator : BR LABEL PercentIDterminator : BR ty operand COMMA LABEL PercentID COMMA LABEL PercentIDoperand : NULLoperand : INToperand : AtIDoperand : PercentIDnamed_block_list : ID COLON blocknamed_block_list : ID COLON block named_block_list'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,9,10,11,16,17,18,19,20,22,27,31,35,38,39,40,41,42,47,55,56,58,93,],[-5,0,-1,-5,-5,-5,-2,-3,-4,-7,-8,-9,-10,-11,-16,-12,-6,-13,-22,-20,-21,-23,-24,-15,-14,-25,-26,-30,]),'PercentID':([0,3,4,5,8,15,16,17,18,19,20,22,23,24,26,27,31,33,35,36,37,38,39,40,41,42,43,44,45,47,55,56,58,59,60,61,67,68,69,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,98,99,100,101,103,104,106,107,108,109,110,111,112,113,114,115,117,119,121,122,123,124,127,129,131,134,136,139,140,141,143,144,145,146,149,150,151,152,153,154,156,157,158,159,160,162,163,164,165,166,167,169,170,171,172,],[6,6,6,6,22,22,-7,-8,-9,-10,-11,-16,22,22,22,-12,-6,22,-13,22,22,-22,-20,-21,-23,-24,22,22,53,-15,-14,-25,-26,22,70,22,70,22,22,-41,22,22,22,22,22,22,22,22,22,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-30,-7,124,125,124,124,-43,124,22,-64,-65,-66,-67,-68,-69,124,124,124,70,-76,-77,-78,-79,-40,22,124,22,124,124,124,22,22,22,124,22,161,-42,-44,124,124,124,-48,-49,-51,-52,22,-45,-46,-70,-47,22,-53,22,-50,173,-71,]),'AtID':([0,3,4,5,14,16,17,18,19,20,22,27,31,32,35,38,39,40,41,42,47,51,55,56,58,93,98,99,101,103,106,114,115,117,131,136,139,140,145,152,153,154,],[7,7,7,7,25,-7,-8,-9,-10,-11,-16,-12,-6,38,-13,-22,-20,-21,-23,-24,-15,38,-14,-25,-26,-30,-7,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'DEFINE':([0,3,4,5,16,17,18,19,20,22,27,31,35,38,39,40,41,42,47,55,56,58,93,],[8,8,8,8,-7,-8,-9,-10,-11,-16,-12,-6,-13,-22,-20,-21,-23,-24,-15,-14,-25,-26,-30,]),'ASSIGN':([6,7,70,],[12,13,102,]),'VOID':([8,15,23,24,26,33,36,37,43,44,59,61,68,69,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,107,108,109,110,111,112,113,129,134,141,143,144,146,160,166,169,],[16,16,16,16,16,16,16,16,16,16,16,16,98,16,16,16,16,16,16,16,16,16,16,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,16,-64,-65,-66,-67,-68,-69,16,16,16,16,16,16,16,16,16,]),'I1':([8,15,23,24,26,33,36,37,43,44,59,61,68,69,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,107,108,109,110,111,112,113,129,134,141,143,144,146,160,166,169,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,17,-64,-65,-66,-67,-68,-69,17,17,17,17,17,17,17,17,17,]),'I8':([8,15,23,24,26,33,36,37,43,44,59,61,68,69,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,107,108,109,110,111,112,113,129,134,141,143,144,146,160,166,169,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,18,-64,-65,-66,-67,-68,-69,18,18,18,18,18,18,18,18,18,]),'I32':([8,15,23,24,26,33,36,37,43,44,59,61,68,69,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,107,108,109,110,111,112,113,129,134,141,143,144,146,160,166,169,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,19,-64,-65,-66,-67,-68,-69,19,19,19,19,19,19,19,19,19,]),'I64':([8,15,23,24,26,33,36,37,43,44,59,61,68,69,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,107,108,109,110,111,112,113,129,134,141,143,144,146,160,166,169,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,20,-64,-65,-66,-67,-68,-69,20,20,20,20,20,20,20,20,20,]),'LBRACE':([8,15,16,17,18,19,20,22,23,24,26,27,32,33,35,36,37,43,44,47,51,54,55,59,61,68,69,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,107,108,109,110,111,112,113,129,134,141,143,144,146,160,166,169,],[15,15,-7,-8,-9,-10,-11,-16,15,15,15,-12,44,15,-13,15,15,15,15,-15,44,60,-14,15,15,15,15,15,15,15,15,15,15,15,15,15,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,15,-64,-65,-66,-67,-68,-69,15,15,15,15,15,15,15,15,15,]),'LBRACK':([8,15,16,17,18,19,20,22,23,24,26,27,32,33,35,36,37,43,44,47,51,55,59,61,68,69,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,107,108,109,110,111,112,113,129,134,141,143,144,146,160,166,169,],[21,21,-7,-8,-9,-10,-11,-16,21,21,21,-12,43,21,-13,21,21,21,21,-15,43,-14,21,21,21,21,21,21,21,21,21,21,21,21,21,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,21,-64,-65,-66,-67,-68,-69,21,21,21,21,21,21,21,21,21,]),'TYPE':([12,],[23,]),'GLOBAL':([13,],[24,]),'ASTERIX':([14,16,17,18,19,20,22,27,29,31,32,35,45,47,49,51,55,98,99,101,103,104,105,106,114,115,116,117,118,131,136,140,145,152,154,157,159,167,],[27,-7,-8,-9,-10,-11,-16,-12,27,27,27,-13,27,-15,27,27,-14,-7,27,27,27,27,27,27,27,27,27,27,136,27,-12,27,27,27,27,27,27,27,]),'LPAREN':([14,16,17,18,19,20,22,25,27,29,31,32,35,45,47,49,51,55,98,99,101,103,104,105,106,114,115,116,117,118,121,122,123,124,131,132,136,140,145,152,154,157,159,167,],[26,-7,-8,-9,-10,-11,-16,33,-12,26,26,26,-13,26,-15,26,26,-14,-7,26,26,26,26,26,26,26,26,26,26,26,-76,-77,-78,-79,26,143,-12,26,26,26,26,26,26,26,]),'RBRACE':([15,16,17,18,19,20,22,27,28,29,35,36,38,40,41,42,44,47,48,52,55,56,57,58,61,63,64,66,92,94,96,98,120,121,122,123,124,125,137,148,173,],[-19,-7,-8,-9,-10,-11,-16,-12,35,-17,-13,-19,-22,-21,-23,-24,-29,-15,-18,58,-14,-25,-27,-26,-29,93,-35,-37,-28,-34,-36,-72,-73,-76,-77,-78,-79,-74,-80,-81,-75,]),'COMMA':([16,17,18,19,20,22,27,29,35,38,40,41,42,47,53,55,56,57,58,105,116,121,122,123,124,126,128,130,142,158,161,164,],[-7,-8,-9,-10,-11,-16,-12,36,-13,-22,-21,-23,-24,-15,59,-14,-25,61,-26,129,134,-76,-77,-78,-79,138,139,141,153,166,168,169,]),'NULL':([16,17,18,19,20,22,27,32,35,47,51,55,98,99,101,103,106,114,115,117,131,136,139,140,145,152,153,154,],[-7,-8,-9,-10,-11,-16,-12,40,-13,-15,40,-14,-7,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'INT':([16,17,18,19,20,21,22,27,32,35,47,51,55,98,99,101,103,106,114,115,117,131,136,139,140,145,152,153,154,],[-7,-8,-9,-10,-11,30,-16,-12,41,-13,-15,41,-14,-7,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'STRING':([16,17,18,19,20,22,27,32,35,47,51,55,],[-7,-8,-9,-10,-11,-16,-12,42,-13,-15,42,-14,]),'RPAREN':([16,17,18,19,20,22,26,27,29,33,34,35,36,46,47,48,53,55,59,62,121,122,123,124,143,155,164,172,],[-7,-8,-9,-10,-11,-16,-19,-12,-17,-33,47,-13,-19,54,-15,-18,-31,-14,-33,-32,-76,-77,-78,-79,156,165,-70,-71,]),'RBRACK':([16,17,18,19,20,22,27,35,38,40,41,42,43,47,49,50,55,56,57,58,61,92,],[-7,-8,-9,-10,-11,-16,-12,-13,-22,-21,-23,-24,-29,-15,55,56,-14,-25,-27,-26,-29,-28,]),'ALLOCA':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,73,73,-41,73,-43,73,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'LOAD':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,74,74,-41,74,-43,74,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'STORE':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,75,75,-41,75,-43,75,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'ICMP':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,76,76,-41,76,-43,76,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'CALL':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,77,77,-41,77,-43,77,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'BITCAST':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,78,78,-41,78,-43,78,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'GETELEMENTPTR':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,79,79,-41,79,-43,79,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'ZEXT':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,80,80,-41,80,-43,80,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'PTRTOINT':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,81,81,-41,81,-43,81,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'ADD':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,82,82,-41,82,-43,82,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'SUB':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,83,83,-41,83,-43,83,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'MUL':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,84,84,-41,84,-43,84,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'SHL':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,85,85,-41,85,-43,85,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'LSHR':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,86,86,-41,86,-43,86,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'ASHR':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,87,87,-41,87,-43,87,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'AND':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,88,88,-41,88,-43,88,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'OR':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,89,89,-41,89,-43,89,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'XOR':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,90,90,-41,90,-43,90,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'SDIV':([16,17,18,19,20,22,27,35,47,55,60,67,71,102,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,91,91,-41,91,-43,91,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'RET':([16,17,18,19,20,22,27,35,47,55,60,65,67,71,97,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,68,68,-38,-41,-39,-43,68,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'BR':([16,17,18,19,20,22,27,35,47,55,60,65,67,71,97,104,119,121,122,123,124,127,150,151,156,157,158,159,162,163,164,165,167,170,172,],[-7,-8,-9,-10,-11,-16,-12,-13,-15,-14,69,69,-38,-41,-39,-43,69,-76,-77,-78,-79,-40,-42,-44,-48,-49,-51,-52,-45,-46,-70,-47,-53,-50,-71,]),'ID':([30,64,66,96,98,120,121,122,123,124,125,137,173,],[37,95,-37,-36,-72,-73,-76,-77,-78,-79,-74,95,-75,]),'LABEL':([69,138,168,],[100,149,171,]),'EQ':([76,],[108,]),'NE':([76,],[109,]),'SLT':([76,],[110,]),'SLE':([76,],[111,]),'SGT':([76,],[112,]),'SGE':([76,],[113,]),'COLON':([95,],[119,]),'TO':([121,122,123,124,133,135,147,],[-76,-77,-78,-79,144,146,160,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'top_decs':([0,3,4,5,],[2,9,10,11,]),'tdec':([0,3,4,5,],[3,3,3,3,]),'gdec':([0,3,4,5,],[4,4,4,4,]),'fdec':([0,3,4,5,],[5,5,5,5,]),'ty':([8,15,23,24,26,33,36,37,43,44,59,61,68,69,72,73,74,75,77,78,79,80,81,107,129,134,141,143,144,146,160,166,169,],[14,29,31,32,29,45,29,49,51,51,45,51,99,101,103,104,105,106,114,115,116,117,118,131,140,145,152,154,157,159,167,154,154,]),'ty_list':([15,26,36,],[28,34,48,]),'ginit':([32,51,],[39,57,]),'ty_id_list':([33,59,],[46,62,]),'ty_ginit_list':([43,44,61,],[50,52,92,]),'fbody':([60,],[63,]),'block':([60,119,],[64,137,]),'insns':([60,67,119,],[65,97,65,]),'terminator':([60,65,119,],[66,96,66,]),'optionally_named_insn':([60,67,119,],[67,67,67,]),'insn':([60,67,102,119,],[71,71,127,71,]),'bop':([60,67,102,119,],[72,72,72,72,]),'named_block_list':([64,137,],[94,148,]),'cnd':([76,],[107,]),'operand':([99,101,103,106,114,115,117,131,136,139,140,145,152,153,154,],[120,126,128,130,132,133,135,142,147,150,151,158,162,163,164,]),'ty_operand_list':([143,166,169,],[155,170,172,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> top_decs','program',1,'p_program','parser.py',184),
  ('top_decs -> tdec top_decs','top_decs',2,'p_topdecs_some','parser.py',189),
  ('top_decs -> gdec top_decs','top_decs',2,'p_topdecs_some','parser.py',190),
  ('top_decs -> fdec top_decs','top_decs',2,'p_topdecs_some','parser.py',191),
  ('top_decs -> <empty>','top_decs',0,'p_topdecs_empty','parser.py',195),
  ('tdec -> PercentID ASSIGN TYPE ty','tdec',4,'p_tdec','parser.py',199),
  ('ty -> VOID','ty',1,'p_ty_void','parser.py',203),
  ('ty -> I1','ty',1,'p_ty_i1','parser.py',207),
  ('ty -> I8','ty',1,'p_ty_i8','parser.py',211),
  ('ty -> I32','ty',1,'p_ty_i32','parser.py',215),
  ('ty -> I64','ty',1,'p_ty_i64','parser.py',219),
  ('ty -> ty ASTERIX','ty',2,'p_ty_ptr','parser.py',223),
  ('ty -> LBRACE ty_list RBRACE','ty',3,'p_ty_struct','parser.py',227),
  ('ty -> LBRACK INT ID ty RBRACK','ty',5,'p_ty_array','parser.py',231),
  ('ty -> ty LPAREN ty_list RPAREN','ty',4,'p_ty_fun','parser.py',240),
  ('ty -> PercentID','ty',1,'p_ty_id','parser.py',244),
  ('ty_list -> ty','ty_list',1,'p_ty_list_single','parser.py',248),
  ('ty_list -> ty COMMA ty_list','ty_list',3,'p_ty_list_multiple','parser.py',252),
  ('ty_list -> <empty>','ty_list',0,'p_ty_list_empty','parser.py',256),
  ('gdec -> AtID ASSIGN GLOBAL ty ginit','gdec',5,'p_gdec','parser.py',260),
  ('ginit -> NULL','ginit',1,'p_ginit_null','parser.py',264),
  ('ginit -> AtID','ginit',1,'p_ginit_id','parser.py',268),
  ('ginit -> INT','ginit',1,'p_ginit_int','parser.py',272),
  ('ginit -> STRING','ginit',1,'p_ginit_string','parser.py',276),
  ('ginit -> LBRACK ty_ginit_list RBRACK','ginit',3,'p_ginit_array','parser.py',280),
  ('ginit -> LBRACE ty_ginit_list RBRACE','ginit',3,'p_ginit_struct','parser.py',285),
  ('ty_ginit_list -> ty ginit','ty_ginit_list',2,'p_ty_ginit_list_single','parser.py',289),
  ('ty_ginit_list -> ty ginit COMMA ty_ginit_list','ty_ginit_list',4,'p_ty_ginit_list_multiple','parser.py',293),
  ('ty_ginit_list -> <empty>','ty_ginit_list',0,'p_ty_ginit_list_empty','parser.py',297),
  ('fdec -> DEFINE ty AtID LPAREN ty_id_list RPAREN LBRACE fbody RBRACE','fdec',9,'p_fdec','parser.py',301),
  ('ty_id_list -> ty PercentID','ty_id_list',2,'p_ty_id_list_single','parser.py',305),
  ('ty_id_list -> ty PercentID COMMA ty_id_list','ty_id_list',4,'p_ty_id_list_multiple','parser.py',309),
  ('ty_id_list -> <empty>','ty_id_list',0,'p_ty_id_list_empty','parser.py',313),
  ('fbody -> block named_block_list','fbody',2,'p_fbody_multiple_blocks','parser.py',317),
  ('fbody -> block','fbody',1,'p_fbody_one_block','parser.py',322),
  ('block -> insns terminator','block',2,'p_block_insns_terminator','parser.py',326),
  ('block -> terminator','block',1,'p_block_terminator','parser.py',330),
  ('insns -> optionally_named_insn','insns',1,'p_insns_single','parser.py',334),
  ('insns -> optionally_named_insn insns','insns',2,'p_insns_multiple','parser.py',338),
  ('optionally_named_insn -> PercentID ASSIGN insn','optionally_named_insn',3,'p_optionally_named_insn_some','parser.py',342),
  ('optionally_named_insn -> insn','optionally_named_insn',1,'p_optionally_named_insn_none','parser.py',346),
  ('insn -> bop ty operand COMMA operand','insn',5,'p_insn_bop','parser.py',350),
  ('insn -> ALLOCA ty','insn',2,'p_insn_alloca','parser.py',354),
  ('insn -> LOAD ty COMMA ty operand','insn',5,'p_insn_load','parser.py',358),
  ('insn -> STORE ty operand COMMA ty operand','insn',6,'p_insn_store','parser.py',362),
  ('insn -> ICMP cnd ty operand COMMA operand','insn',6,'p_insn_icmp','parser.py',366),
  ('insn -> CALL ty operand LPAREN ty_operand_list RPAREN','insn',6,'p_insn_call','parser.py',370),
  ('insn -> CALL ty operand LPAREN RPAREN','insn',5,'p_insn_call_empty','parser.py',374),
  ('insn -> BITCAST ty operand TO ty','insn',5,'p_insn_bitcast','parser.py',378),
  ('insn -> GETELEMENTPTR ty COMMA ty operand COMMA ty_operand_list','insn',7,'p_insn_gep','parser.py',382),
  ('insn -> GETELEMENTPTR ty COMMA ty operand','insn',5,'p_insn_gep_empty','parser.py',386),
  ('insn -> ZEXT ty operand TO ty','insn',5,'p_insn_zext','parser.py',390),
  ('insn -> PTRTOINT ty ASTERIX operand TO ty','insn',6,'p_insn_ptrtoint','parser.py',394),
  ('bop -> ADD','bop',1,'p_bop','parser.py',398),
  ('bop -> SUB','bop',1,'p_bop','parser.py',399),
  ('bop -> MUL','bop',1,'p_bop','parser.py',400),
  ('bop -> SHL','bop',1,'p_bop','parser.py',401),
  ('bop -> LSHR','bop',1,'p_bop','parser.py',402),
  ('bop -> ASHR','bop',1,'p_bop','parser.py',403),
  ('bop -> AND','bop',1,'p_bop','parser.py',404),
  ('bop -> OR','bop',1,'p_bop','parser.py',405),
  ('bop -> XOR','bop',1,'p_bop','parser.py',406),
  ('bop -> SDIV','bop',1,'p_bop','parser.py',407),
  ('cnd -> EQ','cnd',1,'p_cnd','parser.py',411),
  ('cnd -> NE','cnd',1,'p_cnd','parser.py',412),
  ('cnd -> SLT','cnd',1,'p_cnd','parser.py',413),
  ('cnd -> SLE','cnd',1,'p_cnd','parser.py',414),
  ('cnd -> SGT','cnd',1,'p_cnd','parser.py',415),
  ('cnd -> SGE','cnd',1,'p_cnd','parser.py',416),
  ('ty_operand_list -> ty operand','ty_operand_list',2,'p_ty_operand_list_single','parser.py',420),
  ('ty_operand_list -> ty operand COMMA ty_operand_list','ty_operand_list',4,'p_ty_operand_list_multiple','parser.py',424),
  ('terminator -> RET VOID','terminator',2,'p_terminator_ret_void','parser.py',428),
  ('terminator -> RET ty operand','terminator',3,'p_terminator_ret_oper','parser.py',432),
  ('terminator -> BR LABEL PercentID','terminator',3,'p_terminator_branch','parser.py',436),
  ('terminator -> BR ty operand COMMA LABEL PercentID COMMA LABEL PercentID','terminator',9,'p_terminator_conditional_branch','parser.py',440),
  ('operand -> NULL','operand',1,'p_operand_null','parser.py',444),
  ('operand -> INT','operand',1,'p_operand_const','parser.py',448),
  ('operand -> AtID','operand',1,'p_operand_gid','parser.py',452),
  ('operand -> PercentID','operand',1,'p_operand_id','parser.py',456),
  ('named_block_list -> ID COLON block','named_block_list',3,'p_named_block_list_single','parser.py',460),
  ('named_block_list -> ID COLON block named_block_list','named_block_list',4,'p_named_block_list_multiple','parser.py',464),
]
