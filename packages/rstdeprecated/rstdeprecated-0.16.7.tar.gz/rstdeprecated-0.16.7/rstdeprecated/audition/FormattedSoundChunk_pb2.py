# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rst/audition/FormattedSoundChunk.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rst.audition import FloatSoundArray_pb2 as rst_dot_audition_dot_FloatSoundArray__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rst/audition/FormattedSoundChunk.proto',
  package='rst.audition',
  syntax='proto2',
  serialized_pb=_b('\n&rst/audition/FormattedSoundChunk.proto\x12\x0crst.audition\x1a\"rst/audition/FloatSoundArray.proto\"\xa7\x01\n\x13\x46ormattedSoundChunk\x12+\n\x04\x64\x61ta\x18\x01 \x03(\x0b\x32\x1d.rst.audition.FloatSoundArray\x12\x0c\n\x04rate\x18\x02 \x02(\r\x12\x13\n\x08\x63hannels\x18\x03 \x01(\r:\x01\x32\"@\n\x0b\x43hannelType\x12\x07\n\x03\x41LL\x10\x00\x12\x08\n\x04LEFT\x10\x01\x12\t\n\x05RIGHT\x10\x02\x12\t\n\x05\x46RONT\x10\x03\x12\x08\n\x04REAR\x10\x04\x42\x19\x42\x17\x46ormattedSoundChunkType')
  ,
  dependencies=[rst_dot_audition_dot_FloatSoundArray__pb2.DESCRIPTOR,])



_FORMATTEDSOUNDCHUNK_CHANNELTYPE = _descriptor.EnumDescriptor(
  name='ChannelType',
  full_name='rst.audition.FormattedSoundChunk.ChannelType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ALL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LEFT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RIGHT', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FRONT', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REAR', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=196,
  serialized_end=260,
)
_sym_db.RegisterEnumDescriptor(_FORMATTEDSOUNDCHUNK_CHANNELTYPE)


_FORMATTEDSOUNDCHUNK = _descriptor.Descriptor(
  name='FormattedSoundChunk',
  full_name='rst.audition.FormattedSoundChunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='rst.audition.FormattedSoundChunk.data', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rate', full_name='rst.audition.FormattedSoundChunk.rate', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channels', full_name='rst.audition.FormattedSoundChunk.channels', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=2,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _FORMATTEDSOUNDCHUNK_CHANNELTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=93,
  serialized_end=260,
)

_FORMATTEDSOUNDCHUNK.fields_by_name['data'].message_type = rst_dot_audition_dot_FloatSoundArray__pb2._FLOATSOUNDARRAY
_FORMATTEDSOUNDCHUNK_CHANNELTYPE.containing_type = _FORMATTEDSOUNDCHUNK
DESCRIPTOR.message_types_by_name['FormattedSoundChunk'] = _FORMATTEDSOUNDCHUNK
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FormattedSoundChunk = _reflection.GeneratedProtocolMessageType('FormattedSoundChunk', (_message.Message,), dict(
  DESCRIPTOR = _FORMATTEDSOUNDCHUNK,
  __module__ = 'rst.audition.FormattedSoundChunk_pb2'
  # @@protoc_insertion_point(class_scope:rst.audition.FormattedSoundChunk)
  ))
_sym_db.RegisterMessage(FormattedSoundChunk)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('B\027FormattedSoundChunkType'))
# @@protoc_insertion_point(module_scope)
