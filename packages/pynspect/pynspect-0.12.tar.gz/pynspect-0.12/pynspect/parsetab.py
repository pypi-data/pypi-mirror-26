
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'OP_PLUS OP_MINUS OP_TIMES OP_DIVIDE OP_MODULO OP_OR OP_XOR OP_AND OP_NOT OP_EXISTS OP_OR_P OP_XOR_P OP_AND_P OP_LIKE OP_IN OP_IS OP_EQ OP_NE OP_GT OP_GE OP_LT OP_LE COMMA LPAREN RPAREN LBRACK RBRACK IPV4 IPV6 DATETIME INTEGER FLOAT CONSTANT FUNCTION VARIABLEexpression : xor_expression OP_OR expression\n                      | xor_expressionxor_expression : and_expression OP_XOR xor_expression\n                          | and_expressionand_expression : or_p_expression OP_AND and_expression\n                          | or_p_expressionor_p_expression : xor_p_expression OP_OR_P or_p_expression\n                      | xor_p_expressionxor_p_expression : and_p_expression OP_XOR_P xor_p_expression\n                          | and_p_expressionand_p_expression : not_expression OP_AND_P and_p_expression\n                          | not_expressionnot_expression : OP_NOT ex_expression\n                          | ex_expressionex_expression : OP_EXISTS cmp_expression\n                         | cmp_expressioncmp_expression : term OP_LIKE cmp_expression\n                          | term OP_IN cmp_expression\n                          | term OP_IS cmp_expression\n                          | term OP_EQ cmp_expression\n                          | term OP_NE cmp_expression\n                          | term OP_GT cmp_expression\n                          | term OP_GE cmp_expression\n                          | term OP_LT cmp_expression\n                          | term OP_LE cmp_expression\n                          | termterm : factor OP_PLUS term\n                | factor OP_MINUS term\n                | factor OP_TIMES term\n                | factor OP_DIVIDE term\n                | factor OP_MODULO term\n                | factorfactor : IPV4\n                  | IPV6\n                  | DATETIME\n                  | INTEGER\n                  | FLOAT\n                  | VARIABLE\n                  | CONSTANT\n                  | FUNCTION RPAREN\n                  | FUNCTION expression RPAREN\n                  | LBRACK list RBRACK\n                  | LPAREN expression RPARENlist : IPV4\n                | IPV6\n                | DATETIME\n                | INTEGER\n                | FLOAT\n                | VARIABLE\n                | CONSTANT\n                | IPV4 COMMA list\n                | IPV6 COMMA list\n                | DATETIME COMMA list\n                | INTEGER COMMA list\n                | FLOAT COMMA list\n                | VARIABLE COMMA list\n                | CONSTANT COMMA list'
    
_lr_action_items = {'INTEGER':([0,2,6,9,15,20,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,54,56,76,77,78,79,80,82,83,],[1,1,1,1,46,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,46,46,46,46,46,46,46,]),'OP_TIMES':([1,5,10,11,13,16,19,23,25,57,81,85,],[-36,-34,-38,-33,41,-39,-35,-37,-40,-41,-42,-43,]),'OP_IS':([1,5,7,10,11,13,16,19,23,25,57,70,71,72,73,74,81,85,],[-36,-34,32,-38,-33,-32,-39,-35,-37,-40,-41,-28,-29,-31,-27,-30,-42,-43,]),'OP_MODULO':([1,5,10,11,13,16,19,23,25,57,81,85,],[-36,-34,-38,-33,42,-39,-35,-37,-40,-41,-42,-43,]),'OP_EQ':([1,5,7,10,11,13,16,19,23,25,57,70,71,72,73,74,81,85,],[-36,-34,30,-38,-33,-32,-39,-35,-37,-40,-41,-28,-29,-31,-27,-30,-42,-43,]),'FUNCTION':([0,2,6,9,20,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,54,56,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'OP_GT':([1,5,7,10,11,13,16,19,23,25,57,70,71,72,73,74,81,85,],[-36,-34,35,-38,-33,-32,-39,-35,-37,-40,-41,-28,-29,-31,-27,-30,-42,-43,]),'OP_LIKE':([1,5,7,10,11,13,16,19,23,25,57,70,71,72,73,74,81,85,],[-36,-34,36,-38,-33,-32,-39,-35,-37,-40,-41,-28,-29,-31,-27,-30,-42,-43,]),'OP_AND':([1,3,5,7,10,11,12,13,14,16,18,19,21,22,23,25,28,38,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,85,],[-36,-12,-34,-26,-38,-33,-8,-32,-10,-39,-16,-35,56,-14,-37,-40,-15,-13,-41,-11,-21,-20,-23,-19,-25,-18,-22,-17,-24,-7,-28,-29,-31,-27,-30,-9,-42,-43,]),'RPAREN':([1,2,3,4,5,7,10,11,12,13,14,16,17,18,19,21,22,23,24,25,28,38,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,84,85,86,],[-36,25,-12,-4,-34,-26,-38,-33,-8,-32,-10,-39,-2,-16,-35,-6,-14,-37,57,-40,-15,-13,85,-41,-11,-3,-21,-20,-23,-19,-25,-18,-22,-17,-24,-7,-28,-29,-31,-27,-30,-9,-42,-1,-43,-5,]),'OP_NE':([1,5,7,10,11,13,16,19,23,25,57,70,71,72,73,74,81,85,],[-36,-34,29,-38,-33,-32,-39,-35,-37,-40,-41,-28,-29,-31,-27,-30,-42,-43,]),'OP_XOR':([1,3,4,5,7,10,11,12,13,14,16,18,19,21,22,23,25,28,38,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,85,86,],[-36,-12,27,-34,-26,-38,-33,-8,-32,-10,-39,-16,-35,-6,-14,-37,-40,-15,-13,-41,-11,-21,-20,-23,-19,-25,-18,-22,-17,-24,-7,-28,-29,-31,-27,-30,-9,-42,-43,-5,]),'OP_XOR_P':([1,3,5,7,10,11,13,14,16,18,19,22,23,25,28,38,57,58,60,61,62,63,64,65,66,67,68,70,71,72,73,74,81,85,],[-36,-12,-34,-26,-38,-33,-32,45,-39,-16,-35,-14,-37,-40,-15,-13,-41,-11,-21,-20,-23,-19,-25,-18,-22,-17,-24,-28,-29,-31,-27,-30,-42,-43,]),'LBRACK':([0,2,6,9,20,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,54,56,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'OP_OR':([1,3,4,5,7,10,11,12,13,14,16,17,18,19,21,22,23,25,28,38,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,85,86,],[-36,-12,-4,-34,-26,-38,-33,-8,-32,-10,-39,54,-16,-35,-6,-14,-37,-40,-15,-13,-41,-11,-3,-21,-20,-23,-19,-25,-18,-22,-17,-24,-7,-28,-29,-31,-27,-30,-9,-42,-43,-5,]),'OP_DIVIDE':([1,5,10,11,13,16,19,23,25,57,81,85,],[-36,-34,-38,-33,44,-39,-35,-37,-40,-41,-42,-43,]),'OP_LE':([1,5,7,10,11,13,16,19,23,25,57,70,71,72,73,74,81,85,],[-36,-34,33,-38,-33,-32,-39,-35,-37,-40,-41,-28,-29,-31,-27,-30,-42,-43,]),'OP_OR_P':([1,3,5,7,10,11,12,13,14,16,18,19,22,23,25,28,38,57,58,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,81,85,],[-36,-12,-34,-26,-38,-33,39,-32,-10,-39,-16,-35,-14,-37,-40,-15,-13,-41,-11,-21,-20,-23,-19,-25,-18,-22,-17,-24,-28,-29,-31,-27,-30,-9,-42,-43,]),'OP_MINUS':([1,5,10,11,13,16,19,23,25,57,81,85,],[-36,-34,-38,-33,40,-39,-35,-37,-40,-41,-42,-43,]),'OP_GE':([1,5,7,10,11,13,16,19,23,25,57,70,71,72,73,74,81,85,],[-36,-34,31,-38,-33,-32,-39,-35,-37,-40,-41,-28,-29,-31,-27,-30,-42,-43,]),'IPV6':([0,2,6,9,15,20,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,54,56,76,77,78,79,80,82,83,],[5,5,5,5,52,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,52,52,52,52,52,52,52,]),'OP_EXISTS':([0,2,9,20,26,27,39,45,54,56,],[6,6,6,6,6,6,6,6,6,6,]),'CONSTANT':([0,2,6,9,15,20,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,54,56,76,77,78,79,80,82,83,],[16,16,16,16,48,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,48,48,48,48,48,48,48,]),'OP_AND_P':([1,3,5,7,10,11,13,16,18,19,22,23,25,28,38,57,60,61,62,63,64,65,66,67,68,70,71,72,73,74,81,85,],[-36,26,-34,-26,-38,-33,-32,-39,-16,-35,-14,-37,-40,-15,-13,-41,-21,-20,-23,-19,-25,-18,-22,-17,-24,-28,-29,-31,-27,-30,-42,-43,]),'$end':([1,3,4,5,7,8,10,11,12,13,14,16,17,18,19,21,22,23,25,28,38,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,84,85,86,],[-36,-12,-4,-34,-26,0,-38,-33,-8,-32,-10,-39,-2,-16,-35,-6,-14,-37,-40,-15,-13,-41,-11,-3,-21,-20,-23,-19,-25,-18,-22,-17,-24,-7,-28,-29,-31,-27,-30,-9,-42,-1,-43,-5,]),'OP_IN':([1,5,7,10,11,13,16,19,23,25,57,70,71,72,73,74,81,85,],[-36,-34,34,-38,-33,-32,-39,-35,-37,-40,-41,-28,-29,-31,-27,-30,-42,-43,]),'RBRACK':([46,47,48,49,50,51,52,53,87,88,89,90,91,92,93,],[-47,-44,-50,-46,-49,81,-45,-48,-54,-51,-57,-53,-56,-52,-55,]),'OP_NOT':([0,2,20,26,27,39,45,54,56,],[9,9,9,9,9,9,9,9,9,]),'VARIABLE':([0,2,6,9,15,20,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,54,56,76,77,78,79,80,82,83,],[10,10,10,10,50,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,50,50,50,50,50,50,50,]),'IPV4':([0,2,6,9,15,20,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,54,56,76,77,78,79,80,82,83,],[11,11,11,11,47,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,47,47,47,47,47,47,47,]),'OP_PLUS':([1,5,10,11,13,16,19,23,25,57,81,85,],[-36,-34,-38,-33,43,-39,-35,-37,-40,-41,-42,-43,]),'OP_LT':([1,5,7,10,11,13,16,19,23,25,57,70,71,72,73,74,81,85,],[-36,-34,37,-38,-33,-32,-39,-35,-37,-40,-41,-28,-29,-31,-27,-30,-42,-43,]),'DATETIME':([0,2,6,9,15,20,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,54,56,76,77,78,79,80,82,83,],[19,19,19,19,49,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,49,49,49,49,49,49,49,]),'LPAREN':([0,2,6,9,20,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,54,56,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'COMMA':([46,47,48,49,50,52,53,],[76,77,78,79,80,82,83,]),'FLOAT':([0,2,6,9,15,20,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,54,56,76,77,78,79,80,82,83,],[23,23,23,23,53,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,53,53,53,53,53,53,53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'and_p_expression':([0,2,20,26,27,39,45,54,56,],[14,14,14,58,14,14,14,14,14,]),'term':([0,2,6,9,20,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,54,56,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,70,71,72,73,74,7,7,7,]),'and_expression':([0,2,20,27,54,56,],[4,4,4,4,4,86,]),'xor_p_expression':([0,2,20,27,39,45,54,56,],[12,12,12,12,12,75,12,12,]),'cmp_expression':([0,2,6,9,20,26,27,29,30,31,32,33,34,35,36,37,39,45,54,56,],[18,18,28,18,18,18,18,60,61,62,63,64,65,66,67,68,18,18,18,18,]),'not_expression':([0,2,20,26,27,39,45,54,56,],[3,3,3,3,3,3,3,3,3,]),'xor_expression':([0,2,20,27,54,],[17,17,17,59,17,]),'factor':([0,2,6,9,20,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,54,56,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'list':([15,76,77,78,79,80,82,83,],[51,87,88,89,90,91,92,93,]),'expression':([0,2,20,54,],[8,24,55,84,]),'or_p_expression':([0,2,20,27,39,54,56,],[21,21,21,21,69,21,21,]),'ex_expression':([0,2,9,20,26,27,39,45,54,56,],[22,22,38,22,22,22,22,22,22,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> xor_expression OP_OR expression','expression',3,'p_expression','gparser.py',261),
  ('expression -> xor_expression','expression',1,'p_expression','gparser.py',262),
  ('xor_expression -> and_expression OP_XOR xor_expression','xor_expression',3,'p_xor_expression','gparser.py',270),
  ('xor_expression -> and_expression','xor_expression',1,'p_xor_expression','gparser.py',271),
  ('and_expression -> or_p_expression OP_AND and_expression','and_expression',3,'p_and_expression','gparser.py',279),
  ('and_expression -> or_p_expression','and_expression',1,'p_and_expression','gparser.py',280),
  ('or_p_expression -> xor_p_expression OP_OR_P or_p_expression','or_p_expression',3,'p_or_p_expression','gparser.py',288),
  ('or_p_expression -> xor_p_expression','or_p_expression',1,'p_or_p_expression','gparser.py',289),
  ('xor_p_expression -> and_p_expression OP_XOR_P xor_p_expression','xor_p_expression',3,'p_xor_p_expression','gparser.py',297),
  ('xor_p_expression -> and_p_expression','xor_p_expression',1,'p_xor_p_expression','gparser.py',298),
  ('and_p_expression -> not_expression OP_AND_P and_p_expression','and_p_expression',3,'p_and_p_expression','gparser.py',307),
  ('and_p_expression -> not_expression','and_p_expression',1,'p_and_p_expression','gparser.py',308),
  ('not_expression -> OP_NOT ex_expression','not_expression',2,'p_not_expression','gparser.py',316),
  ('not_expression -> ex_expression','not_expression',1,'p_not_expression','gparser.py',317),
  ('ex_expression -> OP_EXISTS cmp_expression','ex_expression',2,'p_ex_expression','gparser.py',325),
  ('ex_expression -> cmp_expression','ex_expression',1,'p_ex_expression','gparser.py',326),
  ('cmp_expression -> term OP_LIKE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',335),
  ('cmp_expression -> term OP_IN cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',336),
  ('cmp_expression -> term OP_IS cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',337),
  ('cmp_expression -> term OP_EQ cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',338),
  ('cmp_expression -> term OP_NE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',339),
  ('cmp_expression -> term OP_GT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',340),
  ('cmp_expression -> term OP_GE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',341),
  ('cmp_expression -> term OP_LT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',342),
  ('cmp_expression -> term OP_LE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',343),
  ('cmp_expression -> term','cmp_expression',1,'p_cmp_expression','gparser.py',344),
  ('term -> factor OP_PLUS term','term',3,'p_term','gparser.py',352),
  ('term -> factor OP_MINUS term','term',3,'p_term','gparser.py',353),
  ('term -> factor OP_TIMES term','term',3,'p_term','gparser.py',354),
  ('term -> factor OP_DIVIDE term','term',3,'p_term','gparser.py',355),
  ('term -> factor OP_MODULO term','term',3,'p_term','gparser.py',356),
  ('term -> factor','term',1,'p_term','gparser.py',357),
  ('factor -> IPV4','factor',1,'p_factor','gparser.py',365),
  ('factor -> IPV6','factor',1,'p_factor','gparser.py',366),
  ('factor -> DATETIME','factor',1,'p_factor','gparser.py',367),
  ('factor -> INTEGER','factor',1,'p_factor','gparser.py',368),
  ('factor -> FLOAT','factor',1,'p_factor','gparser.py',369),
  ('factor -> VARIABLE','factor',1,'p_factor','gparser.py',370),
  ('factor -> CONSTANT','factor',1,'p_factor','gparser.py',371),
  ('factor -> FUNCTION RPAREN','factor',2,'p_factor','gparser.py',372),
  ('factor -> FUNCTION expression RPAREN','factor',3,'p_factor','gparser.py',373),
  ('factor -> LBRACK list RBRACK','factor',3,'p_factor','gparser.py',374),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','gparser.py',375),
  ('list -> IPV4','list',1,'p_list','gparser.py',386),
  ('list -> IPV6','list',1,'p_list','gparser.py',387),
  ('list -> DATETIME','list',1,'p_list','gparser.py',388),
  ('list -> INTEGER','list',1,'p_list','gparser.py',389),
  ('list -> FLOAT','list',1,'p_list','gparser.py',390),
  ('list -> VARIABLE','list',1,'p_list','gparser.py',391),
  ('list -> CONSTANT','list',1,'p_list','gparser.py',392),
  ('list -> IPV4 COMMA list','list',3,'p_list','gparser.py',393),
  ('list -> IPV6 COMMA list','list',3,'p_list','gparser.py',394),
  ('list -> DATETIME COMMA list','list',3,'p_list','gparser.py',395),
  ('list -> INTEGER COMMA list','list',3,'p_list','gparser.py',396),
  ('list -> FLOAT COMMA list','list',3,'p_list','gparser.py',397),
  ('list -> VARIABLE COMMA list','list',3,'p_list','gparser.py',398),
  ('list -> CONSTANT COMMA list','list',3,'p_list','gparser.py',399),
]
