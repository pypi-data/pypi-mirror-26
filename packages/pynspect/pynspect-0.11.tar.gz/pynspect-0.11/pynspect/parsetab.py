
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'OP_PLUS OP_MINUS OP_TIMES OP_DIVIDE OP_MODULO OP_OR OP_XOR OP_AND OP_NOT OP_EXISTS OP_OR_P OP_XOR_P OP_AND_P OP_LIKE OP_IN OP_IS OP_EQ OP_NE OP_GT OP_GE OP_LT OP_LE COMMA LPAREN RPAREN LBRACK RBRACK IPV4 IPV6 DATETIME INTEGER FLOAT CONSTANT FUNCTION VARIABLEexpression : xor_expression OP_OR expression\n                      | xor_expressionxor_expression : and_expression OP_XOR xor_expression\n                          | and_expressionand_expression : or_p_expression OP_AND and_expression\n                          | or_p_expressionor_p_expression : xor_p_expression OP_OR_P or_p_expression\n                      | xor_p_expressionxor_p_expression : and_p_expression OP_XOR_P xor_p_expression\n                          | and_p_expressionand_p_expression : not_expression OP_AND_P and_p_expression\n                          | not_expressionnot_expression : OP_NOT ex_expression\n                          | ex_expressionex_expression : OP_EXISTS cmp_expression\n                         | cmp_expressioncmp_expression : term OP_LIKE cmp_expression\n                          | term OP_IN cmp_expression\n                          | term OP_IS cmp_expression\n                          | term OP_EQ cmp_expression\n                          | term OP_NE cmp_expression\n                          | term OP_GT cmp_expression\n                          | term OP_GE cmp_expression\n                          | term OP_LT cmp_expression\n                          | term OP_LE cmp_expression\n                          | termterm : factor OP_PLUS term\n                | factor OP_MINUS term\n                | factor OP_TIMES term\n                | factor OP_DIVIDE term\n                | factor OP_MODULO term\n                | factorfactor : IPV4\n                  | IPV6\n                  | DATETIME\n                  | INTEGER\n                  | FLOAT\n                  | VARIABLE\n                  | CONSTANT\n                  | FUNCTION RPAREN\n                  | FUNCTION expression RPAREN\n                  | LBRACK list RBRACK\n                  | LPAREN expression RPARENlist : IPV4\n                | IPV6\n                | DATETIME\n                | INTEGER\n                | FLOAT\n                | VARIABLE\n                | CONSTANT\n                | IPV4 COMMA list\n                | IPV6 COMMA list\n                | DATETIME COMMA list\n                | INTEGER COMMA list\n                | FLOAT COMMA list\n                | VARIABLE COMMA list\n                | CONSTANT COMMA list'
    
_lr_action_items = {'OP_IN':([2,4,7,10,11,12,14,16,18,24,57,70,71,72,73,74,75,79,],[-37,32,-36,-38,-35,-32,-33,-39,-34,-40,-41,-29,-31,-28,-27,-30,-43,-42,]),'$end':([2,4,5,6,7,8,9,10,11,12,14,15,16,18,19,20,21,22,24,26,44,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,],[-37,-26,-10,-6,-36,-14,-12,-38,-35,-32,-33,-16,-39,-34,-4,-2,0,-8,-40,-13,-15,-41,-23,-19,-25,-17,-21,-18,-24,-22,-20,-9,-5,-11,-29,-31,-28,-27,-30,-43,-3,-1,-7,-42,]),'OP_MODULO':([2,7,10,11,12,14,16,18,24,57,75,79,],[-37,-36,-38,-35,40,-33,-39,-34,-40,-41,-43,-42,]),'OP_LIKE':([2,4,7,10,11,12,14,16,18,24,57,70,71,72,73,74,75,79,],[-37,30,-36,-38,-35,-32,-33,-39,-34,-40,-41,-29,-31,-28,-27,-30,-43,-42,]),'FUNCTION':([0,1,3,13,17,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'OP_GE':([2,4,7,10,11,12,14,16,18,24,57,70,71,72,73,74,75,79,],[-37,27,-36,-38,-35,-32,-33,-39,-34,-40,-41,-29,-31,-28,-27,-30,-43,-42,]),'OP_GT':([2,4,7,10,11,12,14,16,18,24,57,70,71,72,73,74,75,79,],[-37,34,-36,-38,-35,-32,-33,-39,-34,-40,-41,-29,-31,-28,-27,-30,-43,-42,]),'LPAREN':([0,1,3,13,17,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'OP_XOR_P':([2,4,5,7,8,9,10,11,12,14,15,16,18,24,26,44,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,79,],[-37,-26,36,-36,-14,-12,-38,-35,-32,-33,-16,-39,-34,-40,-13,-15,-41,-23,-19,-25,-17,-21,-18,-24,-22,-20,-11,-29,-31,-28,-27,-30,-43,-42,]),'OP_PLUS':([2,7,10,11,12,14,16,18,24,57,75,79,],[-37,-36,-38,-35,42,-33,-39,-34,-40,-41,-43,-42,]),'IPV4':([0,1,3,13,17,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,80,81,82,83,84,85,86,],[14,14,14,14,14,50,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,50,50,50,50,50,50,50,]),'CONSTANT':([0,1,3,13,17,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,80,81,82,83,84,85,86,],[16,16,16,16,16,52,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,52,52,52,52,52,52,52,]),'FLOAT':([0,1,3,13,17,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,80,81,82,83,84,85,86,],[2,2,2,2,2,56,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,56,56,56,56,56,56,56,]),'OP_NE':([2,4,7,10,11,12,14,16,18,24,57,70,71,72,73,74,75,79,],[-37,31,-36,-38,-35,-32,-33,-39,-34,-40,-41,-29,-31,-28,-27,-30,-43,-42,]),'IPV6':([0,1,3,13,17,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,80,81,82,83,84,85,86,],[18,18,18,18,18,55,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,55,55,55,55,55,55,55,]),'OP_DIVIDE':([2,7,10,11,12,14,16,18,24,57,75,79,],[-37,-36,-38,-35,43,-33,-39,-34,-40,-41,-43,-42,]),'RBRACK':([49,50,51,52,53,54,55,56,87,88,89,90,91,92,93,],[79,-44,-47,-50,-46,-49,-45,-48,-51,-54,-57,-53,-56,-52,-55,]),'OP_EQ':([2,4,7,10,11,12,14,16,18,24,57,70,71,72,73,74,75,79,],[-37,35,-36,-38,-35,-32,-33,-39,-34,-40,-41,-29,-31,-28,-27,-30,-43,-42,]),'OP_NOT':([0,1,17,36,37,38,46,47,48,],[3,3,3,3,3,3,3,3,3,]),'INTEGER':([0,1,3,13,17,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,80,81,82,83,84,85,86,],[7,7,7,7,7,51,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,51,51,51,51,51,51,51,]),'OP_OR':([2,4,5,6,7,8,9,10,11,12,14,15,16,18,19,20,22,24,26,44,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,],[-37,-26,-10,-6,-36,-14,-12,-38,-35,-32,-33,-16,-39,-34,-4,47,-8,-40,-13,-15,-41,-23,-19,-25,-17,-21,-18,-24,-22,-20,-9,-5,-11,-29,-31,-28,-27,-30,-43,-3,-7,-42,]),'OP_AND':([2,4,5,6,7,8,9,10,11,12,14,15,16,18,22,24,26,44,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,78,79,],[-37,-26,-10,37,-36,-14,-12,-38,-35,-32,-33,-16,-39,-34,-8,-40,-13,-15,-41,-23,-19,-25,-17,-21,-18,-24,-22,-20,-9,-11,-29,-31,-28,-27,-30,-43,-7,-42,]),'OP_AND_P':([2,4,7,8,9,10,11,12,14,15,16,18,24,26,44,57,58,59,60,61,62,63,64,65,66,70,71,72,73,74,75,79,],[-37,-26,-36,-14,38,-38,-35,-32,-33,-16,-39,-34,-40,-13,-15,-41,-23,-19,-25,-17,-21,-18,-24,-22,-20,-29,-31,-28,-27,-30,-43,-42,]),'COMMA':([50,51,52,53,54,55,56,],[80,81,82,83,84,85,86,]),'RPAREN':([1,2,4,5,6,7,8,9,10,11,12,14,15,16,18,19,20,22,24,25,26,44,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,],[24,-37,-26,-10,-6,-36,-14,-12,-38,-35,-32,-33,-16,-39,-34,-4,-2,-8,-40,57,-13,-15,75,-41,-23,-19,-25,-17,-21,-18,-24,-22,-20,-9,-5,-11,-29,-31,-28,-27,-30,-43,-3,-1,-7,-42,]),'OP_OR_P':([2,4,5,7,8,9,10,11,12,14,15,16,18,22,24,26,44,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,79,],[-37,-26,-10,-36,-14,-12,-38,-35,-32,-33,-16,-39,-34,48,-40,-13,-15,-41,-23,-19,-25,-17,-21,-18,-24,-22,-20,-9,-11,-29,-31,-28,-27,-30,-43,-42,]),'OP_TIMES':([2,7,10,11,12,14,16,18,24,57,75,79,],[-37,-36,-38,-35,39,-33,-39,-34,-40,-41,-43,-42,]),'OP_IS':([2,4,7,10,11,12,14,16,18,24,57,70,71,72,73,74,75,79,],[-37,28,-36,-38,-35,-32,-33,-39,-34,-40,-41,-29,-31,-28,-27,-30,-43,-42,]),'VARIABLE':([0,1,3,13,17,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,80,81,82,83,84,85,86,],[10,10,10,10,10,54,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,54,54,54,54,54,54,54,]),'OP_LE':([2,4,7,10,11,12,14,16,18,24,57,70,71,72,73,74,75,79,],[-37,29,-36,-38,-35,-32,-33,-39,-34,-40,-41,-29,-31,-28,-27,-30,-43,-42,]),'LBRACK':([0,1,3,13,17,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'OP_MINUS':([2,7,10,11,12,14,16,18,24,57,75,79,],[-37,-36,-38,-35,41,-33,-39,-34,-40,-41,-43,-42,]),'DATETIME':([0,1,3,13,17,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,80,81,82,83,84,85,86,],[11,11,11,11,11,53,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,53,53,53,53,53,53,53,]),'OP_EXISTS':([0,1,3,17,36,37,38,46,47,48,],[13,13,13,13,13,13,13,13,13,13,]),'OP_LT':([2,4,7,10,11,12,14,16,18,24,57,70,71,72,73,74,75,79,],[-37,33,-36,-38,-35,-32,-33,-39,-34,-40,-41,-29,-31,-28,-27,-30,-43,-42,]),'OP_XOR':([2,4,5,6,7,8,9,10,11,12,14,15,16,18,19,22,24,26,44,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,],[-37,-26,-10,-6,-36,-14,-12,-38,-35,-32,-33,-16,-39,-34,46,-8,-40,-13,-15,-41,-23,-19,-25,-17,-21,-18,-24,-22,-20,-9,-5,-11,-29,-31,-28,-27,-30,-43,-7,-42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'or_p_expression':([0,1,17,37,46,47,48,],[6,6,6,6,6,6,78,]),'xor_expression':([0,1,17,46,47,],[20,20,20,76,20,]),'not_expression':([0,1,17,36,37,38,46,47,48,],[9,9,9,9,9,9,9,9,9,]),'factor':([0,1,3,13,17,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'xor_p_expression':([0,1,17,36,37,46,47,48,],[22,22,22,67,22,22,22,22,]),'list':([23,80,81,82,83,84,85,86,],[49,87,88,89,90,91,92,93,]),'term':([0,1,3,13,17,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,70,71,72,73,74,4,4,4,]),'cmp_expression':([0,1,3,13,17,27,28,29,30,31,32,33,34,35,36,37,38,46,47,48,],[15,15,15,44,15,58,59,60,61,62,63,64,65,66,15,15,15,15,15,15,]),'ex_expression':([0,1,3,17,36,37,38,46,47,48,],[8,8,26,8,8,8,8,8,8,8,]),'and_p_expression':([0,1,17,36,37,38,46,47,48,],[5,5,5,5,5,69,5,5,5,]),'and_expression':([0,1,17,37,46,47,],[19,19,19,68,19,19,]),'expression':([0,1,17,47,],[21,25,45,77,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> xor_expression OP_OR expression','expression',3,'p_expression','gparser.py',261),
  ('expression -> xor_expression','expression',1,'p_expression','gparser.py',262),
  ('xor_expression -> and_expression OP_XOR xor_expression','xor_expression',3,'p_xor_expression','gparser.py',270),
  ('xor_expression -> and_expression','xor_expression',1,'p_xor_expression','gparser.py',271),
  ('and_expression -> or_p_expression OP_AND and_expression','and_expression',3,'p_and_expression','gparser.py',279),
  ('and_expression -> or_p_expression','and_expression',1,'p_and_expression','gparser.py',280),
  ('or_p_expression -> xor_p_expression OP_OR_P or_p_expression','or_p_expression',3,'p_or_p_expression','gparser.py',288),
  ('or_p_expression -> xor_p_expression','or_p_expression',1,'p_or_p_expression','gparser.py',289),
  ('xor_p_expression -> and_p_expression OP_XOR_P xor_p_expression','xor_p_expression',3,'p_xor_p_expression','gparser.py',297),
  ('xor_p_expression -> and_p_expression','xor_p_expression',1,'p_xor_p_expression','gparser.py',298),
  ('and_p_expression -> not_expression OP_AND_P and_p_expression','and_p_expression',3,'p_and_p_expression','gparser.py',307),
  ('and_p_expression -> not_expression','and_p_expression',1,'p_and_p_expression','gparser.py',308),
  ('not_expression -> OP_NOT ex_expression','not_expression',2,'p_not_expression','gparser.py',316),
  ('not_expression -> ex_expression','not_expression',1,'p_not_expression','gparser.py',317),
  ('ex_expression -> OP_EXISTS cmp_expression','ex_expression',2,'p_ex_expression','gparser.py',325),
  ('ex_expression -> cmp_expression','ex_expression',1,'p_ex_expression','gparser.py',326),
  ('cmp_expression -> term OP_LIKE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',335),
  ('cmp_expression -> term OP_IN cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',336),
  ('cmp_expression -> term OP_IS cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',337),
  ('cmp_expression -> term OP_EQ cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',338),
  ('cmp_expression -> term OP_NE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',339),
  ('cmp_expression -> term OP_GT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',340),
  ('cmp_expression -> term OP_GE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',341),
  ('cmp_expression -> term OP_LT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',342),
  ('cmp_expression -> term OP_LE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',343),
  ('cmp_expression -> term','cmp_expression',1,'p_cmp_expression','gparser.py',344),
  ('term -> factor OP_PLUS term','term',3,'p_term','gparser.py',352),
  ('term -> factor OP_MINUS term','term',3,'p_term','gparser.py',353),
  ('term -> factor OP_TIMES term','term',3,'p_term','gparser.py',354),
  ('term -> factor OP_DIVIDE term','term',3,'p_term','gparser.py',355),
  ('term -> factor OP_MODULO term','term',3,'p_term','gparser.py',356),
  ('term -> factor','term',1,'p_term','gparser.py',357),
  ('factor -> IPV4','factor',1,'p_factor','gparser.py',365),
  ('factor -> IPV6','factor',1,'p_factor','gparser.py',366),
  ('factor -> DATETIME','factor',1,'p_factor','gparser.py',367),
  ('factor -> INTEGER','factor',1,'p_factor','gparser.py',368),
  ('factor -> FLOAT','factor',1,'p_factor','gparser.py',369),
  ('factor -> VARIABLE','factor',1,'p_factor','gparser.py',370),
  ('factor -> CONSTANT','factor',1,'p_factor','gparser.py',371),
  ('factor -> FUNCTION RPAREN','factor',2,'p_factor','gparser.py',372),
  ('factor -> FUNCTION expression RPAREN','factor',3,'p_factor','gparser.py',373),
  ('factor -> LBRACK list RBRACK','factor',3,'p_factor','gparser.py',374),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','gparser.py',375),
  ('list -> IPV4','list',1,'p_list','gparser.py',386),
  ('list -> IPV6','list',1,'p_list','gparser.py',387),
  ('list -> DATETIME','list',1,'p_list','gparser.py',388),
  ('list -> INTEGER','list',1,'p_list','gparser.py',389),
  ('list -> FLOAT','list',1,'p_list','gparser.py',390),
  ('list -> VARIABLE','list',1,'p_list','gparser.py',391),
  ('list -> CONSTANT','list',1,'p_list','gparser.py',392),
  ('list -> IPV4 COMMA list','list',3,'p_list','gparser.py',393),
  ('list -> IPV6 COMMA list','list',3,'p_list','gparser.py',394),
  ('list -> DATETIME COMMA list','list',3,'p_list','gparser.py',395),
  ('list -> INTEGER COMMA list','list',3,'p_list','gparser.py',396),
  ('list -> FLOAT COMMA list','list',3,'p_list','gparser.py',397),
  ('list -> VARIABLE COMMA list','list',3,'p_list','gparser.py',398),
  ('list -> CONSTANT COMMA list','list',3,'p_list','gparser.py',399),
]
