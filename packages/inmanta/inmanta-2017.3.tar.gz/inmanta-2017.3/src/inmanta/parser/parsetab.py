
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTrightMLSrightMLS_ENDINT FLOAT ID CID SEP STRING MLS MLS_END CMP_OP REGEX REL AND AS DEFINED DICT END ENTITY EXTENDS FALSE FOR IMPLEMENT IMPLEMENTATION IMPORT IN INDEX IS MATCHING NOT NULL OR TRUE TYPEDEF UNDEF USING WHENmain : top_stmt mainmain : top_stmttop_stmt : mls \n                | entity_def\n                | implement_def\n                | implementation_def\n                | relation\n                | statement\n                | typedef\n                | index\n                | import import : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n                | constructor\n                | function_call\n                | forstmt_list : statement stmt_liststmt_list : statementassign : var_ref \'=\' operandfor : FOR ID IN operand \':\' blockentity_def : ENTITY CID \':\' entity_body_outer entity_def : ENTITY ID \':\' entity_body_outer entity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outer entity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outer entity_body_outer : mls entity_body ENDentity_body_outer : entity_body END entity_body_outer : END entity_body_outer : mls END entity_body : entity_body attr entity_body : attrattr_type : ns_refattr_type : ns_ref \'?\'attr : attr_type IDattr : attr_type ID \'=\' constantattr : attr_type ID \'=\' UNDEFattr_type_multi : ns_ref \'[\' \']\'attr_type_multi : ns_ref \'[\' \']\' \'?\'attr : attr_type_multi IDattr : attr_type_multi ID \'=\' constant_listattr : attr_type_multi ID \'=\' UNDEFattr : attr_type_multi ID \'=\' NULLattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_def : IMPLEMENT class_ref USING ns_listimplement_def : IMPLEMENT class_ref USING ns_list WHEN conditionimplement_def : IMPLEMENT class_ref USING ns_list mlsimplement_def : IMPLEMENT class_ref USING ns_list WHEN condition mlsimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : \':\' mls blockimplementation : \':\' blockblock : stmt_list ENDblock : ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID mlsrelation : relationnew mlsrelation : relationnewrelationnew : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelationnew : class_ref \'.\' ID multi REL class_refrelationnew : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelationnew : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\' multi : \'[\' INT \':\' \']\' multi : \'[\' INT \':\' INT \']\' multi : \'[\'  \':\' INT \']\' typedef : typedef_innertypedef : typedef_inner mlstypedef_inner : TYPEDEF ID AS ns_ref MATCHING REGEX\n                | TYPEDEF ID AS ns_ref MATCHING conditiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\' condition : \'(\' condition \')\'condition : operand CMP_OP operand\n                | operand IN list_def\n                | operand IN var_ref\n                | condition AND condition\n                | condition OR condition condition : function_call\n                | var_refcondition : NOT conditioncondition : var_ref \'.\' ID IS DEFINEDcondition : ID IS DEFINEDcondition : TRUE\n                | FALSE operand : constant\n              | function_call\n              | constructor\n              | list_def\n              | map_def\n              | var_ref\n              | index_lookup constructor : class_ref \'(\' param_list \')\'  constructor : class_ref \'(\' \')\'  function_call : ns_ref \'(\' \')\' function_call : ns_ref \'(\' operand_list \')\' list_def : \'[\' operand_list \']\' list_def : \'[\' \']\'pair_list : STRING \':\' operand \',\' pair_listpair_list : STRING \':\' operand map_def : \'{\' pair_list \'}\' map_def : \'{\' \'}\' index_lookup : class_ref \'[\' param_list \']\' index_lookup : attr_ref \'[\' param_list \']\' constant : INT\n    | FLOAT\n    | mls\n     constant : NULL\n     constant : REGEX\n     constant : TRUE\n     constant : FALSE\n     constant : STRING  constant_list : \'[\' \']\'  constant_list : \'[\' constants \']\' constants : constantconstants : constant \',\' constantsparam_list : ID \'=\' operand \',\' param_listparam_list : ID \'=\' operandoperand_list : operand \',\' operand_listoperand_list : operandns_list : ns_ref \',\' ns_listns_list : ns_refvar_ref : attr_refattr_ref : var_ref \'.\' IDvar_ref : ns_refclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : IDmls : MLS_ENDmls : MLS mls'
    
_lr_action_items = {'IMPLEMENT':([0,2,3,4,5,7,8,10,11,12,17,18,20,22,23,24,26,27,29,30,32,36,40,49,50,59,71,72,73,74,75,77,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,99,100,101,106,108,117,120,125,131,134,138,141,145,152,156,159,168,170,173,176,178,180,181,182,184,185,186,188,191,192,193,194,195,200,202,207,210,212,213,215,221,224,225,226,231,232,244,245,246,247,248,249,250,251,252,253,263,264,267,],[1,-136,1,-126,-8,-10,-6,-129,-61,-15,-139,-14,-5,-7,-70,-11,-17,-3,-16,-4,-9,-12,-60,-140,-71,-97,-111,-126,-89,-94,-20,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-130,-135,-98,-49,-125,-13,-96,-74,-28,-23,-22,-101,-105,-99,-51,-66,-53,-29,-27,-75,-100,-104,-136,-83,-82,-87,-50,-88,-124,-69,-67,-65,-63,-73,-72,-55,-57,-26,-25,-24,-107,-106,-21,-52,-84,-68,-58,-54,-56,-86,-76,-127,-79,-128,-78,-77,-81,-80,-59,-64,-62,-85,]),')':([2,4,17,38,49,52,59,61,71,72,73,74,77,79,80,81,82,83,85,86,87,88,89,90,91,92,94,95,96,97,106,127,128,131,134,138,147,170,173,174,176,178,180,181,184,211,212,213,217,224,227,244,245,246,247,248,249,250,251,252,267,],[-136,-126,-139,59,-140,95,-97,106,-111,-126,-89,-94,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-135,-98,-123,138,-96,-138,168,-101,-105,-99,-121,-100,-104,-122,-136,-83,-82,-87,-88,-137,-107,-106,245,-84,-120,-86,-76,-127,-79,-128,-78,-77,-81,-80,-85,]),'IMPORT':([0,2,3,4,5,7,8,10,11,12,17,18,20,22,23,24,26,27,29,30,32,36,40,49,50,59,71,72,73,74,75,77,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,99,100,101,106,108,117,120,125,131,134,138,141,145,152,156,159,168,170,173,176,178,180,181,182,184,185,186,188,191,192,193,194,195,200,202,207,210,212,213,215,221,224,225,226,231,232,244,245,246,247,248,249,250,251,252,253,263,264,267,],[6,-136,6,-126,-8,-10,-6,-129,-61,-15,-139,-14,-5,-7,-70,-11,-17,-3,-16,-4,-9,-12,-60,-140,-71,-97,-111,-126,-89,-94,-20,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-130,-135,-98,-49,-125,-13,-96,-74,-28,-23,-22,-101,-105,-99,-51,-66,-53,-29,-27,-75,-100,-104,-136,-83,-82,-87,-50,-88,-124,-69,-67,-65,-63,-73,-72,-55,-57,-26,-25,-24,-107,-106,-21,-52,-84,-68,-58,-54,-56,-86,-76,-127,-79,-128,-78,-77,-81,-80,-59,-64,-62,-85,]),'(':([2,9,10,25,46,78,81,93,94,109,140,150,176,177,183,197,222,223,],[-136,38,-129,52,70,38,52,-130,-135,38,177,177,-136,177,177,52,177,177,]),'ENTITY':([0,2,3,4,5,7,8,10,11,12,17,18,20,22,23,24,26,27,29,30,32,36,40,49,50,59,71,72,73,74,75,77,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,99,100,101,106,108,117,120,125,131,134,138,141,145,152,156,159,168,170,173,176,178,180,181,182,184,185,186,188,191,192,193,194,195,200,202,207,210,212,213,215,221,224,225,226,231,232,244,245,246,247,248,249,250,251,252,253,263,264,267,],[15,-136,15,-126,-8,-10,-6,-129,-61,-15,-139,-14,-5,-7,-70,-11,-17,-3,-16,-4,-9,-12,-60,-140,-71,-97,-111,-126,-89,-94,-20,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-130,-135,-98,-49,-125,-13,-96,-74,-28,-23,-22,-101,-105,-99,-51,-66,-53,-29,-27,-75,-100,-104,-136,-83,-82,-87,-50,-88,-124,-69,-67,-65,-63,-73,-72,-55,-57,-26,-25,-24,-107,-106,-21,-52,-84,-68,-58,-54,-56,-86,-76,-127,-79,-128,-78,-77,-81,-80,-59,-64,-62,-85,]),'AS':([2,36,41,42,94,],[-136,56,63,64,-135,]),'EXTENDS':([44,45,],[67,69,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,22,23,24,26,27,29,30,31,32,36,38,39,40,47,48,49,50,51,52,54,55,56,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,105,106,107,108,112,113,114,115,116,117,118,119,120,125,129,131,132,133,134,137,138,140,141,142,145,146,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,172,173,174,175,176,177,178,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,198,200,201,202,206,207,210,212,213,215,218,219,220,221,222,223,224,225,226,228,229,231,232,233,234,235,236,237,239,240,241,244,245,246,247,248,249,250,251,252,253,257,259,260,263,264,266,267,],[2,2,-136,2,-126,-8,2,-10,-6,37,-129,-61,-15,42,43,44,2,-139,-14,-5,-7,-70,-11,-17,-3,-16,-4,53,-9,-12,60,62,-60,2,92,-140,-71,94,2,2,94,101,-97,2,2,2,2,2,2,2,127,-111,-126,-89,-94,-20,2,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-130,-135,-98,-123,2,-49,-125,-13,2,-96,2,-74,-31,-32,2,157,2,-28,160,161,-23,-22,60,-101,60,94,-105,2,-99,176,-51,2,-66,2,2,2,176,2,-53,-33,2,-29,-34,-30,-27,-39,-43,206,2,2,2,2,127,-75,-100,2,-104,-122,2,-136,176,-83,-82,-87,-50,176,-88,-124,-69,-67,226,60,-65,-63,-73,-72,-55,2,2,-57,-37,-26,-46,-25,-24,-107,-106,-21,246,2,2,-52,176,176,-84,-68,-58,254,255,-54,-56,-38,-36,-35,-41,-42,-40,-45,-44,-86,-76,-127,-79,-128,-78,-77,-81,-80,-59,-116,-48,-47,-64,-62,-117,-85,]),'CMP_OP':([17,49,59,71,72,73,77,79,81,83,85,86,87,88,90,91,94,95,106,131,134,138,170,173,176,178,179,180,181,184,194,212,213,246,],[-139,-140,-97,-111,-126,-89,-92,-115,-128,-91,-95,-112,-93,-110,-108,-109,-135,-98,-96,-101,-105,-99,-100,-104,-136,-94,220,-90,-113,-114,-112,-107,-106,-127,]),'CID':([0,1,2,3,4,5,7,8,10,11,12,13,15,16,17,18,20,22,23,24,26,27,29,30,32,36,40,47,49,50,51,52,59,63,65,67,69,71,72,73,74,75,76,77,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,105,106,107,108,117,120,125,131,133,134,137,138,140,141,145,146,148,149,150,151,152,156,159,164,165,168,170,172,173,174,175,176,177,178,180,181,182,183,184,185,186,188,191,192,193,194,195,196,198,200,202,207,210,212,213,215,220,221,222,223,224,225,226,231,232,244,245,246,247,248,249,250,251,252,253,263,264,267,],[10,10,-136,10,-126,-8,-10,-6,-129,-61,-15,41,45,10,-139,-14,-5,-7,-70,-11,-17,-3,-16,-4,-9,-12,-60,10,-140,-71,93,10,-97,10,10,10,10,-111,-126,-89,-94,-20,10,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-130,-135,-98,-123,10,-49,-125,-13,10,-96,10,-74,-28,-23,-22,-101,93,-105,10,-99,10,-51,-66,10,10,10,10,10,-53,-29,-27,10,10,-75,-100,10,-104,-122,10,-136,10,-83,-82,-87,-50,10,-88,-124,-69,-67,-65,-63,-73,-72,-55,10,10,-57,-26,-25,-24,-107,-106,-21,10,-52,10,10,-84,-68,-58,-54,-56,-86,-76,-127,-79,-128,-78,-77,-81,-80,-59,-64,-62,-85,]),'WHEN':([2,94,99,100,185,],[-136,-135,140,-125,-124,]),'TYPEDEF':([0,2,3,4,5,7,8,10,11,12,17,18,20,22,23,24,26,27,29,30,32,36,40,49,50,59,71,72,73,74,75,77,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,99,100,101,106,108,117,120,125,131,134,138,141,145,152,156,159,168,170,173,176,178,180,181,182,184,185,186,188,191,192,193,194,195,200,202,207,210,212,213,215,221,224,225,226,231,232,244,245,246,247,248,249,250,251,252,253,263,264,267,],[13,-136,13,-126,-8,-10,-6,-129,-61,-15,-139,-14,-5,-7,-70,-11,-17,-3,-16,-4,-9,-12,-60,-140,-71,-97,-111,-126,-89,-94,-20,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-130,-135,-98,-49,-125,-13,-96,-74,-28,-23,-22,-101,-105,-99,-51,-66,-53,-29,-27,-75,-100,-104,-136,-83,-82,-87,-50,-88,-124,-69,-67,-65,-63,-73,-72,-55,-57,-26,-25,-24,-107,-106,-21,-52,-84,-68,-58,-54,-56,-86,-76,-127,-79,-128,-78,-77,-81,-80,-59,-64,-62,-85,]),'UNDEF':([203,204,],[234,236,]),'}':([2,17,49,59,71,72,73,74,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,106,131,134,136,138,170,173,212,213,214,261,],[-136,-139,-140,-97,-111,-126,-89,-94,-92,-115,-113,-128,-114,-91,134,-95,-112,-93,-110,-90,-108,-109,-127,-135,-98,-96,-101,-105,173,-99,-100,-104,-107,-106,-103,-102,]),'IMPLEMENTATION':([0,2,3,4,5,7,8,10,11,12,17,18,20,22,23,24,26,27,29,30,32,36,40,49,50,59,71,72,73,74,75,77,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,99,100,101,106,108,117,120,125,131,134,138,141,145,152,156,159,168,170,173,176,178,180,181,182,184,185,186,188,191,192,193,194,195,200,202,207,210,212,213,215,221,224,225,226,231,232,244,245,246,247,248,249,250,251,252,253,263,264,267,],[14,-136,14,-126,-8,-10,-6,-129,-61,-15,-139,-14,-5,-7,-70,-11,-17,-3,-16,-4,-9,-12,-60,-140,-71,-97,-111,-126,-89,-94,-20,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-130,-135,-98,-49,-125,-13,-96,-74,-28,-23,-22,-101,-105,-99,-51,-66,-53,-29,-27,-75,-100,-104,-136,-83,-82,-87,-50,-88,-124,-69,-67,-65,-63,-73,-72,-55,-57,-26,-25,-24,-107,-106,-21,-52,-84,-68,-58,-54,-56,-86,-76,-127,-79,-128,-78,-77,-81,-80,-59,-64,-62,-85,]),'TRUE':([47,52,76,98,105,107,137,140,145,150,172,177,183,186,188,203,220,222,223,225,238,265,],[80,80,80,80,80,80,80,181,-66,181,80,181,181,-69,-67,80,80,181,181,-68,80,80,]),'INDEX':([0,2,3,4,5,7,8,10,11,12,17,18,20,22,23,24,26,27,29,30,32,36,40,49,50,59,71,72,73,74,75,77,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,99,100,101,106,108,117,120,125,131,134,138,141,145,152,156,159,168,170,173,176,178,180,181,182,184,185,186,188,191,192,193,194,195,200,202,207,210,212,213,215,221,224,225,226,231,232,244,245,246,247,248,249,250,251,252,253,263,264,267,],[16,-136,16,-126,-8,-10,-6,-129,-61,-15,-139,-14,-5,-7,-70,-11,-17,-3,-16,-4,-9,-12,-60,-140,-71,-97,-111,-126,-89,-94,-20,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-130,-135,-98,-49,-125,-13,-96,-74,-28,-23,-22,-101,-105,-99,-51,-66,-53,-29,-27,-75,-100,-104,-136,-83,-82,-87,-50,-88,-124,-69,-67,-65,-63,-73,-72,-55,-57,-26,-25,-24,-107,-106,-21,-52,-84,-68,-58,-54,-56,-86,-76,-127,-79,-128,-78,-77,-81,-80,-59,-64,-62,-85,]),'AND':([2,4,17,49,59,71,72,73,74,77,79,80,81,82,83,85,86,87,88,89,90,91,92,94,95,106,131,134,138,170,173,176,178,180,181,182,184,193,212,213,217,224,244,245,246,247,248,249,250,251,252,267,],[-136,-126,-139,-140,-97,-111,-126,-89,-94,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-135,-98,-96,-101,-105,-99,-100,-104,-136,-83,-82,-87,223,-88,223,-107,-106,223,-84,-86,-76,-127,-79,-128,-78,-77,223,-80,-85,]),'IN':([17,49,53,59,71,72,73,77,79,81,83,85,86,87,88,90,91,94,95,106,131,134,138,170,173,176,178,179,180,181,184,194,212,213,246,],[-139,-140,98,-97,-111,-126,-89,-92,-115,-128,-91,-95,-112,-93,-110,-108,-109,-135,-98,-96,-101,-105,-99,-100,-104,-136,-94,219,-90,-113,-114,-112,-107,-106,-127,]),'MLS_END':([0,2,3,4,5,7,8,10,11,12,17,18,20,21,22,23,24,26,27,29,30,32,36,40,47,49,50,52,59,66,68,71,72,73,74,75,76,77,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,98,99,100,101,105,106,107,108,117,120,125,131,134,137,138,140,141,145,150,151,152,156,159,163,166,168,170,172,173,176,177,178,180,181,182,183,184,185,186,188,191,192,193,194,195,200,202,203,207,210,212,213,215,220,221,222,223,224,225,226,231,232,238,244,245,246,247,248,249,250,251,252,253,263,264,265,267,],[17,-136,17,-126,-8,-10,-6,-129,17,-15,-139,-14,-5,17,-7,17,-11,-17,-3,-16,-4,-9,-12,-60,17,-140,-71,17,-97,17,17,-111,-126,-89,-94,-20,17,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-130,-135,-98,17,17,-125,-13,17,-96,17,-74,-28,-23,-22,-101,-105,17,-99,17,-51,-66,17,17,-53,-29,-27,17,17,-75,-100,17,-104,-136,17,-83,-82,-87,17,17,-88,-124,-69,-67,-65,-63,-73,-72,-55,-57,-26,17,-25,-24,-107,-106,-21,17,-52,17,17,-84,-68,17,-54,-56,17,-86,-76,-127,-79,-128,-78,-77,-81,-80,-59,-64,-62,17,-85,]),'INT':([47,52,57,76,98,102,105,107,137,140,144,145,150,172,177,183,186,188,203,220,222,223,225,238,265,],[90,90,103,90,90,143,90,90,90,90,187,-66,90,90,90,90,-69,-67,90,90,90,90,-68,90,90,]),'SEP':([2,25,33,36,81,94,100,110,113,124,176,197,248,],[-136,51,51,55,133,-135,55,55,55,51,-136,51,55,]),'END':([2,12,17,18,26,29,49,59,66,68,71,72,73,74,75,77,79,80,81,82,83,85,86,87,88,89,90,91,92,94,95,106,112,114,116,131,134,138,151,155,157,158,160,161,163,166,170,173,175,196,198,199,200,206,212,213,215,230,232,234,235,236,237,239,240,241,257,259,260,266,],[-136,-15,-139,-14,-17,-16,-140,-97,117,117,-111,-126,-89,-94,-20,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-135,-98,-96,-31,156,159,-101,-105,-99,200,202,-34,-30,-39,-43,117,117,-100,-104,200,-19,200,232,-57,-46,-107,-106,-21,-18,-56,-36,-35,-41,-42,-40,-45,-44,-116,-48,-47,-117,]),':':([2,4,10,17,44,45,49,57,59,71,72,73,74,77,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,103,106,111,121,122,123,124,126,131,134,135,138,139,170,173,208,209,212,213,],[-136,-126,-129,-139,66,68,-140,102,-97,-111,-126,-89,-94,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-130,-135,-98,144,-96,151,163,-133,-134,-128,166,-101,-105,172,-99,175,-100,-104,-131,-132,-107,-106,]),'DICT':([17,49,66,68,71,79,80,82,86,88,90,91,112,114,116,134,155,157,158,160,161,163,166,173,206,234,235,236,237,239,240,241,257,259,260,266,],[-139,-140,119,119,-111,-115,-113,-114,-112,-110,-108,-109,-31,119,119,-105,119,-34,-30,-39,-43,119,119,-104,-46,-36,-35,-41,-42,-40,-45,-44,-116,-48,-47,-117,]),'OR':([2,4,17,49,59,71,72,73,74,77,79,80,81,82,83,85,86,87,88,89,90,91,92,94,95,106,131,134,138,170,173,176,178,180,181,182,184,193,212,213,217,224,244,245,246,247,248,249,250,251,252,267,],[-136,-126,-139,-140,-97,-111,-126,-89,-94,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-135,-98,-96,-101,-105,-99,-100,-104,-136,-83,-82,-87,222,-88,222,-107,-106,222,-84,-86,-76,-127,-79,-128,-78,-77,-81,-80,-85,]),'$end':([2,3,4,5,7,8,10,11,12,17,18,20,22,23,24,26,27,28,29,30,32,35,36,40,49,50,59,71,72,73,74,75,77,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,99,100,101,106,108,117,120,125,131,134,138,141,145,152,156,159,168,170,173,176,178,180,181,182,184,185,186,188,191,192,193,194,195,200,202,207,210,212,213,215,221,224,225,226,231,232,244,245,246,247,248,249,250,251,252,253,263,264,267,],[-136,-2,-126,-8,-10,-6,-129,-61,-15,-139,-14,-5,-7,-70,-11,-17,-3,0,-16,-4,-9,-1,-12,-60,-140,-71,-97,-111,-126,-89,-94,-20,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-130,-135,-98,-49,-125,-13,-96,-74,-28,-23,-22,-101,-105,-99,-51,-66,-53,-29,-27,-75,-100,-104,-136,-83,-82,-87,-50,-88,-124,-69,-67,-65,-63,-73,-72,-55,-57,-26,-25,-24,-107,-106,-21,-52,-84,-68,-58,-54,-56,-86,-76,-127,-79,-128,-78,-77,-81,-80,-59,-64,-62,-85,]),'.':([2,4,9,10,19,25,72,74,81,92,93,94,123,124,176,178,191,192,197,246,247,248,],[-136,-126,39,-129,48,-128,-126,48,-128,-127,-130,-135,48,-128,-136,218,228,229,-128,-127,48,-128,]),'NULL':([47,52,76,98,105,107,137,140,145,150,172,177,183,186,188,203,204,205,220,222,223,225,238,242,265,],[71,71,71,71,71,71,71,71,-66,71,71,71,71,-69,-67,71,237,240,71,71,71,-68,71,259,71,]),'=':([2,4,19,25,60,92,94,157,160,161,197,206,],[-136,-126,47,-128,105,-127,-135,203,204,205,-128,242,]),'MLS':([0,2,3,4,5,7,8,10,11,12,17,18,20,21,22,23,24,26,27,29,30,32,36,40,47,49,50,52,59,66,68,71,72,73,74,75,76,77,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,98,99,100,101,105,106,107,108,117,120,125,131,134,137,138,140,141,145,150,151,152,156,159,163,166,168,170,172,173,176,177,178,180,181,182,183,184,185,186,188,191,192,193,194,195,200,202,203,207,210,212,213,215,220,221,222,223,224,225,226,231,232,238,244,245,246,247,248,249,250,251,252,253,263,264,265,267,],[21,-136,21,-126,-8,-10,-6,-129,21,-15,-139,-14,-5,21,-7,21,-11,-17,-3,-16,-4,-9,-12,-60,21,-140,-71,21,-97,21,21,-111,-126,-89,-94,-20,21,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-130,-135,-98,21,21,-125,-13,21,-96,21,-74,-28,-23,-22,-101,-105,21,-99,21,-51,-66,21,21,-53,-29,-27,21,21,-75,-100,21,-104,-136,21,-83,-82,-87,21,21,-88,-124,-69,-67,-65,-63,-73,-72,-55,-57,-26,21,-25,-24,-107,-106,-21,21,-52,21,21,-84,-68,21,-54,-56,21,-86,-76,-127,-79,-128,-78,-77,-81,-80,-59,-64,-62,21,-85,]),']':([2,17,49,59,71,72,73,74,76,77,79,80,81,82,83,85,86,87,88,89,90,91,92,94,95,96,103,106,130,131,134,138,143,144,147,154,169,170,171,173,174,187,212,213,227,238,256,258,268,],[-136,-139,-140,-97,-111,-126,-89,-94,131,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-135,-98,-123,145,-96,170,-101,-105,-99,186,188,-121,201,212,-100,213,-104,-122,225,-107,-106,-120,257,-118,266,-119,]),'[':([2,10,37,47,52,62,72,76,78,92,93,94,98,104,105,107,113,137,140,145,150,172,177,183,186,188,204,219,220,222,223,225,246,254,255,],[-136,-129,57,76,76,57,129,76,132,-127,-130,-135,76,57,76,76,154,76,76,-66,76,76,76,76,-69,-67,238,76,76,76,76,-68,-127,57,57,]),'NOT':([140,150,177,183,222,223,],[183,183,183,183,183,183,]),'REL':([58,107,145,186,188,225,],[104,149,-66,-69,-67,-68,]),'STRING':([47,52,76,84,98,105,107,137,140,145,150,172,177,183,186,188,203,220,222,223,225,238,243,265,],[79,79,79,135,79,79,79,79,79,-66,79,79,79,79,-69,-67,79,79,79,79,-68,79,135,79,]),'FALSE':([47,52,76,98,105,107,137,140,145,150,172,177,183,186,188,203,220,222,223,225,238,265,],[82,82,82,82,82,82,82,184,-66,184,82,184,184,-69,-67,82,82,184,184,-68,82,82,]),'REGEX':([47,52,76,98,105,107,137,140,145,150,172,177,183,186,188,203,220,222,223,225,238,265,],[86,86,86,86,86,86,86,86,-66,194,86,86,86,-69,-67,86,86,86,86,-68,86,86,]),'DEFINED':([216,262,],[244,267,]),'{':([47,52,76,98,105,107,137,140,145,150,172,177,183,186,188,205,220,222,223,225,242,],[84,84,84,84,84,84,84,84,-66,84,84,84,84,-69,-67,84,84,84,84,-68,84,]),'IS':([176,246,],[216,262,]),'MATCHING':([2,94,110,],[-136,-135,150,]),',':([2,4,10,17,49,59,71,72,73,74,77,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,100,106,122,123,124,127,131,134,138,147,170,173,212,213,214,256,],[-136,-126,-129,-139,-140,-97,-111,-126,-89,-94,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-130,-135,-98,137,142,-96,164,165,-128,167,-101,-105,-99,190,-100,-104,-107,-106,243,265,]),'?':([2,94,113,119,201,],[-136,-135,153,162,233,]),'FOR':([0,2,3,4,5,7,8,10,11,12,17,18,20,22,23,24,26,27,29,30,32,36,40,43,49,50,59,71,72,73,74,75,77,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,99,100,101,106,108,117,120,125,131,134,138,141,145,151,152,156,159,168,170,173,175,176,178,180,181,182,184,185,186,188,191,192,193,194,195,196,198,200,202,207,210,212,213,215,221,224,225,226,231,232,244,245,246,247,248,249,250,251,252,253,263,264,267,],[31,-136,31,-126,-8,-10,-6,-129,-61,-15,-139,-14,-5,-7,-70,-11,-17,-3,-16,-4,-9,-12,-60,65,-140,-71,-97,-111,-126,-89,-94,-20,-92,-115,-113,-128,-114,-91,-95,-112,-93,-110,-90,-108,-109,-127,-130,-135,-98,-49,-125,-13,-96,-74,-28,-23,-22,-101,-105,-99,-51,-66,31,-53,-29,-27,-75,-100,-104,31,-136,-83,-82,-87,-50,-88,-124,-69,-67,-65,-63,-73,-72,-55,31,31,-57,-26,-25,-24,-107,-106,-21,-52,-84,-68,-58,-54,-56,-86,-76,-127,-79,-128,-78,-77,-81,-80,-59,-64,-62,-85,]),'FLOAT':([47,52,76,98,105,107,137,140,145,150,172,177,183,186,188,203,220,222,223,225,238,265,],[91,91,91,91,91,91,91,91,-66,91,91,91,91,-69,-67,91,91,91,91,-68,91,91,]),'USING':([10,34,93,],[-129,54,-130,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'top_stmt':([0,3,],[3,3,]),'attr_ref':([0,3,47,52,67,69,76,98,105,107,137,140,150,151,164,165,172,175,177,183,196,198,219,220,222,223,],[4,4,72,72,4,4,72,72,72,72,72,72,72,4,4,4,72,4,72,72,4,4,4,72,72,72,]),'statement':([0,3,151,175,196,198,],[5,5,196,196,196,196,]),'constant':([47,52,76,98,105,107,137,140,150,172,177,183,203,220,222,223,238,265,],[73,73,73,73,73,73,73,73,73,73,73,73,235,73,73,73,256,256,]),'var_ref':([0,3,47,52,67,69,76,98,105,107,137,140,150,151,164,165,172,175,177,183,196,198,219,220,222,223,],[19,19,74,74,123,123,74,74,74,74,74,178,178,19,123,123,74,19,178,178,19,19,247,74,178,178,]),'operand':([47,52,76,98,105,107,137,140,150,172,177,183,220,222,223,],[75,96,96,139,147,96,96,179,179,214,179,179,250,179,179,]),'id_list':([70,167,],[128,211,]),'index':([0,3,],[7,7,]),'implementation_def':([0,3,],[8,8,]),'block':([151,175,198,],[195,215,231,]),'constant_list':([204,],[239,]),'relationnew':([0,3,],[11,11,]),'operand_list':([52,76,107,137,],[97,130,148,174,]),'constructor':([0,3,47,52,63,76,98,105,107,137,140,150,151,172,175,177,183,196,198,220,222,223,],[12,12,83,83,108,83,83,83,83,83,83,83,12,83,12,83,83,12,12,83,83,83,]),'param_list':([38,129,132,190,],[61,169,171,227,]),'attr_type':([66,68,114,116,155,163,166,],[115,115,115,115,115,115,115,]),'entity_body':([66,68,114,163,166,],[116,116,155,116,116,]),'assign':([0,3,151,175,196,198,],[18,18,18,18,18,18,]),'ns_list':([54,142,],[99,185,]),'stmt_list':([151,175,196,198,],[199,199,230,199,]),'implement_def':([0,3,],[20,20,]),'condition':([140,150,177,183,222,223,],[182,193,217,224,251,252,]),'relation':([0,3,],[22,22,]),'function_call':([0,3,47,52,76,98,105,107,137,140,150,151,172,175,177,183,196,198,220,222,223,],[29,29,89,89,89,89,89,89,89,180,180,29,89,29,180,180,29,29,89,180,180,]),'typedef_inner':([0,3,],[23,23,]),'import':([0,3,],[24,24,]),'list_def':([47,52,76,98,105,107,137,140,150,172,177,183,219,220,222,223,],[77,77,77,77,77,77,77,77,77,77,77,77,249,77,77,77,]),'pair_list':([84,243,],[136,261,]),'constants':([238,265,],[258,268,]),'ns_ref':([0,1,3,6,16,47,52,54,63,64,65,66,67,68,69,76,98,105,107,114,116,137,140,142,146,148,149,150,151,155,163,164,165,166,172,175,177,183,196,198,219,220,222,223,],[25,33,25,36,33,81,81,100,33,110,33,113,124,113,124,81,81,81,81,113,113,81,81,100,33,33,33,81,197,113,113,124,124,113,81,197,81,81,197,197,248,81,81,81,]),'multi':([37,62,104,254,255,],[58,107,146,263,264,]),'for':([0,3,151,175,196,198,],[26,26,26,26,26,26,]),'class_ref_list':([67,69,164,165,],[121,126,208,209,]),'implementation':([111,],[152,]),'map_def':([47,52,76,98,105,107,137,140,150,172,177,183,205,220,222,223,242,],[87,87,87,87,87,87,87,87,87,87,87,87,241,87,87,87,260,]),'mls':([0,3,11,21,23,47,52,66,68,76,98,99,105,107,137,140,150,151,163,166,172,177,182,183,203,220,222,223,226,238,265,],[27,27,40,49,50,88,88,114,114,88,88,141,88,88,88,88,88,198,114,114,88,88,221,88,88,88,88,88,253,88,88,]),'main':([0,3,],[28,35,]),'index_lookup':([47,52,76,98,105,107,137,140,150,172,177,183,220,222,223,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'class_ref':([0,1,3,16,47,52,63,65,67,69,76,98,105,107,137,140,146,148,149,150,151,164,165,172,175,177,183,196,198,220,222,223,],[9,34,9,46,78,78,109,111,122,122,78,78,78,78,78,78,189,191,192,78,109,122,122,78,109,78,78,109,109,78,78,78,]),'attr':([66,68,114,116,155,163,166,],[112,112,112,158,158,112,112,]),'attr_type_multi':([66,68,114,116,155,163,166,],[118,118,118,118,118,118,118,]),'entity_def':([0,3,],[30,30,]),'typedef':([0,3,],[32,32,]),'entity_body_outer':([66,68,163,166,],[120,125,207,210,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',91),
  ('main -> top_stmt','main',1,'p_main_term','plyInmantaParser.py',98),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',103),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',104),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',105),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',106),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',107),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',108),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',109),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',110),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',111),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',120),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',126),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',135),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',136),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',137),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',138),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',152),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',159),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',164),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',170),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',179),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',185),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',191),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',197),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',203),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',208),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',213),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',218),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',223),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',229),
  ('attr_type -> ns_ref','attr_type',1,'p_attribute_type','plyInmantaParser.py',234),
  ('attr_type -> ns_ref ?','attr_type',2,'p_attribute_type_opt','plyInmantaParser.py',239),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',244),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',251),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',258),
  ('attr_type_multi -> ns_ref [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',265),
  ('attr_type_multi -> ns_ref [ ] ?','attr_type_multi',4,'p_attribute_type_multi_opt','plyInmantaParser.py',270),
  ('attr -> attr_type_multi ID','attr',2,'p_attr_list','plyInmantaParser.py',275),
  ('attr -> attr_type_multi ID = constant_list','attr',4,'p_attr_list_cte','plyInmantaParser.py',283),
  ('attr -> attr_type_multi ID = UNDEF','attr',4,'p_attr_list_undef','plyInmantaParser.py',290),
  ('attr -> attr_type_multi ID = NULL','attr',4,'p_attr_list_null','plyInmantaParser.py',297),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',304),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',310),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',316),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',322),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',328),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',334),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',342),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',348),
  ('implement_def -> IMPLEMENT class_ref USING ns_list mls','implement_def',5,'p_implement_comment','plyInmantaParser.py',354),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition mls','implement_def',7,'p_implement_when_comment','plyInmantaParser.py',360),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',369),
  ('implementation -> : mls block','implementation',3,'p_implementation','plyInmantaParser.py',381),
  ('implementation -> : block','implementation',2,'p_implementation_1','plyInmantaParser.py',386),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',391),
  ('block -> END','block',1,'p_block_empty','plyInmantaParser.py',396),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',403),
  ('relation -> class_ref ID multi REL multi class_ref ID mls','relation',8,'p_relation_comment','plyInmantaParser.py',412),
  ('relation -> relationnew mls','relation',2,'p_relation_new_outer_comment','plyInmantaParser.py',423),
  ('relation -> relationnew','relation',1,'p_relation_new_outer','plyInmantaParser.py',430),
  ('relationnew -> class_ref . ID multi REL class_ref . ID multi','relationnew',9,'p_relation_new','plyInmantaParser.py',435),
  ('relationnew -> class_ref . ID multi REL class_ref','relationnew',6,'p_relation_new_unidir','plyInmantaParser.py',441),
  ('relationnew -> class_ref . ID multi operand_list class_ref . ID multi','relationnew',9,'p_relation_new_annotated','plyInmantaParser.py',447),
  ('relationnew -> class_ref . ID multi operand_list class_ref','relationnew',6,'p_relation_new_annotated_unidir','plyInmantaParser.py',453),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',459),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',464),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',469),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',474),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',481),
  ('typedef -> typedef_inner mls','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',486),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',493),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING condition','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',494),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',500),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',507),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',516),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',521),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',522),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',523),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',524),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',525),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',532),
  ('condition -> var_ref','condition',1,'p_condition_3','plyInmantaParser.py',533),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',538),
  ('condition -> var_ref . ID IS DEFINED','condition',5,'p_condition_is_defined','plyInmantaParser.py',544),
  ('condition -> ID IS DEFINED','condition',3,'p_condition_is_defined_short','plyInmantaParser.py',550),
  ('condition -> TRUE','condition',1,'p_condition_term_1','plyInmantaParser.py',556),
  ('condition -> FALSE','condition',1,'p_condition_term_1','plyInmantaParser.py',557),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',567),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',568),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',569),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',570),
  ('operand -> map_def','operand',1,'p_operand','plyInmantaParser.py',571),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',572),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',573),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',578),
  ('constructor -> class_ref ( )','constructor',3,'p_constructor_empty','plyInmantaParser.py',583),
  ('function_call -> ns_ref ( )','function_call',3,'p_function_call_empty','plyInmantaParser.py',588),
  ('function_call -> ns_ref ( operand_list )','function_call',4,'p_function_call','plyInmantaParser.py',594),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',600),
  ('list_def -> [ ]','list_def',2,'p_list_def_empty','plyInmantaParser.py',606),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',612),
  ('pair_list -> STRING : operand','pair_list',3,'p_pair_list_term','plyInmantaParser.py',618),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',623),
  ('map_def -> { }','map_def',2,'p_map_def_empty','plyInmantaParser.py',629),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',635),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',641),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',650),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',651),
  ('constant -> mls','constant',1,'p_constant','plyInmantaParser.py',652),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',659),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',666),
  ('constant -> TRUE','constant',1,'p_constant_t','plyInmantaParser.py',673),
  ('constant -> FALSE','constant',1,'p_constant_f','plyInmantaParser.py',680),
  ('constant -> STRING','constant',1,'p_string','plyInmantaParser.py',690),
  ('constant_list -> [ ]','constant_list',2,'p_constant_list_empty','plyInmantaParser.py',725),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',731),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',737),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',742),
  ('param_list -> ID = operand , param_list','param_list',5,'p_param_list_collect','plyInmantaParser.py',748),
  ('param_list -> ID = operand','param_list',3,'p_param_list_term','plyInmantaParser.py',754),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',759),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',765),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',770),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',776),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',781),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',786),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',792),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',798),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',809),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',820),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',826),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',832),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',837),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',843),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',849),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',855),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',861),
  ('mls -> MLS_END','mls',1,'p_mls_term','plyInmantaParser.py',866),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',872),
]
