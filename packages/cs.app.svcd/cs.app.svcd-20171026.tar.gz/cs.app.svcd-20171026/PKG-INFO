Metadata-Version: 1.1
Name: cs.app.svcd
Version: 20171026
Summary: SvcD class and "svcd" command to run persistent service programmes.
Home-page: https://bitbucket.org/cameron_simpson/css/commits/all
Author: Cameron Simpson
Author-email: cs@cskk.id.au
License: UNKNOWN
Description-Content-Type: UNKNOWN
Description: This provides the features one wants from a daemon
        for arbitrary commands providing a service:
        
        * process id (pid) files for both svcd and the service command
        * filesystem visible status (command running, service enabled)
          via `cs.app.flag <https://pypi.org/project/cs.app.flag/>`_
        * command restart if the command exits
        * command control (stop, restart, disable)
          via `cs.app.flag <https://pypi.org/project/cs.app.flag/>`_
        * test function to monitor for service viability;
          if the test function fails, do not run the service.
          This typically monitors something like
          network routing (suspend service while laptop offline)
          or a ping (suspend ssh tunnel while target does not answer pings).
        * signature function to monitor for service restart;
          if the signature changes, restart the service.
          This typically monitors something like
          file contents (restart service on configuration change)
          or network routing (restart ssh tunnel on network change)
        * callbacks for service command start and end,
          for example to display desktop notifications
        
        I use this to run persistent ssh port forwards
        and a small collection of other personal services.
        I have convenient shell commands to look up service status
        and to start/stop/restart services.
        
        See `cs.app.portfwd <https://pypi.org/project/cs.app.portfwd/>`_
        which I use to manage my ssh tunnels;
        it is a single Python programme
        running multiple ssh commands, each via its own SvcD instance.
Keywords: python2,python3
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 3
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
