{ "rules": {
    "experiments": {
      "$eid":{
        ".read":"true",
        ".write":"!data.hasChildren(['owner']) || data.child('owner').val() == 'guest' || data.child('owner').val() == auth.uid",
        // ".validate":"newData.hasChildren(['owner']) && (newData.child('owner').val() == 'guest' || newData.child('owner').val() == auth.uid)"
      }
    },
      
    "users": {
      ".read": "true", 
      "$uid": { 
    		".write":"$uid == 'guest' || $uid == auth.uid"  
      }  
    },
      
    "projects": {
      "$pid": {
        "$eid": {
          	".validate":"newData.child('owner').val() == auth.uid",
          	// not secure! User can add an experiment with his own uid
          	".write": "!data.hasChildren(['owner']) || data.child('owner').val() == auth.uid"  
          	// ideally, should also check whether uid saved in the experiment is the same, like below 
          	// but this will hinder ability to add projects if software does not add userId in the experiment

      			// ".write":"root.child('experiments').child($eid).child('userId').val() == auth.uid"  
          
        }
      },
      ".read":"true"
    }, 
        
    "test": {
     ".read":"true", ".write":"true"  
    },
  	
  	"authtest" : {
    	".read" : "auth.token.email == 'authtest@sentient.ai'",
      ".write" : "auth.token.email == 'authtest@sentient.ai'"
    }
  }
}