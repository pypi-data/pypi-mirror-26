# coding: utf-8

"""
    Yanport API

    ## À propos Voici quelques ressources qui vous aideront à explorer notre API, si vous avez des problèmes ou des
    demandes, veuillez contacter le [support](mailto:support@yanport.com). ## REST API Nos services webs utilisent le
    protocle **HTTPS** sur le port 443, tout accès en HTTP sur le port 80 est bloqué par notre pare-feu. Les échanges
    de données sont réalisés en **JSON**. ## Authentification Avant de commencer à explorer notre API, vous devez nous
    [contacter](https://www.yanport.com/contact) afin d'obtenir un [JSON Web Token](https://jwt.io) (**JWT**) qui vous
    permettra de vous identifier à chaque requêtes. ### JWT (header) La méthode privilégiée pour s'authentifier est de
    passer à chaque requêtes le token dans le header `Authorization: Bearer {{ JWT }}` en remplaçant `{{ JWT }}` par
    votre token. ### JWT (query param) Il est aussi possible de passer le token directement en query param de la requête
    `https://api.yanport.com/?token={{ JWT }}`. (_privilégié le passage par header en production._) ## Pour démarrer
    Lorsque vous disposez de votre token d'authentification, vous pouvez commencer à explorer notre API grâce au boutton
    `Try it out` sur chacun de nos webs services. Mais au préalable, vous devez vous authentifier en cliquant sur le
    boutton `Authorize `, en remplissant l'input `api_key` avec `Bearer {{ JWT }}`.
    **Exemple** `Bearer eyUEkiLCJh...CHCUiBfD63oxoo=` ## Limitation Toutes les requêtes à notre API sont loggées, c'est
    pourquoi vous devez respecter nos [CGU](https://dev.yanport.com/cgu) afin d'éviter tout usage abusif de notre API.

    OpenAPI spec version: 1.0
    Contact: dev@yanport.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from setuptools import setup, find_packages

NAME = "yanport-client"
VERSION = "1.0.0"
# To install the library, run the following
#
# python setup.py install
#
# prerequisite: setuptools
# http://pypi.python.org/pypi/setuptools

REQUIRES = ["urllib3 >= 1.15", "six >= 1.10", "certifi", "python-dateutil"]

setup(
    name=NAME,
    version=VERSION,
    description="Yanport API client library",
    author_email="dev@yanport.com",
    url="",
    keywords=["Swagger", "Yanport API"],
    install_requires=REQUIRES,
    packages=find_packages(),
    include_package_data=True,
    long_description="""\
    ## À propos Voici quelques ressources qui vous aideront à explorer notre API, si vous avez des problèmes ou des 
    demandes, veuillez contacter le [support](mailto:support@yanport.com). ## REST API Nos services webs utilisent le 
    protocle **HTTPS** sur le port 443, tout accès en HTTP sur le port 80 est bloqué par notre pare-feu. Les échanges de 
    données sont réalisés en **JSON**. ## Authentification Avant de commencer à explorer notre API, vous devez nous 
    [contacter](https://www.yanport.com/contact) afin d&#39;obtenir un [JSON Web Token](https://jwt.io) (**JWT**) qui 
    vous permettra de vous identifier à chaque requêtes. ### JWT (header) La méthode privilégiée pour s&#39;authentifier 
    est de passer à chaque requêtes le token dans le header &#x60;Authorization: Bearer {{ JWT }}&#x60; en remplaçant 
    &#x60;{{ JWT }}&#x60; par votre token. ### JWT (query param) Il est aussi possible de passer le token directement en 
    query param de la requête &#x60;https://api.yanport.com/?token&#x3D;{{ JWT }}&#x60;. (_privilégié le passage par 
    header en production._) ## Pour démarrer Lorsque vous disposez de votre token d&#39;authentification, vous pouvez 
    commencer à explorer notre API grâce au boutton  &#x60;Try it out&#x60; sur chacun de nos webs services. Mais au 
    préalable, vous devez vous authentifier en cliquant sur le boutton &#x60;Authorize &#x60;, en remplissant 
    l&#39;input &#x60;api_key&#x60; avec &#x60;Bearer {{ JWT }}&#x60;.  **Exemple** &#x60;
    Bearer eyUEkiLCJh...CHCUiBfD63oxoo&#x3D;&#x60; ## Limitation Toutes les requêtes à notre API sont loggées, c&#39;est 
    pourquoi vous devez respecter nos [CGU](https://dev.yanport.com/cgu) afin d&#39;éviter tout usage abusif de notre API. 
    """
)
