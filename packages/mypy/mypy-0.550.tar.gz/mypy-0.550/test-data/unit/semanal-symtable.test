[case testEmptyFile]
[out]
-- Note that builtins are ignored to simplify output.
__main__:
  SymbolTable()

[case testVarDef]
x = 1
[out]
__main__:
  SymbolTable(
    x : Gdef/Var (__main__.x))

[case testFuncDef]
def f(): pass
[out]
__main__:
  SymbolTable(
    f : Gdef/FuncDef (__main__.f))

[case testEmptyClassDef]
class c: pass
[out]
__main__:
  SymbolTable(
    c : Gdef/TypeInfo (__main__.c))

[case testImport]
import m
[file m.py]
x = 1
[out]
__main__:
  SymbolTable(
    m : ModuleRef/MypyFile (m))
m:
  SymbolTable(
    x : Gdef/Var (m.x))

[case testImportFromModule]
from m import x
[file m.py]
class x: pass
y = 1
[out]
__main__:
  SymbolTable(
    x : Gdef/TypeInfo (m.x))
m:
  SymbolTable(
    x : Gdef/TypeInfo (m.x)
    y : Gdef/Var (m.y))

[case testImportAs]
from m import x as xx
[file m.py]
class x: pass
y = 1
[out]
__main__:
  SymbolTable(
    xx : Gdef/TypeInfo (m.x))
m:
  SymbolTable(
    x : Gdef/TypeInfo (m.x)
    y : Gdef/Var (m.y))
