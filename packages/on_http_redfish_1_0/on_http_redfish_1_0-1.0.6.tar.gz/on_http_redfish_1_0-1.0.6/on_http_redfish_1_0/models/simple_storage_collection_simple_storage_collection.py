# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class SimpleStorageCollectionSimpleStorageCollection(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        SimpleStorageCollectionSimpleStorageCollection - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'odata_context': 'str',
            'odata_id': 'str',
            'odata_type': 'str',
            'description': 'str',
            'members': 'list[Odata400IdRef]',
            'membersodata_count': 'float',
            'membersodata_navigation_link': 'Odata400IdRef',
            'name': 'str',
            'oem': 'ResourceOem'
        }

        self.attribute_map = {
            'odata_context': '@odata.context',
            'odata_id': '@odata.id',
            'odata_type': '@odata.type',
            'description': 'Description',
            'members': 'Members',
            'membersodata_count': 'Members@odata.count',
            'membersodata_navigation_link': 'Members@odata.navigationLink',
            'name': 'Name',
            'oem': 'Oem'
        }

        self._odata_context = None
        self._odata_id = None
        self._odata_type = None
        self._description = None
        self._members = None
        self._membersodata_count = None
        self._membersodata_navigation_link = None
        self._name = None
        self._oem = None

    @property
    def odata_context(self):
        """
        Gets the odata_context of this SimpleStorageCollectionSimpleStorageCollection.


        :return: The odata_context of this SimpleStorageCollectionSimpleStorageCollection.
        :rtype: str
        """
        return self._odata_context

    @odata_context.setter
    def odata_context(self, odata_context):
        """
        Sets the odata_context of this SimpleStorageCollectionSimpleStorageCollection.


        :param odata_context: The odata_context of this SimpleStorageCollectionSimpleStorageCollection.
        :type: str
        """
        self._odata_context = odata_context

    @property
    def odata_id(self):
        """
        Gets the odata_id of this SimpleStorageCollectionSimpleStorageCollection.


        :return: The odata_id of this SimpleStorageCollectionSimpleStorageCollection.
        :rtype: str
        """
        return self._odata_id

    @odata_id.setter
    def odata_id(self, odata_id):
        """
        Sets the odata_id of this SimpleStorageCollectionSimpleStorageCollection.


        :param odata_id: The odata_id of this SimpleStorageCollectionSimpleStorageCollection.
        :type: str
        """
        self._odata_id = odata_id

    @property
    def odata_type(self):
        """
        Gets the odata_type of this SimpleStorageCollectionSimpleStorageCollection.


        :return: The odata_type of this SimpleStorageCollectionSimpleStorageCollection.
        :rtype: str
        """
        return self._odata_type

    @odata_type.setter
    def odata_type(self, odata_type):
        """
        Sets the odata_type of this SimpleStorageCollectionSimpleStorageCollection.


        :param odata_type: The odata_type of this SimpleStorageCollectionSimpleStorageCollection.
        :type: str
        """
        self._odata_type = odata_type

    @property
    def description(self):
        """
        Gets the description of this SimpleStorageCollectionSimpleStorageCollection.
        Provides a description of this resource and is used for commonality  in the schema definitions.

        :return: The description of this SimpleStorageCollectionSimpleStorageCollection.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this SimpleStorageCollectionSimpleStorageCollection.
        Provides a description of this resource and is used for commonality  in the schema definitions.

        :param description: The description of this SimpleStorageCollectionSimpleStorageCollection.
        :type: str
        """
        self._description = description

    @property
    def members(self):
        """
        Gets the members of this SimpleStorageCollectionSimpleStorageCollection.
        Contains the members of this collection.

        :return: The members of this SimpleStorageCollectionSimpleStorageCollection.
        :rtype: list[Odata400IdRef]
        """
        return self._members

    @members.setter
    def members(self, members):
        """
        Sets the members of this SimpleStorageCollectionSimpleStorageCollection.
        Contains the members of this collection.

        :param members: The members of this SimpleStorageCollectionSimpleStorageCollection.
        :type: list[Odata400IdRef]
        """
        self._members = members

    @property
    def membersodata_count(self):
        """
        Gets the membersodata_count of this SimpleStorageCollectionSimpleStorageCollection.


        :return: The membersodata_count of this SimpleStorageCollectionSimpleStorageCollection.
        :rtype: float
        """
        return self._membersodata_count

    @membersodata_count.setter
    def membersodata_count(self, membersodata_count):
        """
        Sets the membersodata_count of this SimpleStorageCollectionSimpleStorageCollection.


        :param membersodata_count: The membersodata_count of this SimpleStorageCollectionSimpleStorageCollection.
        :type: float
        """
        self._membersodata_count = membersodata_count

    @property
    def membersodata_navigation_link(self):
        """
        Gets the membersodata_navigation_link of this SimpleStorageCollectionSimpleStorageCollection.


        :return: The membersodata_navigation_link of this SimpleStorageCollectionSimpleStorageCollection.
        :rtype: Odata400IdRef
        """
        return self._membersodata_navigation_link

    @membersodata_navigation_link.setter
    def membersodata_navigation_link(self, membersodata_navigation_link):
        """
        Sets the membersodata_navigation_link of this SimpleStorageCollectionSimpleStorageCollection.


        :param membersodata_navigation_link: The membersodata_navigation_link of this SimpleStorageCollectionSimpleStorageCollection.
        :type: Odata400IdRef
        """
        self._membersodata_navigation_link = membersodata_navigation_link

    @property
    def name(self):
        """
        Gets the name of this SimpleStorageCollectionSimpleStorageCollection.
        The name of the resource or array element.

        :return: The name of this SimpleStorageCollectionSimpleStorageCollection.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this SimpleStorageCollectionSimpleStorageCollection.
        The name of the resource or array element.

        :param name: The name of this SimpleStorageCollectionSimpleStorageCollection.
        :type: str
        """
        self._name = name

    @property
    def oem(self):
        """
        Gets the oem of this SimpleStorageCollectionSimpleStorageCollection.
        This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.

        :return: The oem of this SimpleStorageCollectionSimpleStorageCollection.
        :rtype: ResourceOem
        """
        return self._oem

    @oem.setter
    def oem(self, oem):
        """
        Sets the oem of this SimpleStorageCollectionSimpleStorageCollection.
        This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.

        :param oem: The oem of this SimpleStorageCollectionSimpleStorageCollection.
        :type: ResourceOem
        """
        self._oem = oem

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other): 
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """ 
        Returns true if both objects are not equal
        """
        return not self == other

