# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rst/calendar/Recurrence.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from rst.calendar import DateTime_pb2 as rst_dot_calendar_dot_DateTime__pb2
from rst.calendar import RecurrenceRule_pb2 as rst_dot_calendar_dot_RecurrenceRule__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rst/calendar/Recurrence.proto',
  package='rst.calendar',
  syntax='proto2',
  serialized_pb=_b('\n\x1drst/calendar/Recurrence.proto\x12\x0crst.calendar\x1a\x1brst/calendar/DateTime.proto\x1a!rst/calendar/RecurrenceRule.proto\"\xda\x01\n\nRecurrence\x12\x30\n\x10recurrence_dates\x18\x01 \x03(\x0b\x32\x16.rst.calendar.DateTime\x12\x36\n\x10recurrence_rules\x18\x02 \x03(\x0b\x32\x1c.rst.calendar.RecurrenceRule\x12-\n\rexclude_dates\x18\x03 \x03(\x0b\x32\x16.rst.calendar.DateTime\x12\x33\n\rexclude_rules\x18\x04 \x03(\x0b\x32\x1c.rst.calendar.RecurrenceRuleB\x10\x42\x0eRecurrenceType')
  ,
  dependencies=[rst_dot_calendar_dot_DateTime__pb2.DESCRIPTOR,rst_dot_calendar_dot_RecurrenceRule__pb2.DESCRIPTOR,])




_RECURRENCE = _descriptor.Descriptor(
  name='Recurrence',
  full_name='rst.calendar.Recurrence',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='recurrence_dates', full_name='rst.calendar.Recurrence.recurrence_dates', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='recurrence_rules', full_name='rst.calendar.Recurrence.recurrence_rules', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exclude_dates', full_name='rst.calendar.Recurrence.exclude_dates', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exclude_rules', full_name='rst.calendar.Recurrence.exclude_rules', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=330,
)

_RECURRENCE.fields_by_name['recurrence_dates'].message_type = rst_dot_calendar_dot_DateTime__pb2._DATETIME
_RECURRENCE.fields_by_name['recurrence_rules'].message_type = rst_dot_calendar_dot_RecurrenceRule__pb2._RECURRENCERULE
_RECURRENCE.fields_by_name['exclude_dates'].message_type = rst_dot_calendar_dot_DateTime__pb2._DATETIME
_RECURRENCE.fields_by_name['exclude_rules'].message_type = rst_dot_calendar_dot_RecurrenceRule__pb2._RECURRENCERULE
DESCRIPTOR.message_types_by_name['Recurrence'] = _RECURRENCE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Recurrence = _reflection.GeneratedProtocolMessageType('Recurrence', (_message.Message,), dict(
  DESCRIPTOR = _RECURRENCE,
  __module__ = 'rst.calendar.Recurrence_pb2'
  # @@protoc_insertion_point(class_scope:rst.calendar.Recurrence)
  ))
_sym_db.RegisterMessage(Recurrence)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('B\016RecurrenceType'))
# @@protoc_insertion_point(module_scope)
