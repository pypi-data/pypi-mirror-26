# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rst/dynamics/Pressures.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='rst/dynamics/Pressures.proto',
  package='rst.dynamics',
  syntax='proto2',
  serialized_pb=_b('\n\x1crst/dynamics/Pressures.proto\x12\x0crst.dynamics\"\x1e\n\tPressures\x12\x11\n\tpressures\x18\x01 \x03(\x01\x42\x0f\x42\rPressuresType')
)




_PRESSURES = _descriptor.Descriptor(
  name='Pressures',
  full_name='rst.dynamics.Pressures',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pressures', full_name='rst.dynamics.Pressures.pressures', index=0,
      number=1, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=46,
  serialized_end=76,
)

DESCRIPTOR.message_types_by_name['Pressures'] = _PRESSURES
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Pressures = _reflection.GeneratedProtocolMessageType('Pressures', (_message.Message,), dict(
  DESCRIPTOR = _PRESSURES,
  __module__ = 'rst.dynamics.Pressures_pb2'
  # @@protoc_insertion_point(class_scope:rst.dynamics.Pressures)
  ))
_sym_db.RegisterMessage(Pressures)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('B\rPressuresType'))
# @@protoc_insertion_point(module_scope)
