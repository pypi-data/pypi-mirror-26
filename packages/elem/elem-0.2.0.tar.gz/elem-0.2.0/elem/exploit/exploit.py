import json
import re

class Exploit(object):
    def __init__(self, definition=None):
        if isinstance(definition, str):
            self.definition = json.loads(definition)
        else:
            self.definition = definition or dict()

    def set_definition(self, definition):
        if definition is None:
            raise TypeError
        if isinstance(definition, str):
            self.definition = json.loads(definition)
        else:
            self.definition = definition

    def clear_definition(self):
        self.definition = None

    def add_cve(self, cve):
        pattern_string = 'CVE-\d{4}-\d{1,}'
        matches = re.search(pattern_string, cve)
        if not matches:
            raise ValueError

        if cve not in self.definition.cves:
            self.definition.cves.append(cve)
        
    def score(self, score):