# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.provider :aws do |provider|
    # set unique vm name
    provider.tags = {
      "Name" => PROJECT_NAME + "-" + random_tag()
    }

    provider.access_key_id = ENV["AWS_ACCESS_KEY_ID"]
    provider.secret_access_key = ENV["AWS_SECRET_ACCESS_KEY"]
    provider.keypair_name = ENV["AWS_KEYPAIR_NAME"]
    provider.security_groups = "salted_server"
    provider.availability_zone = "us-west-1c"
    provider.region = "us-west-1"
    provider.ami = "ami-a5d621e1"
    if VM_SIZE == "512mb"
      provider.instance_type = "t2.nano"
    elsif VM_SIZE == "1024mb"
      provider.instance_type = "t2.micro"
    elsif VM_SIZE == "2048mb"
      provider.instance_type = "t2.small"
    end
    provider.block_device_mapping = [{
      "DeviceName" => "/dev/xvda",
      "Ebs.VolumeSize" => 30,
      "Ebs.VolumeType" => "gp2",
      "Ebs.DeleteOnTermination" => "true",
    }]

    provider.user_data = "#!/bin/bash
      user=vagrant
      usermod  -l $user admin
      groupmod -n $user admin
      usermod  -d /home/$user -m $user
      sed -i 's/admin/vagrant/g' /etc/sudoers.d/90-cloud-init-users"
  end

  config.ssh.username = "vagrant"
  config.ssh.private_key_path = ENV["AWS_SSH_PRIVKEY"]
  config.ssh.forward_agent = true

  config.vm.box = "dummy"
  config.vm.box_url = "https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box"
  config.vm.synced_folder ".", "/vagrant", type: "rsync"
  config.vm.provision "shell",
    inline: "wget -O /etc/apt/sources.list https://raw.githubusercontent.com/terminal-labs/package-sources/master/" + VM_HOST + "/official/sources.list",
    keep_color: true
  if PROVISION_WITH_SALT
    config.vm.provision :salt do |salt|
      salt.bootstrap_options = "-P"
      salt.verbose = true
    end
    $pre_salt = <<-EOS
      mv /etc/salt/minion{,-dist}
      cp /vagrant/salt_resources/minions/minion.ec2 /etc/salt/minion
      cp /vagrant/salt_resources/grains/grains /etc/salt/grains
      mkdir -p /vagrant/salt_resources/states/files/licenses
      if [ -d "/vagrant/auth/licenses/" ]; then cp -a /vagrant/auth/licenses/. /vagrant/salt_resources/states/files/licenses/; fi
    EOS
    config.vm.provision "shell",
      inline: $pre_salt,
      keep_color: true
    config.vm.provision "shell",
      inline: PROVISION_SALT_CMD,
      keep_color: true
  end
  if PROVISION_WITH_CMD
    config.vm.provision "shell",
      inline: PROVISION_CMD,
      keep_color: true
  end
end
