#! /bin/env python3

from graphic import Display
from physics import Numb
from time import sleep, time
from random import random
from math import floor

SPAWN_RATE = 5
KEY_LASTS = 0.1
PLAYER_SPEED = 10

debug = []

class GameEnded(Exception):
    pass

class YouDied(GameEnded):
    def __init__(self, score, message="You have died."):
        message += "\nAnd achieved: %s" % str(score)
        super().__init__(message)


def main(disp):
    
    player = Numb(10, disp.width//2, disp.height//2)
    enemies = []
    keys_pressed = {}
    moving = {"up":    False,
              "down":  False,
              "left":  False,
              "right": False}
    
    last_spawn = time()
    
    while True:
        
        key = disp.get_key()
        if key in keys_pressed:
            keys_pressed[key][0] = time() + KEY_LASTS
        else:
            keys_pressed[key] = [time()+KEY_LASTS, lambda:None]

        if key in ("left", "a", "j"):
            if not moving["left"]:
                player.change_speed(x=-2*PLAYER_SPEED)
                keys_pressed[key][1] = lambda: (player.change_speed(x= 2*PLAYER_SPEED), moving.__setitem__("left", False))
                moving["left"] = True

        elif key in ("right", "d", "l"):
            if not moving["right"]:
                player.change_speed(x= 2*PLAYER_SPEED)
                keys_pressed[key][1] = lambda: (player.change_speed(x=-2*PLAYER_SPEED), moving.__setitem__("right", False))
                moving["right"] = True

        elif key in ("up", "w", "i"):
            if not moving["up"]:
                player.change_speed(y=-PLAYER_SPEED)
                keys_pressed[key][1] = lambda: (player.change_speed(y= PLAYER_SPEED), moving.__setitem__("up", False))
                moving["up"] = True

        elif key in ("down", "s", "k"):
            if not moving["down"]:
                player.change_speed(y= PLAYER_SPEED)
                keys_pressed[key][1] = lambda: (player.change_speed(y=-PLAYER_SPEED), moving.__setitem__("down", False))
                moving["down"] = True


        elif key == "q":
            raise KeyboardInterrupt

        keys_to_delete = []
        for key in keys_pressed:
            if keys_pressed[key][0] < time():
                keys_pressed[key][1]()
                keys_to_delete.append(key) 
        for key in keys_to_delete:
            del keys_pressed[key]
        
        
        while time() - last_spawn > 1/SPAWN_RATE:
            last_spawn += 1/SPAWN_RATE

            side = random() > 0.5
            size = floor(random()*5*player.items)
            enemies.append(Numb(size,-len(str(size)) if not side else disp.width+1, floor(random()*disp.height), speed=((floor(random()*PLAYER_SPEED*2)+5) * (-1 if side else 1), 0)))
        





        player.move()
        player.check_board(disp)
        for enemy in enemies:
            enemy.move()
            if enemy & player:
                if enemy < player or (enemy == player and random()<0.5):
                    del enemies[enemies.index(enemy)]
                    items = enemy.die()
                    debug.append(items)
                    player.eat(items)
                else:
                    raise YouDied(player.items)

        
        
            
        
        
        for enemy in enemies:
            enemy.show(disp)

        player.show(disp)
        
        disp.refresh()


disp = Display()
try:
    disp.run(main)
except GameEnded:
    text = "Game Over!" 
    print("#" * (len(text)+4))
    print("# %s #" % text)
    print("#" * (len(text)+4))
    
    print()
    input("Hit enter to continue ...")
except KeyboardInterrupt:
    for msg in debug: print(msg)
    print()


