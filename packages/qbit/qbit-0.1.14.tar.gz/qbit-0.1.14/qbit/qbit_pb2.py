# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: qbit.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='qbit.proto',
  package='qbit.services',
  syntax='proto3',
  serialized_pb=_b('\n\nqbit.proto\x12\rqbit.services\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1cgoogle/api/annotations.proto\"z\n\x0e\x43ompareRequest\x12\x0e\n\x06smiles\x18\x01 \x03(\t\x12\x13\n\x0bsolver_type\x18\x02 \x01(\t\x12\x18\n\x10should_visualize\x18\x03 \x01(\x08\x12)\n\x08\x63riteria\x18\x04 \x01(\x0b\x32\x17.google.protobuf.Struct\"\x93\x01\n\x10\x43omparisonResult\x12\x17\n\x0f\x63\x61n_use_quantum\x18\x01 \x01(\x08\x12\n\n\x02ok\x18\x02 \x01(\x08\x12\x16\n\x0evisualizations\x18\x03 \x03(\t\x12.\n\rshared_traits\x18\x04 \x01(\x0b\x32\x17.google.protobuf.Struct\x12\x12\n\nsimilarity\x18\x05 \x01(\x02\"^\n\nQuboMatrix\x12\x31\n\x04qubo\x18\x01 \x03(\x0b\x32#.qbit.services.QuboMatrix.QuboArray\x1a\x1d\n\tQuboArray\x12\x10\n\x08qubo_row\x18\x01 \x03(\x02\"y\n\x10\x42inaryPolynomial\x12\x33\n\x05terms\x18\x01 \x03(\x0b\x32$.qbit.services.BinaryPolynomial.Term\x1a\x30\n\x04Term\x12\x13\n\x0b\x63oefficient\x18\x01 \x01(\x02\x12\x13\n\x0bpolynomials\x18\x02 \x03(\x05\"\x86\x01\n\x0eTabu1OptSolver\x12\x1a\n\x12improvement_cutoff\x18\x01 \x01(\x05\x12\x1f\n\x15improvement_tolerance\x18\x02 \x01(\x02H\x00\x12\x13\n\x0btabu_tenure\x18\x03 \x01(\r\x12\x1c\n\x14tabu_tenure_rand_max\x18\x04 \x01(\x05\x42\x04\n\x02v2\"\x8b\x01\n\x13MultiTabu1OptSolver\x12\x1a\n\x12improvement_cutoff\x18\x01 \x01(\x05\x12\x1f\n\x15improvement_tolerance\x18\x02 \x01(\x02H\x00\x12\x13\n\x0btabu_tenure\x18\x03 \x01(\r\x12\x1c\n\x14tabu_tenure_rand_max\x18\x04 \x01(\x05\x42\x04\n\x02v2\"T\n\x13PathRelinkingSolver\x12\x18\n\x0e\x64istance_scale\x18\x01 \x01(\x02H\x00\x12\x1d\n\x15greedy_path_relinking\x18\x02 \x01(\x08\x42\x04\n\x02v1\"\xc7\x01\n\tSQASolver\x12\x0e\n\x04\x62\x65ta\x18\x01 \x01(\x02H\x00\x12\x13\n\x0b\x65nergy_type\x18\x02 \x01(\t\x12\x17\n\rgamma_initial\x18\x03 \x01(\x02H\x01\x12\x15\n\x0bgamma_final\x18\x04 \x01(\x02H\x02\x12\x13\n\tnum_reads\x18\x05 \x01(\x05H\x03\x12\x16\n\x0cnum_replicas\x18\x06 \x01(\x05H\x04\x12\x14\n\nnum_sweeps\x18\x07 \x01(\x05H\x05\x42\x04\n\x02v1B\x04\n\x02v3B\x04\n\x02v4B\x04\n\x02v5B\x04\n\x02v6B\x04\n\x02v7\"\x97\x01\n\x0bPTICMSolver\x12\x13\n\thigh_temp\x18\x01 \x01(\x02H\x00\x12\x12\n\x08low_temp\x18\x02 \x01(\x02H\x01\x12\x16\n\x0cnum_replicas\x18\x03 \x01(\x05H\x02\x12\x14\n\nnum_sweeps\x18\x04 \x01(\x05H\x03\x12\x13\n\tnum_temps\x18\x05 \x01(\x05H\x04\x42\x04\n\x02v1B\x04\n\x02v2B\x04\n\x02v3B\x04\n\x02v4B\x04\n\x02v5\"\xa1\x02\n\x0f\x46ujitsuDASolver\x12\x13\n\x0bnoise_model\x18\x01 \x01(\t\x12\x19\n\x11number_iterations\x18\x02 \x01(\x05\x12\x15\n\x0bnumber_runs\x18\x03 \x01(\x05H\x00\x12\x1e\n\x14offset_increase_rate\x18\x04 \x01(\x05H\x01\x12\x1b\n\x11temperature_decay\x18\x05 \x01(\x02H\x02\x12\x1e\n\x14temperature_interval\x18\x06 \x01(\x05H\x03\x12\x18\n\x10temperature_mode\x18\x07 \x01(\t\x12\x1b\n\x11temperature_start\x18\x08 \x01(\x02H\x04\x12\x15\n\rsolution_mode\x18\t \x01(\tB\x04\n\x02v3B\x04\n\x02v4B\x04\n\x02v5B\x04\n\x02v6B\x04\n\x02v8\"\xac\x04\n\x0bQuboRequest\x12\x34\n\x08run_type\x18\x01 \x01(\x0e\x32\".qbit.services.QuboRequest.runType\x12<\n\x11\x62inary_polynomial\x18\x02 \x01(\x0b\x32\x1f.qbit.services.BinaryPolynomialH\x00\x12\x30\n\x0bqubo_matrix\x18\x03 \x01(\x0b\x32\x19.qbit.services.QuboMatrixH\x00\x12-\n\x04tabu\x18\x05 \x01(\x0b\x32\x1d.qbit.services.Tabu1OptSolverH\x01\x12\x37\n\tmultitabu\x18\x06 \x01(\x0b\x32\".qbit.services.MultiTabu1OptSolverH\x01\x12;\n\rpathrelinking\x18\x07 \x01(\x0b\x32\".qbit.services.PathRelinkingSolverH\x01\x12\'\n\x03sqa\x18\x08 \x01(\x0b\x32\x18.qbit.services.SQASolverH\x01\x12+\n\x05pticm\x18\t \x01(\x0b\x32\x1a.qbit.services.PTICMSolverH\x01\x12\x31\n\x07\x66ujitsu\x18\n \x01(\x0b\x32\x1e.qbit.services.FujitsuDASolverH\x01\",\n\x07runType\x12\x10\n\x0c\x41SYNCHRONOUS\x10\x00\x12\x0f\n\x0bSYNCHRONOUS\x10\x01\x42\x06\n\x04quboB\x13\n\x11solver_parameters\"\xae\x01\n\x0cQuboSolution\x12\x0e\n\x06\x65nergy\x18\x01 \x01(\x02\x12\x11\n\tfrequency\x18\x02 \x01(\x02\x12\x45\n\rconfiguration\x18\x03 \x03(\x0b\x32..qbit.services.QuboSolution.ConfigurationEntry\x1a\x34\n\x12\x43onfigurationEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\"4\n\rFujitsuTiming\x12\x0e\n\x06timing\x18\x01 \x01(\x02\x12\x13\n\x0b\x61nneal_time\x18\x02 \x01(\x02\"\xa2\x01\n\x10QuboSolutionList\x12\x15\n\rresult_status\x18\x01 \x01(\x08\x12.\n\tsolutions\x18\x02 \x03(\x0b\x32\x1b.qbit.services.QuboSolution\x12\x10\n\x06timing\x18\x03 \x01(\x02H\x00\x12\x30\n\x08\x66_timing\x18\x04 \x01(\x0b\x32\x1c.qbit.services.FujitsuTimingH\x00\x42\x03\n\x01t\"\x83\x01\n\x0cQuboResponse\x12\x38\n\rqubo_solution\x18\x01 \x01(\x0b\x32\x1f.qbit.services.QuboSolutionListH\x00\x12-\n\toperation\x18\x02 \x01(\x0b\x32\x18.qbit.services.OperationH\x00\x42\n\n\x08response\"\xc7\x02\n\x0fKnapsackRequest\x12-\n\x04tabu\x18\x01 \x01(\x0b\x32\x1d.qbit.services.Tabu1OptSolverH\x00\x12\x37\n\tmultitabu\x18\x02 \x01(\x0b\x32\".qbit.services.MultiTabu1OptSolverH\x00\x12;\n\rpathrelinking\x18\x03 \x01(\x0b\x32\".qbit.services.PathRelinkingSolverH\x00\x12\'\n\x03sqa\x18\x04 \x01(\x0b\x32\x18.qbit.services.SQASolverH\x00\x12+\n\x05pticm\x18\x05 \x01(\x0b\x32\x1a.qbit.services.PTICMSolverH\x00\x12/\n\x07problem\x18\x07 \x01(\x0b\x32\x1e.qbit.services.KnapsackProblemB\x08\n\x06solver\"O\n\x0fKnapsackProblem\x12\x10\n\x08\x63\x61pacity\x18\x01 \x01(\x02\x12*\n\x05items\x18\x02 \x03(\x0b\x32\x1b.qbit.services.KnapsackItem\"<\n\x0cKnapsackItem\x12\r\n\x05index\x18\x01 \x01(\x05\x12\x0e\n\x06weight\x18\x02 \x01(\x02\x12\r\n\x05value\x18\x03 \x01(\x02\"F\n\x10KnapsackResponse\x12\x32\n\tsolutions\x18\x01 \x03(\x0b\x32\x1f.qbit.services.KnapsackSolution\"\x81\x01\n\x10KnapsackSolution\x12\x10\n\x08\x66\x65\x61sible\x18\x01 \x01(\x08\x12\r\n\x05value\x18\x02 \x01(\x02\x12\x0e\n\x06weight\x18\x03 \x01(\x02\x12<\n\x0e\x63onfigurations\x18\x04 \x03(\x0b\x32$.qbit.services.KnapsackConfiguration\"8\n\x15KnapsackConfiguration\x12\r\n\x05index\x18\x01 \x01(\x05\x12\x10\n\x08selected\x18\x02 \x01(\x08\"\xbb\x02\n\x0eMinKCutRequest\x12-\n\x04tabu\x18\x01 \x01(\x0b\x32\x1d.qbit.services.Tabu1OptSolverH\x00\x12\x37\n\tmultitabu\x18\x02 \x01(\x0b\x32\".qbit.services.MultiTabu1OptSolverH\x00\x12;\n\rpathrelinking\x18\x03 \x01(\x0b\x32\".qbit.services.PathRelinkingSolverH\x00\x12\'\n\x03sqa\x18\x04 \x01(\x0b\x32\x18.qbit.services.SQASolverH\x00\x12+\n\x05pticm\x18\x05 \x01(\x0b\x32\x1a.qbit.services.PTICMSolverH\x00\x12$\n\x06graphs\x18\x07 \x03(\x0b\x32\x14.qbit.services.GraphB\x08\n\x06solver\"5\n\x05Graph\x12\r\n\x05node1\x18\x01 \x01(\x05\x12\r\n\x05node2\x18\x02 \x01(\x05\x12\x0e\n\x06weight\x18\x03 \x01(\x02\"D\n\x0fMinKCutResponse\x12\x31\n\tsolutions\x18\x01 \x03(\x0b\x32\x1e.qbit.services.MinKCutSolution\"b\n\x0fMinKCutSolution\x12\x10\n\x08\x66\x65\x61sible\x18\x01 \x01(\x08\x12\r\n\x05value\x18\x02 \x01(\x02\x12.\n\x07mapping\x18\x03 \x03(\x0b\x32\x1d.qbit.services.MinKCutMapping\"?\n\x0eMinKCutMapping\x12\x17\n\x0fpartition_index\x18\x01 \x01(\x05\x12\x14\n\x0cvertex_index\x18\x02 \x03(\x05\"\xf1\x06\n\x0bQuboProblem\x12\x36\n\tvariables\x18\x01 \x03(\x0b\x32#.qbit.services.QuboProblem.variable\x12:\n\x0b\x63onstraints\x18\x02 \x03(\x0b\x32%.qbit.services.QuboProblem.constraint\x12?\n\tobjective\x18\x03 \x01(\x0b\x32,.qbit.services.QuboProblem.problem_objective\x12\x39\n\x05sense\x18\x04 \x01(\x0e\x32*.qbit.services.QuboProblem.objective_sense\x1a}\n\x08variable\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x10\n\x08up_bound\x18\x02 \x01(\x02\x12\x11\n\tlow_bound\x18\x03 \x01(\x02\x12>\n\x08\x63\x61tegory\x18\x04 \x01(\x0e\x32,.qbit.services.QuboProblem.variable_category\x1aK\n\x0equadratic_term\x12\x11\n\tvariable1\x18\x01 \x01(\t\x12\x11\n\tvariable2\x18\x02 \x01(\t\x12\x13\n\x0b\x63oefficient\x18\x03 \x01(\x02\x1a\xa6\x01\n\nconstraint\x12\x42\n\x0fquadratic_terms\x18\x01 \x03(\x0b\x32).qbit.services.QuboProblem.quadratic_term\x12\x0b\n\x03rhs\x18\x02 \x01(\x02\x12\x39\n\x05sense\x18\x03 \x01(\x0e\x32*.qbit.services.QuboProblem.constrain_sense\x12\x0c\n\x04name\x18\x04 \x01(\t\x1a\x65\n\x11problem_objective\x12\x42\n\x0fquadratic_terms\x18\x01 \x03(\x0b\x32).qbit.services.QuboProblem.quadratic_term\x12\x0c\n\x04name\x18\x02 \x01(\t\"<\n\x11variable_category\x12\x0e\n\nCONTINUOUS\x10\x00\x12\x0b\n\x07INTEGER\x10\x01\x12\n\n\x06\x42INARY\x10\x02\"-\n\x0fobjective_sense\x12\x0c\n\x08MINIMIZE\x10\x00\x12\x0c\n\x08MAXIMIZE\x10\x01\")\n\x0f\x63onstrain_sense\x12\x06\n\x02\x45Q\x10\x00\x12\x06\n\x02LE\x10\x01\x12\x06\n\x02GE\x10\x02\"\xbf\x01\n\tOperation\x12\x0e\n\x06job_id\x18\x01 \x01(\x05\x12.\n\x06status\x18\x02 \x01(\x0e\x32\x1e.qbit.services.OperationStatus\x12.\n\x05\x65rror\x18\x04 \x01(\x0b\x32\x1d.qbit.services.OperationErrorH\x00\x12\x38\n\rqubo_response\x18\x05 \x01(\x0b\x32\x1f.qbit.services.QuboSolutionListH\x00\x42\x08\n\x06result\"\xf2\x01\n\x0fOperationDetail\x12\x0e\n\x06job_id\x18\x01 \x01(\x05\x12.\n\x06status\x18\x02 \x01(\x0e\x32\x1e.qbit.services.OperationStatus\x12+\n\x07request\x18\x04 \x01(\x0b\x32\x1a.qbit.services.QuboRequest\x12.\n\x05\x65rror\x18\x05 \x01(\x0b\x32\x1d.qbit.services.OperationErrorH\x00\x12\x38\n\rqubo_response\x18\x06 \x01(\x0b\x32\x1f.qbit.services.QuboSolutionListH\x00\x42\x08\n\x06result\"/\n\x0eOperationError\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0f\n\x07message\x18\x02 \x01(\t\"%\n\x13GetOperationRequest\x12\x0e\n\x06job_id\x18\x01 \x01(\x05\"2\n\x1bGetOperationToWorkOnRequest\x12\x13\n\x0bworker_type\x18\x01 \x01(\t\"m\n\x15ListOperationsRequest\x12.\n\x06status\x18\x01 \x01(\x0e\x32\x1e.qbit.services.OperationStatus\x12\x12\n\nstart_time\x18\x02 \x01(\t\x12\x10\n\x08\x65nd_time\x18\x03 \x01(\t\"_\n\x16ListOperationsResponse\x12,\n\noperations\x18\x01 \x03(\x0b\x32\x18.qbit.services.Operation\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"(\n\x16\x43\x61ncelOperationRequest\x12\x0e\n\x06job_id\x18\x01 \x01(\x05\"[\n\x18\x43ompleteOperationRequest\x12\x0e\n\x06job_id\x18\x01 \x01(\x05\x12/\n\x06result\x18\x02 \x01(\x0b\x32\x1f.qbit.services.QuboSolutionList\"6\n\x15\x45rrorOperationRequest\x12\x0e\n\x06job_id\x18\x01 \x01(\x05\x12\r\n\x05\x65rror\x18\x02 \x01(\t\"\x14\n\x12HealthCheckRequest*B\n\x0fOperationStatus\x12\x07\n\x03\x41LL\x10\x00\x12\x0b\n\x07PENDING\x10\x01\x12\x0b\n\x07RUNNING\x10\x02\x12\x0c\n\x08\x46INISHED\x10\x03\x32\xe2\n\n\x04Qbit\x12~\n\x0f\x43ompareMolecule\x12\x1d.qbit.services.CompareRequest\x1a\x1f.qbit.services.ComparisonResult\"+\x82\xd3\xe4\x93\x02%\" /v1/molecular_similarity/compare:\x01*\x12l\n\tHobo2Qubo\x12\x1f.qbit.services.BinaryPolynomial\x1a\x1f.qbit.services.BinaryPolynomial\"\x1d\x82\xd3\xe4\x93\x02\x17\"\x12/v1/qubo/hobo2qubo:\x01*\x12_\n\tSolveQubo\x12\x1a.qbit.services.QuboRequest\x1a\x1b.qbit.services.QuboResponse\"\x19\x82\xd3\xe4\x93\x02\x13\"\x0e/v1/qubo/solve:\x01*\x12\x64\n\x08Knapsack\x12\x1e.qbit.services.KnapsackRequest\x1a\x1f.qbit.services.KnapsackResponse\"\x17\x82\xd3\xe4\x93\x02\x11\"\x0c/v1/knapsack:\x01*\x12x\n\x13MinKCutPartitioning\x12\x1d.qbit.services.MinKCutRequest\x1a\x1e.qbit.services.MinKCutResponse\"\"\x82\xd3\xe4\x93\x02\x1c\"\x17/v1/MinKCutPartitioning:\x01*\x12_\n\x0eListOperations\x12$.qbit.services.ListOperationsRequest\x1a%.qbit.services.ListOperationsResponse\"\x00\x12N\n\x0cGetOperation\x12\".qbit.services.GetOperationRequest\x1a\x18.qbit.services.Operation\"\x00\x12Z\n\x12GetOperationDetail\x12\".qbit.services.GetOperationRequest\x1a\x1e.qbit.services.OperationDetail\"\x00\x12\x64\n\x14GetOperationToWorkOn\x12*.qbit.services.GetOperationToWorkOnRequest\x1a\x1e.qbit.services.OperationDetail\"\x00\x12W\n\x17PutOperationBackToQueue\x12\".qbit.services.GetOperationRequest\x1a\x16.google.protobuf.Empty\"\x00\x12R\n\x0f\x43\x61ncelOperation\x12%.qbit.services.CancelOperationRequest\x1a\x16.google.protobuf.Empty\"\x00\x12V\n\x11\x43ompleteOperation\x12\'.qbit.services.CompleteOperationRequest\x1a\x16.google.protobuf.Empty\"\x00\x12P\n\x0e\x45rrorOperation\x12$.qbit.services.ErrorOperationRequest\x1a\x16.google.protobuf.Empty\"\x00\x12\x61\n\x0bHealthCheck\x12!.qbit.services.HealthCheckRequest\x1a\x16.google.protobuf.Empty\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/v1/healthcheckb\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,google_dot_protobuf_dot_struct__pb2.DESCRIPTOR,google_dot_api_dot_annotations__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_OPERATIONSTATUS = _descriptor.EnumDescriptor(
  name='OperationStatus',
  full_name='qbit.services.OperationStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ALL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PENDING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RUNNING', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FINISHED', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=5940,
  serialized_end=6006,
)
_sym_db.RegisterEnumDescriptor(_OPERATIONSTATUS)

OperationStatus = enum_type_wrapper.EnumTypeWrapper(_OPERATIONSTATUS)
ALL = 0
PENDING = 1
RUNNING = 2
FINISHED = 3


_QUBOREQUEST_RUNTYPE = _descriptor.EnumDescriptor(
  name='runType',
  full_name='qbit.services.QuboRequest.runType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ASYNCHRONOUS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SYNCHRONOUS', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2108,
  serialized_end=2152,
)
_sym_db.RegisterEnumDescriptor(_QUBOREQUEST_RUNTYPE)

_QUBOPROBLEM_VARIABLE_CATEGORY = _descriptor.EnumDescriptor(
  name='variable_category',
  full_name='qbit.services.QuboProblem.variable_category',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='CONTINUOUS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTEGER', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BINARY', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=4788,
  serialized_end=4848,
)
_sym_db.RegisterEnumDescriptor(_QUBOPROBLEM_VARIABLE_CATEGORY)

_QUBOPROBLEM_OBJECTIVE_SENSE = _descriptor.EnumDescriptor(
  name='objective_sense',
  full_name='qbit.services.QuboProblem.objective_sense',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='MINIMIZE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAXIMIZE', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=4850,
  serialized_end=4895,
)
_sym_db.RegisterEnumDescriptor(_QUBOPROBLEM_OBJECTIVE_SENSE)

_QUBOPROBLEM_CONSTRAIN_SENSE = _descriptor.EnumDescriptor(
  name='constrain_sense',
  full_name='qbit.services.QuboProblem.constrain_sense',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='EQ', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=4897,
  serialized_end=4938,
)
_sym_db.RegisterEnumDescriptor(_QUBOPROBLEM_CONSTRAIN_SENSE)


_COMPAREREQUEST = _descriptor.Descriptor(
  name='CompareRequest',
  full_name='qbit.services.CompareRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='smiles', full_name='qbit.services.CompareRequest.smiles', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='solver_type', full_name='qbit.services.CompareRequest.solver_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='should_visualize', full_name='qbit.services.CompareRequest.should_visualize', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='criteria', full_name='qbit.services.CompareRequest.criteria', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=118,
  serialized_end=240,
)


_COMPARISONRESULT = _descriptor.Descriptor(
  name='ComparisonResult',
  full_name='qbit.services.ComparisonResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='can_use_quantum', full_name='qbit.services.ComparisonResult.can_use_quantum', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ok', full_name='qbit.services.ComparisonResult.ok', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='visualizations', full_name='qbit.services.ComparisonResult.visualizations', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shared_traits', full_name='qbit.services.ComparisonResult.shared_traits', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='similarity', full_name='qbit.services.ComparisonResult.similarity', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=243,
  serialized_end=390,
)


_QUBOMATRIX_QUBOARRAY = _descriptor.Descriptor(
  name='QuboArray',
  full_name='qbit.services.QuboMatrix.QuboArray',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='qubo_row', full_name='qbit.services.QuboMatrix.QuboArray.qubo_row', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=457,
  serialized_end=486,
)

_QUBOMATRIX = _descriptor.Descriptor(
  name='QuboMatrix',
  full_name='qbit.services.QuboMatrix',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='qubo', full_name='qbit.services.QuboMatrix.qubo', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_QUBOMATRIX_QUBOARRAY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=392,
  serialized_end=486,
)


_BINARYPOLYNOMIAL_TERM = _descriptor.Descriptor(
  name='Term',
  full_name='qbit.services.BinaryPolynomial.Term',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='coefficient', full_name='qbit.services.BinaryPolynomial.Term.coefficient', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='polynomials', full_name='qbit.services.BinaryPolynomial.Term.polynomials', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=561,
  serialized_end=609,
)

_BINARYPOLYNOMIAL = _descriptor.Descriptor(
  name='BinaryPolynomial',
  full_name='qbit.services.BinaryPolynomial',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='terms', full_name='qbit.services.BinaryPolynomial.terms', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_BINARYPOLYNOMIAL_TERM, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=488,
  serialized_end=609,
)


_TABU1OPTSOLVER = _descriptor.Descriptor(
  name='Tabu1OptSolver',
  full_name='qbit.services.Tabu1OptSolver',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='improvement_cutoff', full_name='qbit.services.Tabu1OptSolver.improvement_cutoff', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='improvement_tolerance', full_name='qbit.services.Tabu1OptSolver.improvement_tolerance', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tabu_tenure', full_name='qbit.services.Tabu1OptSolver.tabu_tenure', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tabu_tenure_rand_max', full_name='qbit.services.Tabu1OptSolver.tabu_tenure_rand_max', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='v2', full_name='qbit.services.Tabu1OptSolver.v2',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=612,
  serialized_end=746,
)


_MULTITABU1OPTSOLVER = _descriptor.Descriptor(
  name='MultiTabu1OptSolver',
  full_name='qbit.services.MultiTabu1OptSolver',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='improvement_cutoff', full_name='qbit.services.MultiTabu1OptSolver.improvement_cutoff', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='improvement_tolerance', full_name='qbit.services.MultiTabu1OptSolver.improvement_tolerance', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tabu_tenure', full_name='qbit.services.MultiTabu1OptSolver.tabu_tenure', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tabu_tenure_rand_max', full_name='qbit.services.MultiTabu1OptSolver.tabu_tenure_rand_max', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='v2', full_name='qbit.services.MultiTabu1OptSolver.v2',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=749,
  serialized_end=888,
)


_PATHRELINKINGSOLVER = _descriptor.Descriptor(
  name='PathRelinkingSolver',
  full_name='qbit.services.PathRelinkingSolver',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='distance_scale', full_name='qbit.services.PathRelinkingSolver.distance_scale', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='greedy_path_relinking', full_name='qbit.services.PathRelinkingSolver.greedy_path_relinking', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='v1', full_name='qbit.services.PathRelinkingSolver.v1',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=890,
  serialized_end=974,
)


_SQASOLVER = _descriptor.Descriptor(
  name='SQASolver',
  full_name='qbit.services.SQASolver',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='beta', full_name='qbit.services.SQASolver.beta', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='energy_type', full_name='qbit.services.SQASolver.energy_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gamma_initial', full_name='qbit.services.SQASolver.gamma_initial', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gamma_final', full_name='qbit.services.SQASolver.gamma_final', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_reads', full_name='qbit.services.SQASolver.num_reads', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_replicas', full_name='qbit.services.SQASolver.num_replicas', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_sweeps', full_name='qbit.services.SQASolver.num_sweeps', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='v1', full_name='qbit.services.SQASolver.v1',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='v3', full_name='qbit.services.SQASolver.v3',
      index=1, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='v4', full_name='qbit.services.SQASolver.v4',
      index=2, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='v5', full_name='qbit.services.SQASolver.v5',
      index=3, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='v6', full_name='qbit.services.SQASolver.v6',
      index=4, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='v7', full_name='qbit.services.SQASolver.v7',
      index=5, containing_type=None, fields=[]),
  ],
  serialized_start=977,
  serialized_end=1176,
)


_PTICMSOLVER = _descriptor.Descriptor(
  name='PTICMSolver',
  full_name='qbit.services.PTICMSolver',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='high_temp', full_name='qbit.services.PTICMSolver.high_temp', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='low_temp', full_name='qbit.services.PTICMSolver.low_temp', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_replicas', full_name='qbit.services.PTICMSolver.num_replicas', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_sweeps', full_name='qbit.services.PTICMSolver.num_sweeps', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_temps', full_name='qbit.services.PTICMSolver.num_temps', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='v1', full_name='qbit.services.PTICMSolver.v1',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='v2', full_name='qbit.services.PTICMSolver.v2',
      index=1, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='v3', full_name='qbit.services.PTICMSolver.v3',
      index=2, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='v4', full_name='qbit.services.PTICMSolver.v4',
      index=3, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='v5', full_name='qbit.services.PTICMSolver.v5',
      index=4, containing_type=None, fields=[]),
  ],
  serialized_start=1179,
  serialized_end=1330,
)


_FUJITSUDASOLVER = _descriptor.Descriptor(
  name='FujitsuDASolver',
  full_name='qbit.services.FujitsuDASolver',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='noise_model', full_name='qbit.services.FujitsuDASolver.noise_model', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='number_iterations', full_name='qbit.services.FujitsuDASolver.number_iterations', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='number_runs', full_name='qbit.services.FujitsuDASolver.number_runs', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset_increase_rate', full_name='qbit.services.FujitsuDASolver.offset_increase_rate', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='temperature_decay', full_name='qbit.services.FujitsuDASolver.temperature_decay', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='temperature_interval', full_name='qbit.services.FujitsuDASolver.temperature_interval', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='temperature_mode', full_name='qbit.services.FujitsuDASolver.temperature_mode', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='temperature_start', full_name='qbit.services.FujitsuDASolver.temperature_start', index=7,
      number=8, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='solution_mode', full_name='qbit.services.FujitsuDASolver.solution_mode', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='v3', full_name='qbit.services.FujitsuDASolver.v3',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='v4', full_name='qbit.services.FujitsuDASolver.v4',
      index=1, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='v5', full_name='qbit.services.FujitsuDASolver.v5',
      index=2, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='v6', full_name='qbit.services.FujitsuDASolver.v6',
      index=3, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='v8', full_name='qbit.services.FujitsuDASolver.v8',
      index=4, containing_type=None, fields=[]),
  ],
  serialized_start=1333,
  serialized_end=1622,
)


_QUBOREQUEST = _descriptor.Descriptor(
  name='QuboRequest',
  full_name='qbit.services.QuboRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='run_type', full_name='qbit.services.QuboRequest.run_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='binary_polynomial', full_name='qbit.services.QuboRequest.binary_polynomial', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='qubo_matrix', full_name='qbit.services.QuboRequest.qubo_matrix', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tabu', full_name='qbit.services.QuboRequest.tabu', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='multitabu', full_name='qbit.services.QuboRequest.multitabu', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pathrelinking', full_name='qbit.services.QuboRequest.pathrelinking', index=5,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sqa', full_name='qbit.services.QuboRequest.sqa', index=6,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pticm', full_name='qbit.services.QuboRequest.pticm', index=7,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fujitsu', full_name='qbit.services.QuboRequest.fujitsu', index=8,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _QUBOREQUEST_RUNTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='qubo', full_name='qbit.services.QuboRequest.qubo',
      index=0, containing_type=None, fields=[]),
    _descriptor.OneofDescriptor(
      name='solver_parameters', full_name='qbit.services.QuboRequest.solver_parameters',
      index=1, containing_type=None, fields=[]),
  ],
  serialized_start=1625,
  serialized_end=2181,
)


_QUBOSOLUTION_CONFIGURATIONENTRY = _descriptor.Descriptor(
  name='ConfigurationEntry',
  full_name='qbit.services.QuboSolution.ConfigurationEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='qbit.services.QuboSolution.ConfigurationEntry.key', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='qbit.services.QuboSolution.ConfigurationEntry.value', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2306,
  serialized_end=2358,
)

_QUBOSOLUTION = _descriptor.Descriptor(
  name='QuboSolution',
  full_name='qbit.services.QuboSolution',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='energy', full_name='qbit.services.QuboSolution.energy', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='frequency', full_name='qbit.services.QuboSolution.frequency', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='configuration', full_name='qbit.services.QuboSolution.configuration', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_QUBOSOLUTION_CONFIGURATIONENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2184,
  serialized_end=2358,
)


_FUJITSUTIMING = _descriptor.Descriptor(
  name='FujitsuTiming',
  full_name='qbit.services.FujitsuTiming',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timing', full_name='qbit.services.FujitsuTiming.timing', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='anneal_time', full_name='qbit.services.FujitsuTiming.anneal_time', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2360,
  serialized_end=2412,
)


_QUBOSOLUTIONLIST = _descriptor.Descriptor(
  name='QuboSolutionList',
  full_name='qbit.services.QuboSolutionList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result_status', full_name='qbit.services.QuboSolutionList.result_status', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='solutions', full_name='qbit.services.QuboSolutionList.solutions', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timing', full_name='qbit.services.QuboSolutionList.timing', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='f_timing', full_name='qbit.services.QuboSolutionList.f_timing', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='t', full_name='qbit.services.QuboSolutionList.t',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2415,
  serialized_end=2577,
)


_QUBORESPONSE = _descriptor.Descriptor(
  name='QuboResponse',
  full_name='qbit.services.QuboResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='qubo_solution', full_name='qbit.services.QuboResponse.qubo_solution', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='operation', full_name='qbit.services.QuboResponse.operation', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='response', full_name='qbit.services.QuboResponse.response',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2580,
  serialized_end=2711,
)


_KNAPSACKREQUEST = _descriptor.Descriptor(
  name='KnapsackRequest',
  full_name='qbit.services.KnapsackRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tabu', full_name='qbit.services.KnapsackRequest.tabu', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='multitabu', full_name='qbit.services.KnapsackRequest.multitabu', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pathrelinking', full_name='qbit.services.KnapsackRequest.pathrelinking', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sqa', full_name='qbit.services.KnapsackRequest.sqa', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pticm', full_name='qbit.services.KnapsackRequest.pticm', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='problem', full_name='qbit.services.KnapsackRequest.problem', index=5,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='solver', full_name='qbit.services.KnapsackRequest.solver',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2714,
  serialized_end=3041,
)


_KNAPSACKPROBLEM = _descriptor.Descriptor(
  name='KnapsackProblem',
  full_name='qbit.services.KnapsackProblem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='capacity', full_name='qbit.services.KnapsackProblem.capacity', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='items', full_name='qbit.services.KnapsackProblem.items', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3043,
  serialized_end=3122,
)


_KNAPSACKITEM = _descriptor.Descriptor(
  name='KnapsackItem',
  full_name='qbit.services.KnapsackItem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='qbit.services.KnapsackItem.index', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='weight', full_name='qbit.services.KnapsackItem.weight', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='qbit.services.KnapsackItem.value', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3124,
  serialized_end=3184,
)


_KNAPSACKRESPONSE = _descriptor.Descriptor(
  name='KnapsackResponse',
  full_name='qbit.services.KnapsackResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='solutions', full_name='qbit.services.KnapsackResponse.solutions', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3186,
  serialized_end=3256,
)


_KNAPSACKSOLUTION = _descriptor.Descriptor(
  name='KnapsackSolution',
  full_name='qbit.services.KnapsackSolution',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='feasible', full_name='qbit.services.KnapsackSolution.feasible', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='qbit.services.KnapsackSolution.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='weight', full_name='qbit.services.KnapsackSolution.weight', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='configurations', full_name='qbit.services.KnapsackSolution.configurations', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3259,
  serialized_end=3388,
)


_KNAPSACKCONFIGURATION = _descriptor.Descriptor(
  name='KnapsackConfiguration',
  full_name='qbit.services.KnapsackConfiguration',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='qbit.services.KnapsackConfiguration.index', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='selected', full_name='qbit.services.KnapsackConfiguration.selected', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3390,
  serialized_end=3446,
)


_MINKCUTREQUEST = _descriptor.Descriptor(
  name='MinKCutRequest',
  full_name='qbit.services.MinKCutRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tabu', full_name='qbit.services.MinKCutRequest.tabu', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='multitabu', full_name='qbit.services.MinKCutRequest.multitabu', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pathrelinking', full_name='qbit.services.MinKCutRequest.pathrelinking', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sqa', full_name='qbit.services.MinKCutRequest.sqa', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pticm', full_name='qbit.services.MinKCutRequest.pticm', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='graphs', full_name='qbit.services.MinKCutRequest.graphs', index=5,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='solver', full_name='qbit.services.MinKCutRequest.solver',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3449,
  serialized_end=3764,
)


_GRAPH = _descriptor.Descriptor(
  name='Graph',
  full_name='qbit.services.Graph',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node1', full_name='qbit.services.Graph.node1', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='node2', full_name='qbit.services.Graph.node2', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='weight', full_name='qbit.services.Graph.weight', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3766,
  serialized_end=3819,
)


_MINKCUTRESPONSE = _descriptor.Descriptor(
  name='MinKCutResponse',
  full_name='qbit.services.MinKCutResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='solutions', full_name='qbit.services.MinKCutResponse.solutions', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3821,
  serialized_end=3889,
)


_MINKCUTSOLUTION = _descriptor.Descriptor(
  name='MinKCutSolution',
  full_name='qbit.services.MinKCutSolution',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='feasible', full_name='qbit.services.MinKCutSolution.feasible', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='qbit.services.MinKCutSolution.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mapping', full_name='qbit.services.MinKCutSolution.mapping', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3891,
  serialized_end=3989,
)


_MINKCUTMAPPING = _descriptor.Descriptor(
  name='MinKCutMapping',
  full_name='qbit.services.MinKCutMapping',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='partition_index', full_name='qbit.services.MinKCutMapping.partition_index', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vertex_index', full_name='qbit.services.MinKCutMapping.vertex_index', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3991,
  serialized_end=4054,
)


_QUBOPROBLEM_VARIABLE = _descriptor.Descriptor(
  name='variable',
  full_name='qbit.services.QuboProblem.variable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='qbit.services.QuboProblem.variable.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='up_bound', full_name='qbit.services.QuboProblem.variable.up_bound', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='low_bound', full_name='qbit.services.QuboProblem.variable.low_bound', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='category', full_name='qbit.services.QuboProblem.variable.category', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4312,
  serialized_end=4437,
)

_QUBOPROBLEM_QUADRATIC_TERM = _descriptor.Descriptor(
  name='quadratic_term',
  full_name='qbit.services.QuboProblem.quadratic_term',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='variable1', full_name='qbit.services.QuboProblem.quadratic_term.variable1', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='variable2', full_name='qbit.services.QuboProblem.quadratic_term.variable2', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='coefficient', full_name='qbit.services.QuboProblem.quadratic_term.coefficient', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4439,
  serialized_end=4514,
)

_QUBOPROBLEM_CONSTRAINT = _descriptor.Descriptor(
  name='constraint',
  full_name='qbit.services.QuboProblem.constraint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='quadratic_terms', full_name='qbit.services.QuboProblem.constraint.quadratic_terms', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rhs', full_name='qbit.services.QuboProblem.constraint.rhs', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sense', full_name='qbit.services.QuboProblem.constraint.sense', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='qbit.services.QuboProblem.constraint.name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4517,
  serialized_end=4683,
)

_QUBOPROBLEM_PROBLEM_OBJECTIVE = _descriptor.Descriptor(
  name='problem_objective',
  full_name='qbit.services.QuboProblem.problem_objective',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='quadratic_terms', full_name='qbit.services.QuboProblem.problem_objective.quadratic_terms', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='qbit.services.QuboProblem.problem_objective.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4685,
  serialized_end=4786,
)

_QUBOPROBLEM = _descriptor.Descriptor(
  name='QuboProblem',
  full_name='qbit.services.QuboProblem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='variables', full_name='qbit.services.QuboProblem.variables', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='constraints', full_name='qbit.services.QuboProblem.constraints', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='objective', full_name='qbit.services.QuboProblem.objective', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sense', full_name='qbit.services.QuboProblem.sense', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_QUBOPROBLEM_VARIABLE, _QUBOPROBLEM_QUADRATIC_TERM, _QUBOPROBLEM_CONSTRAINT, _QUBOPROBLEM_PROBLEM_OBJECTIVE, ],
  enum_types=[
    _QUBOPROBLEM_VARIABLE_CATEGORY,
    _QUBOPROBLEM_OBJECTIVE_SENSE,
    _QUBOPROBLEM_CONSTRAIN_SENSE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4057,
  serialized_end=4938,
)


_OPERATION = _descriptor.Descriptor(
  name='Operation',
  full_name='qbit.services.Operation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='job_id', full_name='qbit.services.Operation.job_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='qbit.services.Operation.status', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='qbit.services.Operation.error', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='qubo_response', full_name='qbit.services.Operation.qubo_response', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='result', full_name='qbit.services.Operation.result',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4941,
  serialized_end=5132,
)


_OPERATIONDETAIL = _descriptor.Descriptor(
  name='OperationDetail',
  full_name='qbit.services.OperationDetail',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='job_id', full_name='qbit.services.OperationDetail.job_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='qbit.services.OperationDetail.status', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='request', full_name='qbit.services.OperationDetail.request', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='qbit.services.OperationDetail.error', index=3,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='qubo_response', full_name='qbit.services.OperationDetail.qubo_response', index=4,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='result', full_name='qbit.services.OperationDetail.result',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=5135,
  serialized_end=5377,
)


_OPERATIONERROR = _descriptor.Descriptor(
  name='OperationError',
  full_name='qbit.services.OperationError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='qbit.services.OperationError.code', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='qbit.services.OperationError.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5379,
  serialized_end=5426,
)


_GETOPERATIONREQUEST = _descriptor.Descriptor(
  name='GetOperationRequest',
  full_name='qbit.services.GetOperationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='job_id', full_name='qbit.services.GetOperationRequest.job_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5428,
  serialized_end=5465,
)


_GETOPERATIONTOWORKONREQUEST = _descriptor.Descriptor(
  name='GetOperationToWorkOnRequest',
  full_name='qbit.services.GetOperationToWorkOnRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='worker_type', full_name='qbit.services.GetOperationToWorkOnRequest.worker_type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5467,
  serialized_end=5517,
)


_LISTOPERATIONSREQUEST = _descriptor.Descriptor(
  name='ListOperationsRequest',
  full_name='qbit.services.ListOperationsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='qbit.services.ListOperationsRequest.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_time', full_name='qbit.services.ListOperationsRequest.start_time', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='qbit.services.ListOperationsRequest.end_time', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5519,
  serialized_end=5628,
)


_LISTOPERATIONSRESPONSE = _descriptor.Descriptor(
  name='ListOperationsResponse',
  full_name='qbit.services.ListOperationsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='operations', full_name='qbit.services.ListOperationsResponse.operations', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='qbit.services.ListOperationsResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5630,
  serialized_end=5725,
)


_CANCELOPERATIONREQUEST = _descriptor.Descriptor(
  name='CancelOperationRequest',
  full_name='qbit.services.CancelOperationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='job_id', full_name='qbit.services.CancelOperationRequest.job_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5727,
  serialized_end=5767,
)


_COMPLETEOPERATIONREQUEST = _descriptor.Descriptor(
  name='CompleteOperationRequest',
  full_name='qbit.services.CompleteOperationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='job_id', full_name='qbit.services.CompleteOperationRequest.job_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='result', full_name='qbit.services.CompleteOperationRequest.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5769,
  serialized_end=5860,
)


_ERROROPERATIONREQUEST = _descriptor.Descriptor(
  name='ErrorOperationRequest',
  full_name='qbit.services.ErrorOperationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='job_id', full_name='qbit.services.ErrorOperationRequest.job_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error', full_name='qbit.services.ErrorOperationRequest.error', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5862,
  serialized_end=5916,
)


_HEALTHCHECKREQUEST = _descriptor.Descriptor(
  name='HealthCheckRequest',
  full_name='qbit.services.HealthCheckRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5918,
  serialized_end=5938,
)

_COMPAREREQUEST.fields_by_name['criteria'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_COMPARISONRESULT.fields_by_name['shared_traits'].message_type = google_dot_protobuf_dot_struct__pb2._STRUCT
_QUBOMATRIX_QUBOARRAY.containing_type = _QUBOMATRIX
_QUBOMATRIX.fields_by_name['qubo'].message_type = _QUBOMATRIX_QUBOARRAY
_BINARYPOLYNOMIAL_TERM.containing_type = _BINARYPOLYNOMIAL
_BINARYPOLYNOMIAL.fields_by_name['terms'].message_type = _BINARYPOLYNOMIAL_TERM
_TABU1OPTSOLVER.oneofs_by_name['v2'].fields.append(
  _TABU1OPTSOLVER.fields_by_name['improvement_tolerance'])
_TABU1OPTSOLVER.fields_by_name['improvement_tolerance'].containing_oneof = _TABU1OPTSOLVER.oneofs_by_name['v2']
_MULTITABU1OPTSOLVER.oneofs_by_name['v2'].fields.append(
  _MULTITABU1OPTSOLVER.fields_by_name['improvement_tolerance'])
_MULTITABU1OPTSOLVER.fields_by_name['improvement_tolerance'].containing_oneof = _MULTITABU1OPTSOLVER.oneofs_by_name['v2']
_PATHRELINKINGSOLVER.oneofs_by_name['v1'].fields.append(
  _PATHRELINKINGSOLVER.fields_by_name['distance_scale'])
_PATHRELINKINGSOLVER.fields_by_name['distance_scale'].containing_oneof = _PATHRELINKINGSOLVER.oneofs_by_name['v1']
_SQASOLVER.oneofs_by_name['v1'].fields.append(
  _SQASOLVER.fields_by_name['beta'])
_SQASOLVER.fields_by_name['beta'].containing_oneof = _SQASOLVER.oneofs_by_name['v1']
_SQASOLVER.oneofs_by_name['v3'].fields.append(
  _SQASOLVER.fields_by_name['gamma_initial'])
_SQASOLVER.fields_by_name['gamma_initial'].containing_oneof = _SQASOLVER.oneofs_by_name['v3']
_SQASOLVER.oneofs_by_name['v4'].fields.append(
  _SQASOLVER.fields_by_name['gamma_final'])
_SQASOLVER.fields_by_name['gamma_final'].containing_oneof = _SQASOLVER.oneofs_by_name['v4']
_SQASOLVER.oneofs_by_name['v5'].fields.append(
  _SQASOLVER.fields_by_name['num_reads'])
_SQASOLVER.fields_by_name['num_reads'].containing_oneof = _SQASOLVER.oneofs_by_name['v5']
_SQASOLVER.oneofs_by_name['v6'].fields.append(
  _SQASOLVER.fields_by_name['num_replicas'])
_SQASOLVER.fields_by_name['num_replicas'].containing_oneof = _SQASOLVER.oneofs_by_name['v6']
_SQASOLVER.oneofs_by_name['v7'].fields.append(
  _SQASOLVER.fields_by_name['num_sweeps'])
_SQASOLVER.fields_by_name['num_sweeps'].containing_oneof = _SQASOLVER.oneofs_by_name['v7']
_PTICMSOLVER.oneofs_by_name['v1'].fields.append(
  _PTICMSOLVER.fields_by_name['high_temp'])
_PTICMSOLVER.fields_by_name['high_temp'].containing_oneof = _PTICMSOLVER.oneofs_by_name['v1']
_PTICMSOLVER.oneofs_by_name['v2'].fields.append(
  _PTICMSOLVER.fields_by_name['low_temp'])
_PTICMSOLVER.fields_by_name['low_temp'].containing_oneof = _PTICMSOLVER.oneofs_by_name['v2']
_PTICMSOLVER.oneofs_by_name['v3'].fields.append(
  _PTICMSOLVER.fields_by_name['num_replicas'])
_PTICMSOLVER.fields_by_name['num_replicas'].containing_oneof = _PTICMSOLVER.oneofs_by_name['v3']
_PTICMSOLVER.oneofs_by_name['v4'].fields.append(
  _PTICMSOLVER.fields_by_name['num_sweeps'])
_PTICMSOLVER.fields_by_name['num_sweeps'].containing_oneof = _PTICMSOLVER.oneofs_by_name['v4']
_PTICMSOLVER.oneofs_by_name['v5'].fields.append(
  _PTICMSOLVER.fields_by_name['num_temps'])
_PTICMSOLVER.fields_by_name['num_temps'].containing_oneof = _PTICMSOLVER.oneofs_by_name['v5']
_FUJITSUDASOLVER.oneofs_by_name['v3'].fields.append(
  _FUJITSUDASOLVER.fields_by_name['number_runs'])
_FUJITSUDASOLVER.fields_by_name['number_runs'].containing_oneof = _FUJITSUDASOLVER.oneofs_by_name['v3']
_FUJITSUDASOLVER.oneofs_by_name['v4'].fields.append(
  _FUJITSUDASOLVER.fields_by_name['offset_increase_rate'])
_FUJITSUDASOLVER.fields_by_name['offset_increase_rate'].containing_oneof = _FUJITSUDASOLVER.oneofs_by_name['v4']
_FUJITSUDASOLVER.oneofs_by_name['v5'].fields.append(
  _FUJITSUDASOLVER.fields_by_name['temperature_decay'])
_FUJITSUDASOLVER.fields_by_name['temperature_decay'].containing_oneof = _FUJITSUDASOLVER.oneofs_by_name['v5']
_FUJITSUDASOLVER.oneofs_by_name['v6'].fields.append(
  _FUJITSUDASOLVER.fields_by_name['temperature_interval'])
_FUJITSUDASOLVER.fields_by_name['temperature_interval'].containing_oneof = _FUJITSUDASOLVER.oneofs_by_name['v6']
_FUJITSUDASOLVER.oneofs_by_name['v8'].fields.append(
  _FUJITSUDASOLVER.fields_by_name['temperature_start'])
_FUJITSUDASOLVER.fields_by_name['temperature_start'].containing_oneof = _FUJITSUDASOLVER.oneofs_by_name['v8']
_QUBOREQUEST.fields_by_name['run_type'].enum_type = _QUBOREQUEST_RUNTYPE
_QUBOREQUEST.fields_by_name['binary_polynomial'].message_type = _BINARYPOLYNOMIAL
_QUBOREQUEST.fields_by_name['qubo_matrix'].message_type = _QUBOMATRIX
_QUBOREQUEST.fields_by_name['tabu'].message_type = _TABU1OPTSOLVER
_QUBOREQUEST.fields_by_name['multitabu'].message_type = _MULTITABU1OPTSOLVER
_QUBOREQUEST.fields_by_name['pathrelinking'].message_type = _PATHRELINKINGSOLVER
_QUBOREQUEST.fields_by_name['sqa'].message_type = _SQASOLVER
_QUBOREQUEST.fields_by_name['pticm'].message_type = _PTICMSOLVER
_QUBOREQUEST.fields_by_name['fujitsu'].message_type = _FUJITSUDASOLVER
_QUBOREQUEST_RUNTYPE.containing_type = _QUBOREQUEST
_QUBOREQUEST.oneofs_by_name['qubo'].fields.append(
  _QUBOREQUEST.fields_by_name['binary_polynomial'])
_QUBOREQUEST.fields_by_name['binary_polynomial'].containing_oneof = _QUBOREQUEST.oneofs_by_name['qubo']
_QUBOREQUEST.oneofs_by_name['qubo'].fields.append(
  _QUBOREQUEST.fields_by_name['qubo_matrix'])
_QUBOREQUEST.fields_by_name['qubo_matrix'].containing_oneof = _QUBOREQUEST.oneofs_by_name['qubo']
_QUBOREQUEST.oneofs_by_name['solver_parameters'].fields.append(
  _QUBOREQUEST.fields_by_name['tabu'])
_QUBOREQUEST.fields_by_name['tabu'].containing_oneof = _QUBOREQUEST.oneofs_by_name['solver_parameters']
_QUBOREQUEST.oneofs_by_name['solver_parameters'].fields.append(
  _QUBOREQUEST.fields_by_name['multitabu'])
_QUBOREQUEST.fields_by_name['multitabu'].containing_oneof = _QUBOREQUEST.oneofs_by_name['solver_parameters']
_QUBOREQUEST.oneofs_by_name['solver_parameters'].fields.append(
  _QUBOREQUEST.fields_by_name['pathrelinking'])
_QUBOREQUEST.fields_by_name['pathrelinking'].containing_oneof = _QUBOREQUEST.oneofs_by_name['solver_parameters']
_QUBOREQUEST.oneofs_by_name['solver_parameters'].fields.append(
  _QUBOREQUEST.fields_by_name['sqa'])
_QUBOREQUEST.fields_by_name['sqa'].containing_oneof = _QUBOREQUEST.oneofs_by_name['solver_parameters']
_QUBOREQUEST.oneofs_by_name['solver_parameters'].fields.append(
  _QUBOREQUEST.fields_by_name['pticm'])
_QUBOREQUEST.fields_by_name['pticm'].containing_oneof = _QUBOREQUEST.oneofs_by_name['solver_parameters']
_QUBOREQUEST.oneofs_by_name['solver_parameters'].fields.append(
  _QUBOREQUEST.fields_by_name['fujitsu'])
_QUBOREQUEST.fields_by_name['fujitsu'].containing_oneof = _QUBOREQUEST.oneofs_by_name['solver_parameters']
_QUBOSOLUTION_CONFIGURATIONENTRY.containing_type = _QUBOSOLUTION
_QUBOSOLUTION.fields_by_name['configuration'].message_type = _QUBOSOLUTION_CONFIGURATIONENTRY
_QUBOSOLUTIONLIST.fields_by_name['solutions'].message_type = _QUBOSOLUTION
_QUBOSOLUTIONLIST.fields_by_name['f_timing'].message_type = _FUJITSUTIMING
_QUBOSOLUTIONLIST.oneofs_by_name['t'].fields.append(
  _QUBOSOLUTIONLIST.fields_by_name['timing'])
_QUBOSOLUTIONLIST.fields_by_name['timing'].containing_oneof = _QUBOSOLUTIONLIST.oneofs_by_name['t']
_QUBOSOLUTIONLIST.oneofs_by_name['t'].fields.append(
  _QUBOSOLUTIONLIST.fields_by_name['f_timing'])
_QUBOSOLUTIONLIST.fields_by_name['f_timing'].containing_oneof = _QUBOSOLUTIONLIST.oneofs_by_name['t']
_QUBORESPONSE.fields_by_name['qubo_solution'].message_type = _QUBOSOLUTIONLIST
_QUBORESPONSE.fields_by_name['operation'].message_type = _OPERATION
_QUBORESPONSE.oneofs_by_name['response'].fields.append(
  _QUBORESPONSE.fields_by_name['qubo_solution'])
_QUBORESPONSE.fields_by_name['qubo_solution'].containing_oneof = _QUBORESPONSE.oneofs_by_name['response']
_QUBORESPONSE.oneofs_by_name['response'].fields.append(
  _QUBORESPONSE.fields_by_name['operation'])
_QUBORESPONSE.fields_by_name['operation'].containing_oneof = _QUBORESPONSE.oneofs_by_name['response']
_KNAPSACKREQUEST.fields_by_name['tabu'].message_type = _TABU1OPTSOLVER
_KNAPSACKREQUEST.fields_by_name['multitabu'].message_type = _MULTITABU1OPTSOLVER
_KNAPSACKREQUEST.fields_by_name['pathrelinking'].message_type = _PATHRELINKINGSOLVER
_KNAPSACKREQUEST.fields_by_name['sqa'].message_type = _SQASOLVER
_KNAPSACKREQUEST.fields_by_name['pticm'].message_type = _PTICMSOLVER
_KNAPSACKREQUEST.fields_by_name['problem'].message_type = _KNAPSACKPROBLEM
_KNAPSACKREQUEST.oneofs_by_name['solver'].fields.append(
  _KNAPSACKREQUEST.fields_by_name['tabu'])
_KNAPSACKREQUEST.fields_by_name['tabu'].containing_oneof = _KNAPSACKREQUEST.oneofs_by_name['solver']
_KNAPSACKREQUEST.oneofs_by_name['solver'].fields.append(
  _KNAPSACKREQUEST.fields_by_name['multitabu'])
_KNAPSACKREQUEST.fields_by_name['multitabu'].containing_oneof = _KNAPSACKREQUEST.oneofs_by_name['solver']
_KNAPSACKREQUEST.oneofs_by_name['solver'].fields.append(
  _KNAPSACKREQUEST.fields_by_name['pathrelinking'])
_KNAPSACKREQUEST.fields_by_name['pathrelinking'].containing_oneof = _KNAPSACKREQUEST.oneofs_by_name['solver']
_KNAPSACKREQUEST.oneofs_by_name['solver'].fields.append(
  _KNAPSACKREQUEST.fields_by_name['sqa'])
_KNAPSACKREQUEST.fields_by_name['sqa'].containing_oneof = _KNAPSACKREQUEST.oneofs_by_name['solver']
_KNAPSACKREQUEST.oneofs_by_name['solver'].fields.append(
  _KNAPSACKREQUEST.fields_by_name['pticm'])
_KNAPSACKREQUEST.fields_by_name['pticm'].containing_oneof = _KNAPSACKREQUEST.oneofs_by_name['solver']
_KNAPSACKPROBLEM.fields_by_name['items'].message_type = _KNAPSACKITEM
_KNAPSACKRESPONSE.fields_by_name['solutions'].message_type = _KNAPSACKSOLUTION
_KNAPSACKSOLUTION.fields_by_name['configurations'].message_type = _KNAPSACKCONFIGURATION
_MINKCUTREQUEST.fields_by_name['tabu'].message_type = _TABU1OPTSOLVER
_MINKCUTREQUEST.fields_by_name['multitabu'].message_type = _MULTITABU1OPTSOLVER
_MINKCUTREQUEST.fields_by_name['pathrelinking'].message_type = _PATHRELINKINGSOLVER
_MINKCUTREQUEST.fields_by_name['sqa'].message_type = _SQASOLVER
_MINKCUTREQUEST.fields_by_name['pticm'].message_type = _PTICMSOLVER
_MINKCUTREQUEST.fields_by_name['graphs'].message_type = _GRAPH
_MINKCUTREQUEST.oneofs_by_name['solver'].fields.append(
  _MINKCUTREQUEST.fields_by_name['tabu'])
_MINKCUTREQUEST.fields_by_name['tabu'].containing_oneof = _MINKCUTREQUEST.oneofs_by_name['solver']
_MINKCUTREQUEST.oneofs_by_name['solver'].fields.append(
  _MINKCUTREQUEST.fields_by_name['multitabu'])
_MINKCUTREQUEST.fields_by_name['multitabu'].containing_oneof = _MINKCUTREQUEST.oneofs_by_name['solver']
_MINKCUTREQUEST.oneofs_by_name['solver'].fields.append(
  _MINKCUTREQUEST.fields_by_name['pathrelinking'])
_MINKCUTREQUEST.fields_by_name['pathrelinking'].containing_oneof = _MINKCUTREQUEST.oneofs_by_name['solver']
_MINKCUTREQUEST.oneofs_by_name['solver'].fields.append(
  _MINKCUTREQUEST.fields_by_name['sqa'])
_MINKCUTREQUEST.fields_by_name['sqa'].containing_oneof = _MINKCUTREQUEST.oneofs_by_name['solver']
_MINKCUTREQUEST.oneofs_by_name['solver'].fields.append(
  _MINKCUTREQUEST.fields_by_name['pticm'])
_MINKCUTREQUEST.fields_by_name['pticm'].containing_oneof = _MINKCUTREQUEST.oneofs_by_name['solver']
_MINKCUTRESPONSE.fields_by_name['solutions'].message_type = _MINKCUTSOLUTION
_MINKCUTSOLUTION.fields_by_name['mapping'].message_type = _MINKCUTMAPPING
_QUBOPROBLEM_VARIABLE.fields_by_name['category'].enum_type = _QUBOPROBLEM_VARIABLE_CATEGORY
_QUBOPROBLEM_VARIABLE.containing_type = _QUBOPROBLEM
_QUBOPROBLEM_QUADRATIC_TERM.containing_type = _QUBOPROBLEM
_QUBOPROBLEM_CONSTRAINT.fields_by_name['quadratic_terms'].message_type = _QUBOPROBLEM_QUADRATIC_TERM
_QUBOPROBLEM_CONSTRAINT.fields_by_name['sense'].enum_type = _QUBOPROBLEM_CONSTRAIN_SENSE
_QUBOPROBLEM_CONSTRAINT.containing_type = _QUBOPROBLEM
_QUBOPROBLEM_PROBLEM_OBJECTIVE.fields_by_name['quadratic_terms'].message_type = _QUBOPROBLEM_QUADRATIC_TERM
_QUBOPROBLEM_PROBLEM_OBJECTIVE.containing_type = _QUBOPROBLEM
_QUBOPROBLEM.fields_by_name['variables'].message_type = _QUBOPROBLEM_VARIABLE
_QUBOPROBLEM.fields_by_name['constraints'].message_type = _QUBOPROBLEM_CONSTRAINT
_QUBOPROBLEM.fields_by_name['objective'].message_type = _QUBOPROBLEM_PROBLEM_OBJECTIVE
_QUBOPROBLEM.fields_by_name['sense'].enum_type = _QUBOPROBLEM_OBJECTIVE_SENSE
_QUBOPROBLEM_VARIABLE_CATEGORY.containing_type = _QUBOPROBLEM
_QUBOPROBLEM_OBJECTIVE_SENSE.containing_type = _QUBOPROBLEM
_QUBOPROBLEM_CONSTRAIN_SENSE.containing_type = _QUBOPROBLEM
_OPERATION.fields_by_name['status'].enum_type = _OPERATIONSTATUS
_OPERATION.fields_by_name['error'].message_type = _OPERATIONERROR
_OPERATION.fields_by_name['qubo_response'].message_type = _QUBOSOLUTIONLIST
_OPERATION.oneofs_by_name['result'].fields.append(
  _OPERATION.fields_by_name['error'])
_OPERATION.fields_by_name['error'].containing_oneof = _OPERATION.oneofs_by_name['result']
_OPERATION.oneofs_by_name['result'].fields.append(
  _OPERATION.fields_by_name['qubo_response'])
_OPERATION.fields_by_name['qubo_response'].containing_oneof = _OPERATION.oneofs_by_name['result']
_OPERATIONDETAIL.fields_by_name['status'].enum_type = _OPERATIONSTATUS
_OPERATIONDETAIL.fields_by_name['request'].message_type = _QUBOREQUEST
_OPERATIONDETAIL.fields_by_name['error'].message_type = _OPERATIONERROR
_OPERATIONDETAIL.fields_by_name['qubo_response'].message_type = _QUBOSOLUTIONLIST
_OPERATIONDETAIL.oneofs_by_name['result'].fields.append(
  _OPERATIONDETAIL.fields_by_name['error'])
_OPERATIONDETAIL.fields_by_name['error'].containing_oneof = _OPERATIONDETAIL.oneofs_by_name['result']
_OPERATIONDETAIL.oneofs_by_name['result'].fields.append(
  _OPERATIONDETAIL.fields_by_name['qubo_response'])
_OPERATIONDETAIL.fields_by_name['qubo_response'].containing_oneof = _OPERATIONDETAIL.oneofs_by_name['result']
_LISTOPERATIONSREQUEST.fields_by_name['status'].enum_type = _OPERATIONSTATUS
_LISTOPERATIONSRESPONSE.fields_by_name['operations'].message_type = _OPERATION
_COMPLETEOPERATIONREQUEST.fields_by_name['result'].message_type = _QUBOSOLUTIONLIST
DESCRIPTOR.message_types_by_name['CompareRequest'] = _COMPAREREQUEST
DESCRIPTOR.message_types_by_name['ComparisonResult'] = _COMPARISONRESULT
DESCRIPTOR.message_types_by_name['QuboMatrix'] = _QUBOMATRIX
DESCRIPTOR.message_types_by_name['BinaryPolynomial'] = _BINARYPOLYNOMIAL
DESCRIPTOR.message_types_by_name['Tabu1OptSolver'] = _TABU1OPTSOLVER
DESCRIPTOR.message_types_by_name['MultiTabu1OptSolver'] = _MULTITABU1OPTSOLVER
DESCRIPTOR.message_types_by_name['PathRelinkingSolver'] = _PATHRELINKINGSOLVER
DESCRIPTOR.message_types_by_name['SQASolver'] = _SQASOLVER
DESCRIPTOR.message_types_by_name['PTICMSolver'] = _PTICMSOLVER
DESCRIPTOR.message_types_by_name['FujitsuDASolver'] = _FUJITSUDASOLVER
DESCRIPTOR.message_types_by_name['QuboRequest'] = _QUBOREQUEST
DESCRIPTOR.message_types_by_name['QuboSolution'] = _QUBOSOLUTION
DESCRIPTOR.message_types_by_name['FujitsuTiming'] = _FUJITSUTIMING
DESCRIPTOR.message_types_by_name['QuboSolutionList'] = _QUBOSOLUTIONLIST
DESCRIPTOR.message_types_by_name['QuboResponse'] = _QUBORESPONSE
DESCRIPTOR.message_types_by_name['KnapsackRequest'] = _KNAPSACKREQUEST
DESCRIPTOR.message_types_by_name['KnapsackProblem'] = _KNAPSACKPROBLEM
DESCRIPTOR.message_types_by_name['KnapsackItem'] = _KNAPSACKITEM
DESCRIPTOR.message_types_by_name['KnapsackResponse'] = _KNAPSACKRESPONSE
DESCRIPTOR.message_types_by_name['KnapsackSolution'] = _KNAPSACKSOLUTION
DESCRIPTOR.message_types_by_name['KnapsackConfiguration'] = _KNAPSACKCONFIGURATION
DESCRIPTOR.message_types_by_name['MinKCutRequest'] = _MINKCUTREQUEST
DESCRIPTOR.message_types_by_name['Graph'] = _GRAPH
DESCRIPTOR.message_types_by_name['MinKCutResponse'] = _MINKCUTRESPONSE
DESCRIPTOR.message_types_by_name['MinKCutSolution'] = _MINKCUTSOLUTION
DESCRIPTOR.message_types_by_name['MinKCutMapping'] = _MINKCUTMAPPING
DESCRIPTOR.message_types_by_name['QuboProblem'] = _QUBOPROBLEM
DESCRIPTOR.message_types_by_name['Operation'] = _OPERATION
DESCRIPTOR.message_types_by_name['OperationDetail'] = _OPERATIONDETAIL
DESCRIPTOR.message_types_by_name['OperationError'] = _OPERATIONERROR
DESCRIPTOR.message_types_by_name['GetOperationRequest'] = _GETOPERATIONREQUEST
DESCRIPTOR.message_types_by_name['GetOperationToWorkOnRequest'] = _GETOPERATIONTOWORKONREQUEST
DESCRIPTOR.message_types_by_name['ListOperationsRequest'] = _LISTOPERATIONSREQUEST
DESCRIPTOR.message_types_by_name['ListOperationsResponse'] = _LISTOPERATIONSRESPONSE
DESCRIPTOR.message_types_by_name['CancelOperationRequest'] = _CANCELOPERATIONREQUEST
DESCRIPTOR.message_types_by_name['CompleteOperationRequest'] = _COMPLETEOPERATIONREQUEST
DESCRIPTOR.message_types_by_name['ErrorOperationRequest'] = _ERROROPERATIONREQUEST
DESCRIPTOR.message_types_by_name['HealthCheckRequest'] = _HEALTHCHECKREQUEST
DESCRIPTOR.enum_types_by_name['OperationStatus'] = _OPERATIONSTATUS

CompareRequest = _reflection.GeneratedProtocolMessageType('CompareRequest', (_message.Message,), dict(
  DESCRIPTOR = _COMPAREREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.CompareRequest)
  ))
_sym_db.RegisterMessage(CompareRequest)

ComparisonResult = _reflection.GeneratedProtocolMessageType('ComparisonResult', (_message.Message,), dict(
  DESCRIPTOR = _COMPARISONRESULT,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.ComparisonResult)
  ))
_sym_db.RegisterMessage(ComparisonResult)

QuboMatrix = _reflection.GeneratedProtocolMessageType('QuboMatrix', (_message.Message,), dict(

  QuboArray = _reflection.GeneratedProtocolMessageType('QuboArray', (_message.Message,), dict(
    DESCRIPTOR = _QUBOMATRIX_QUBOARRAY,
    __module__ = 'qbit_pb2'
    # @@protoc_insertion_point(class_scope:qbit.services.QuboMatrix.QuboArray)
    ))
  ,
  DESCRIPTOR = _QUBOMATRIX,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.QuboMatrix)
  ))
_sym_db.RegisterMessage(QuboMatrix)
_sym_db.RegisterMessage(QuboMatrix.QuboArray)

BinaryPolynomial = _reflection.GeneratedProtocolMessageType('BinaryPolynomial', (_message.Message,), dict(

  Term = _reflection.GeneratedProtocolMessageType('Term', (_message.Message,), dict(
    DESCRIPTOR = _BINARYPOLYNOMIAL_TERM,
    __module__ = 'qbit_pb2'
    # @@protoc_insertion_point(class_scope:qbit.services.BinaryPolynomial.Term)
    ))
  ,
  DESCRIPTOR = _BINARYPOLYNOMIAL,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.BinaryPolynomial)
  ))
_sym_db.RegisterMessage(BinaryPolynomial)
_sym_db.RegisterMessage(BinaryPolynomial.Term)

Tabu1OptSolver = _reflection.GeneratedProtocolMessageType('Tabu1OptSolver', (_message.Message,), dict(
  DESCRIPTOR = _TABU1OPTSOLVER,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.Tabu1OptSolver)
  ))
_sym_db.RegisterMessage(Tabu1OptSolver)

MultiTabu1OptSolver = _reflection.GeneratedProtocolMessageType('MultiTabu1OptSolver', (_message.Message,), dict(
  DESCRIPTOR = _MULTITABU1OPTSOLVER,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.MultiTabu1OptSolver)
  ))
_sym_db.RegisterMessage(MultiTabu1OptSolver)

PathRelinkingSolver = _reflection.GeneratedProtocolMessageType('PathRelinkingSolver', (_message.Message,), dict(
  DESCRIPTOR = _PATHRELINKINGSOLVER,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.PathRelinkingSolver)
  ))
_sym_db.RegisterMessage(PathRelinkingSolver)

SQASolver = _reflection.GeneratedProtocolMessageType('SQASolver', (_message.Message,), dict(
  DESCRIPTOR = _SQASOLVER,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.SQASolver)
  ))
_sym_db.RegisterMessage(SQASolver)

PTICMSolver = _reflection.GeneratedProtocolMessageType('PTICMSolver', (_message.Message,), dict(
  DESCRIPTOR = _PTICMSOLVER,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.PTICMSolver)
  ))
_sym_db.RegisterMessage(PTICMSolver)

FujitsuDASolver = _reflection.GeneratedProtocolMessageType('FujitsuDASolver', (_message.Message,), dict(
  DESCRIPTOR = _FUJITSUDASOLVER,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.FujitsuDASolver)
  ))
_sym_db.RegisterMessage(FujitsuDASolver)

QuboRequest = _reflection.GeneratedProtocolMessageType('QuboRequest', (_message.Message,), dict(
  DESCRIPTOR = _QUBOREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.QuboRequest)
  ))
_sym_db.RegisterMessage(QuboRequest)

QuboSolution = _reflection.GeneratedProtocolMessageType('QuboSolution', (_message.Message,), dict(

  ConfigurationEntry = _reflection.GeneratedProtocolMessageType('ConfigurationEntry', (_message.Message,), dict(
    DESCRIPTOR = _QUBOSOLUTION_CONFIGURATIONENTRY,
    __module__ = 'qbit_pb2'
    # @@protoc_insertion_point(class_scope:qbit.services.QuboSolution.ConfigurationEntry)
    ))
  ,
  DESCRIPTOR = _QUBOSOLUTION,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.QuboSolution)
  ))
_sym_db.RegisterMessage(QuboSolution)
_sym_db.RegisterMessage(QuboSolution.ConfigurationEntry)

FujitsuTiming = _reflection.GeneratedProtocolMessageType('FujitsuTiming', (_message.Message,), dict(
  DESCRIPTOR = _FUJITSUTIMING,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.FujitsuTiming)
  ))
_sym_db.RegisterMessage(FujitsuTiming)

QuboSolutionList = _reflection.GeneratedProtocolMessageType('QuboSolutionList', (_message.Message,), dict(
  DESCRIPTOR = _QUBOSOLUTIONLIST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.QuboSolutionList)
  ))
_sym_db.RegisterMessage(QuboSolutionList)

QuboResponse = _reflection.GeneratedProtocolMessageType('QuboResponse', (_message.Message,), dict(
  DESCRIPTOR = _QUBORESPONSE,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.QuboResponse)
  ))
_sym_db.RegisterMessage(QuboResponse)

KnapsackRequest = _reflection.GeneratedProtocolMessageType('KnapsackRequest', (_message.Message,), dict(
  DESCRIPTOR = _KNAPSACKREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.KnapsackRequest)
  ))
_sym_db.RegisterMessage(KnapsackRequest)

KnapsackProblem = _reflection.GeneratedProtocolMessageType('KnapsackProblem', (_message.Message,), dict(
  DESCRIPTOR = _KNAPSACKPROBLEM,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.KnapsackProblem)
  ))
_sym_db.RegisterMessage(KnapsackProblem)

KnapsackItem = _reflection.GeneratedProtocolMessageType('KnapsackItem', (_message.Message,), dict(
  DESCRIPTOR = _KNAPSACKITEM,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.KnapsackItem)
  ))
_sym_db.RegisterMessage(KnapsackItem)

KnapsackResponse = _reflection.GeneratedProtocolMessageType('KnapsackResponse', (_message.Message,), dict(
  DESCRIPTOR = _KNAPSACKRESPONSE,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.KnapsackResponse)
  ))
_sym_db.RegisterMessage(KnapsackResponse)

KnapsackSolution = _reflection.GeneratedProtocolMessageType('KnapsackSolution', (_message.Message,), dict(
  DESCRIPTOR = _KNAPSACKSOLUTION,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.KnapsackSolution)
  ))
_sym_db.RegisterMessage(KnapsackSolution)

KnapsackConfiguration = _reflection.GeneratedProtocolMessageType('KnapsackConfiguration', (_message.Message,), dict(
  DESCRIPTOR = _KNAPSACKCONFIGURATION,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.KnapsackConfiguration)
  ))
_sym_db.RegisterMessage(KnapsackConfiguration)

MinKCutRequest = _reflection.GeneratedProtocolMessageType('MinKCutRequest', (_message.Message,), dict(
  DESCRIPTOR = _MINKCUTREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.MinKCutRequest)
  ))
_sym_db.RegisterMessage(MinKCutRequest)

Graph = _reflection.GeneratedProtocolMessageType('Graph', (_message.Message,), dict(
  DESCRIPTOR = _GRAPH,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.Graph)
  ))
_sym_db.RegisterMessage(Graph)

MinKCutResponse = _reflection.GeneratedProtocolMessageType('MinKCutResponse', (_message.Message,), dict(
  DESCRIPTOR = _MINKCUTRESPONSE,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.MinKCutResponse)
  ))
_sym_db.RegisterMessage(MinKCutResponse)

MinKCutSolution = _reflection.GeneratedProtocolMessageType('MinKCutSolution', (_message.Message,), dict(
  DESCRIPTOR = _MINKCUTSOLUTION,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.MinKCutSolution)
  ))
_sym_db.RegisterMessage(MinKCutSolution)

MinKCutMapping = _reflection.GeneratedProtocolMessageType('MinKCutMapping', (_message.Message,), dict(
  DESCRIPTOR = _MINKCUTMAPPING,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.MinKCutMapping)
  ))
_sym_db.RegisterMessage(MinKCutMapping)

QuboProblem = _reflection.GeneratedProtocolMessageType('QuboProblem', (_message.Message,), dict(

  variable = _reflection.GeneratedProtocolMessageType('variable', (_message.Message,), dict(
    DESCRIPTOR = _QUBOPROBLEM_VARIABLE,
    __module__ = 'qbit_pb2'
    # @@protoc_insertion_point(class_scope:qbit.services.QuboProblem.variable)
    ))
  ,

  quadratic_term = _reflection.GeneratedProtocolMessageType('quadratic_term', (_message.Message,), dict(
    DESCRIPTOR = _QUBOPROBLEM_QUADRATIC_TERM,
    __module__ = 'qbit_pb2'
    # @@protoc_insertion_point(class_scope:qbit.services.QuboProblem.quadratic_term)
    ))
  ,

  constraint = _reflection.GeneratedProtocolMessageType('constraint', (_message.Message,), dict(
    DESCRIPTOR = _QUBOPROBLEM_CONSTRAINT,
    __module__ = 'qbit_pb2'
    # @@protoc_insertion_point(class_scope:qbit.services.QuboProblem.constraint)
    ))
  ,

  problem_objective = _reflection.GeneratedProtocolMessageType('problem_objective', (_message.Message,), dict(
    DESCRIPTOR = _QUBOPROBLEM_PROBLEM_OBJECTIVE,
    __module__ = 'qbit_pb2'
    # @@protoc_insertion_point(class_scope:qbit.services.QuboProblem.problem_objective)
    ))
  ,
  DESCRIPTOR = _QUBOPROBLEM,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.QuboProblem)
  ))
_sym_db.RegisterMessage(QuboProblem)
_sym_db.RegisterMessage(QuboProblem.variable)
_sym_db.RegisterMessage(QuboProblem.quadratic_term)
_sym_db.RegisterMessage(QuboProblem.constraint)
_sym_db.RegisterMessage(QuboProblem.problem_objective)

Operation = _reflection.GeneratedProtocolMessageType('Operation', (_message.Message,), dict(
  DESCRIPTOR = _OPERATION,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.Operation)
  ))
_sym_db.RegisterMessage(Operation)

OperationDetail = _reflection.GeneratedProtocolMessageType('OperationDetail', (_message.Message,), dict(
  DESCRIPTOR = _OPERATIONDETAIL,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.OperationDetail)
  ))
_sym_db.RegisterMessage(OperationDetail)

OperationError = _reflection.GeneratedProtocolMessageType('OperationError', (_message.Message,), dict(
  DESCRIPTOR = _OPERATIONERROR,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.OperationError)
  ))
_sym_db.RegisterMessage(OperationError)

GetOperationRequest = _reflection.GeneratedProtocolMessageType('GetOperationRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETOPERATIONREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.GetOperationRequest)
  ))
_sym_db.RegisterMessage(GetOperationRequest)

GetOperationToWorkOnRequest = _reflection.GeneratedProtocolMessageType('GetOperationToWorkOnRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETOPERATIONTOWORKONREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.GetOperationToWorkOnRequest)
  ))
_sym_db.RegisterMessage(GetOperationToWorkOnRequest)

ListOperationsRequest = _reflection.GeneratedProtocolMessageType('ListOperationsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTOPERATIONSREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.ListOperationsRequest)
  ))
_sym_db.RegisterMessage(ListOperationsRequest)

ListOperationsResponse = _reflection.GeneratedProtocolMessageType('ListOperationsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTOPERATIONSRESPONSE,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.ListOperationsResponse)
  ))
_sym_db.RegisterMessage(ListOperationsResponse)

CancelOperationRequest = _reflection.GeneratedProtocolMessageType('CancelOperationRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCELOPERATIONREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.CancelOperationRequest)
  ))
_sym_db.RegisterMessage(CancelOperationRequest)

CompleteOperationRequest = _reflection.GeneratedProtocolMessageType('CompleteOperationRequest', (_message.Message,), dict(
  DESCRIPTOR = _COMPLETEOPERATIONREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.CompleteOperationRequest)
  ))
_sym_db.RegisterMessage(CompleteOperationRequest)

ErrorOperationRequest = _reflection.GeneratedProtocolMessageType('ErrorOperationRequest', (_message.Message,), dict(
  DESCRIPTOR = _ERROROPERATIONREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.ErrorOperationRequest)
  ))
_sym_db.RegisterMessage(ErrorOperationRequest)

HealthCheckRequest = _reflection.GeneratedProtocolMessageType('HealthCheckRequest', (_message.Message,), dict(
  DESCRIPTOR = _HEALTHCHECKREQUEST,
  __module__ = 'qbit_pb2'
  # @@protoc_insertion_point(class_scope:qbit.services.HealthCheckRequest)
  ))
_sym_db.RegisterMessage(HealthCheckRequest)


_QUBOSOLUTION_CONFIGURATIONENTRY.has_options = True
_QUBOSOLUTION_CONFIGURATIONENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces


  class QbitStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.CompareMolecule = channel.unary_unary(
          '/qbit.services.Qbit/CompareMolecule',
          request_serializer=CompareRequest.SerializeToString,
          response_deserializer=ComparisonResult.FromString,
          )
      self.Hobo2Qubo = channel.unary_unary(
          '/qbit.services.Qbit/Hobo2Qubo',
          request_serializer=BinaryPolynomial.SerializeToString,
          response_deserializer=BinaryPolynomial.FromString,
          )
      self.SolveQubo = channel.unary_unary(
          '/qbit.services.Qbit/SolveQubo',
          request_serializer=QuboRequest.SerializeToString,
          response_deserializer=QuboResponse.FromString,
          )
      self.Knapsack = channel.unary_unary(
          '/qbit.services.Qbit/Knapsack',
          request_serializer=KnapsackRequest.SerializeToString,
          response_deserializer=KnapsackResponse.FromString,
          )
      self.MinKCutPartitioning = channel.unary_unary(
          '/qbit.services.Qbit/MinKCutPartitioning',
          request_serializer=MinKCutRequest.SerializeToString,
          response_deserializer=MinKCutResponse.FromString,
          )
      self.ListOperations = channel.unary_unary(
          '/qbit.services.Qbit/ListOperations',
          request_serializer=ListOperationsRequest.SerializeToString,
          response_deserializer=ListOperationsResponse.FromString,
          )
      self.GetOperation = channel.unary_unary(
          '/qbit.services.Qbit/GetOperation',
          request_serializer=GetOperationRequest.SerializeToString,
          response_deserializer=Operation.FromString,
          )
      self.GetOperationDetail = channel.unary_unary(
          '/qbit.services.Qbit/GetOperationDetail',
          request_serializer=GetOperationRequest.SerializeToString,
          response_deserializer=OperationDetail.FromString,
          )
      self.GetOperationToWorkOn = channel.unary_unary(
          '/qbit.services.Qbit/GetOperationToWorkOn',
          request_serializer=GetOperationToWorkOnRequest.SerializeToString,
          response_deserializer=OperationDetail.FromString,
          )
      self.PutOperationBackToQueue = channel.unary_unary(
          '/qbit.services.Qbit/PutOperationBackToQueue',
          request_serializer=GetOperationRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.CancelOperation = channel.unary_unary(
          '/qbit.services.Qbit/CancelOperation',
          request_serializer=CancelOperationRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.CompleteOperation = channel.unary_unary(
          '/qbit.services.Qbit/CompleteOperation',
          request_serializer=CompleteOperationRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.ErrorOperation = channel.unary_unary(
          '/qbit.services.Qbit/ErrorOperation',
          request_serializer=ErrorOperationRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )
      self.HealthCheck = channel.unary_unary(
          '/qbit.services.Qbit/HealthCheck',
          request_serializer=HealthCheckRequest.SerializeToString,
          response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          )


  class QbitServicer(object):

    def CompareMolecule(self, request, context):
      """Compare molecules.

      With a specified solver, compare molecular similarities with a set of criterias.

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Hobo2Qubo(self, request, context):
      """Converts HOBO to QUBO.

      Given a Higher Order Binary Optimization (HOBO) problem, convert into
      QUBO form.

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SolveQubo(self, request, context):
      """Solves a QUBO.

      Given a QUBO and a solver with optionally set parameters, return a list
      of Solutions ordered by energy.

      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Knapsack(self, request, context):
      """Solves knapsack
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def MinKCutPartitioning(self, request, context):
      """Solves MinKCutPartitioning
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListOperations(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetOperation(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetOperationDetail(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetOperationToWorkOn(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def PutOperationBackToQueue(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CancelOperation(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CompleteOperation(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ErrorOperation(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_QbitServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CompareMolecule': grpc.unary_unary_rpc_method_handler(
            servicer.CompareMolecule,
            request_deserializer=CompareRequest.FromString,
            response_serializer=ComparisonResult.SerializeToString,
        ),
        'Hobo2Qubo': grpc.unary_unary_rpc_method_handler(
            servicer.Hobo2Qubo,
            request_deserializer=BinaryPolynomial.FromString,
            response_serializer=BinaryPolynomial.SerializeToString,
        ),
        'SolveQubo': grpc.unary_unary_rpc_method_handler(
            servicer.SolveQubo,
            request_deserializer=QuboRequest.FromString,
            response_serializer=QuboResponse.SerializeToString,
        ),
        'Knapsack': grpc.unary_unary_rpc_method_handler(
            servicer.Knapsack,
            request_deserializer=KnapsackRequest.FromString,
            response_serializer=KnapsackResponse.SerializeToString,
        ),
        'MinKCutPartitioning': grpc.unary_unary_rpc_method_handler(
            servicer.MinKCutPartitioning,
            request_deserializer=MinKCutRequest.FromString,
            response_serializer=MinKCutResponse.SerializeToString,
        ),
        'ListOperations': grpc.unary_unary_rpc_method_handler(
            servicer.ListOperations,
            request_deserializer=ListOperationsRequest.FromString,
            response_serializer=ListOperationsResponse.SerializeToString,
        ),
        'GetOperation': grpc.unary_unary_rpc_method_handler(
            servicer.GetOperation,
            request_deserializer=GetOperationRequest.FromString,
            response_serializer=Operation.SerializeToString,
        ),
        'GetOperationDetail': grpc.unary_unary_rpc_method_handler(
            servicer.GetOperationDetail,
            request_deserializer=GetOperationRequest.FromString,
            response_serializer=OperationDetail.SerializeToString,
        ),
        'GetOperationToWorkOn': grpc.unary_unary_rpc_method_handler(
            servicer.GetOperationToWorkOn,
            request_deserializer=GetOperationToWorkOnRequest.FromString,
            response_serializer=OperationDetail.SerializeToString,
        ),
        'PutOperationBackToQueue': grpc.unary_unary_rpc_method_handler(
            servicer.PutOperationBackToQueue,
            request_deserializer=GetOperationRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'CancelOperation': grpc.unary_unary_rpc_method_handler(
            servicer.CancelOperation,
            request_deserializer=CancelOperationRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'CompleteOperation': grpc.unary_unary_rpc_method_handler(
            servicer.CompleteOperation,
            request_deserializer=CompleteOperationRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'ErrorOperation': grpc.unary_unary_rpc_method_handler(
            servicer.ErrorOperation,
            request_deserializer=ErrorOperationRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
        'HealthCheck': grpc.unary_unary_rpc_method_handler(
            servicer.HealthCheck,
            request_deserializer=HealthCheckRequest.FromString,
            response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'qbit.services.Qbit', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaQbitServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def CompareMolecule(self, request, context):
      """Compare molecules.

      With a specified solver, compare molecular similarities with a set of criterias.

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Hobo2Qubo(self, request, context):
      """Converts HOBO to QUBO.

      Given a Higher Order Binary Optimization (HOBO) problem, convert into
      QUBO form.

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SolveQubo(self, request, context):
      """Solves a QUBO.

      Given a QUBO and a solver with optionally set parameters, return a list
      of Solutions ordered by energy.

      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Knapsack(self, request, context):
      """Solves knapsack
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def MinKCutPartitioning(self, request, context):
      """Solves MinKCutPartitioning
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListOperations(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetOperation(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetOperationDetail(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetOperationToWorkOn(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def PutOperationBackToQueue(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CancelOperation(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CompleteOperation(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ErrorOperation(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def HealthCheck(self, request, context):
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaQbitStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def CompareMolecule(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Compare molecules.

      With a specified solver, compare molecular similarities with a set of criterias.

      """
      raise NotImplementedError()
    CompareMolecule.future = None
    def Hobo2Qubo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Converts HOBO to QUBO.

      Given a Higher Order Binary Optimization (HOBO) problem, convert into
      QUBO form.

      """
      raise NotImplementedError()
    Hobo2Qubo.future = None
    def SolveQubo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Solves a QUBO.

      Given a QUBO and a solver with optionally set parameters, return a list
      of Solutions ordered by energy.

      """
      raise NotImplementedError()
    SolveQubo.future = None
    def Knapsack(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Solves knapsack
      """
      raise NotImplementedError()
    Knapsack.future = None
    def MinKCutPartitioning(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Solves MinKCutPartitioning
      """
      raise NotImplementedError()
    MinKCutPartitioning.future = None
    def ListOperations(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    ListOperations.future = None
    def GetOperation(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    GetOperation.future = None
    def GetOperationDetail(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    GetOperationDetail.future = None
    def GetOperationToWorkOn(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    GetOperationToWorkOn.future = None
    def PutOperationBackToQueue(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    PutOperationBackToQueue.future = None
    def CancelOperation(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    CancelOperation.future = None
    def CompleteOperation(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    CompleteOperation.future = None
    def ErrorOperation(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    ErrorOperation.future = None
    def HealthCheck(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      raise NotImplementedError()
    HealthCheck.future = None


  def beta_create_Qbit_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('qbit.services.Qbit', 'CancelOperation'): CancelOperationRequest.FromString,
      ('qbit.services.Qbit', 'CompareMolecule'): CompareRequest.FromString,
      ('qbit.services.Qbit', 'CompleteOperation'): CompleteOperationRequest.FromString,
      ('qbit.services.Qbit', 'ErrorOperation'): ErrorOperationRequest.FromString,
      ('qbit.services.Qbit', 'GetOperation'): GetOperationRequest.FromString,
      ('qbit.services.Qbit', 'GetOperationDetail'): GetOperationRequest.FromString,
      ('qbit.services.Qbit', 'GetOperationToWorkOn'): GetOperationToWorkOnRequest.FromString,
      ('qbit.services.Qbit', 'HealthCheck'): HealthCheckRequest.FromString,
      ('qbit.services.Qbit', 'Hobo2Qubo'): BinaryPolynomial.FromString,
      ('qbit.services.Qbit', 'Knapsack'): KnapsackRequest.FromString,
      ('qbit.services.Qbit', 'ListOperations'): ListOperationsRequest.FromString,
      ('qbit.services.Qbit', 'MinKCutPartitioning'): MinKCutRequest.FromString,
      ('qbit.services.Qbit', 'PutOperationBackToQueue'): GetOperationRequest.FromString,
      ('qbit.services.Qbit', 'SolveQubo'): QuboRequest.FromString,
    }
    response_serializers = {
      ('qbit.services.Qbit', 'CancelOperation'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('qbit.services.Qbit', 'CompareMolecule'): ComparisonResult.SerializeToString,
      ('qbit.services.Qbit', 'CompleteOperation'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('qbit.services.Qbit', 'ErrorOperation'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('qbit.services.Qbit', 'GetOperation'): Operation.SerializeToString,
      ('qbit.services.Qbit', 'GetOperationDetail'): OperationDetail.SerializeToString,
      ('qbit.services.Qbit', 'GetOperationToWorkOn'): OperationDetail.SerializeToString,
      ('qbit.services.Qbit', 'HealthCheck'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('qbit.services.Qbit', 'Hobo2Qubo'): BinaryPolynomial.SerializeToString,
      ('qbit.services.Qbit', 'Knapsack'): KnapsackResponse.SerializeToString,
      ('qbit.services.Qbit', 'ListOperations'): ListOperationsResponse.SerializeToString,
      ('qbit.services.Qbit', 'MinKCutPartitioning'): MinKCutResponse.SerializeToString,
      ('qbit.services.Qbit', 'PutOperationBackToQueue'): google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ('qbit.services.Qbit', 'SolveQubo'): QuboResponse.SerializeToString,
    }
    method_implementations = {
      ('qbit.services.Qbit', 'CancelOperation'): face_utilities.unary_unary_inline(servicer.CancelOperation),
      ('qbit.services.Qbit', 'CompareMolecule'): face_utilities.unary_unary_inline(servicer.CompareMolecule),
      ('qbit.services.Qbit', 'CompleteOperation'): face_utilities.unary_unary_inline(servicer.CompleteOperation),
      ('qbit.services.Qbit', 'ErrorOperation'): face_utilities.unary_unary_inline(servicer.ErrorOperation),
      ('qbit.services.Qbit', 'GetOperation'): face_utilities.unary_unary_inline(servicer.GetOperation),
      ('qbit.services.Qbit', 'GetOperationDetail'): face_utilities.unary_unary_inline(servicer.GetOperationDetail),
      ('qbit.services.Qbit', 'GetOperationToWorkOn'): face_utilities.unary_unary_inline(servicer.GetOperationToWorkOn),
      ('qbit.services.Qbit', 'HealthCheck'): face_utilities.unary_unary_inline(servicer.HealthCheck),
      ('qbit.services.Qbit', 'Hobo2Qubo'): face_utilities.unary_unary_inline(servicer.Hobo2Qubo),
      ('qbit.services.Qbit', 'Knapsack'): face_utilities.unary_unary_inline(servicer.Knapsack),
      ('qbit.services.Qbit', 'ListOperations'): face_utilities.unary_unary_inline(servicer.ListOperations),
      ('qbit.services.Qbit', 'MinKCutPartitioning'): face_utilities.unary_unary_inline(servicer.MinKCutPartitioning),
      ('qbit.services.Qbit', 'PutOperationBackToQueue'): face_utilities.unary_unary_inline(servicer.PutOperationBackToQueue),
      ('qbit.services.Qbit', 'SolveQubo'): face_utilities.unary_unary_inline(servicer.SolveQubo),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Qbit_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('qbit.services.Qbit', 'CancelOperation'): CancelOperationRequest.SerializeToString,
      ('qbit.services.Qbit', 'CompareMolecule'): CompareRequest.SerializeToString,
      ('qbit.services.Qbit', 'CompleteOperation'): CompleteOperationRequest.SerializeToString,
      ('qbit.services.Qbit', 'ErrorOperation'): ErrorOperationRequest.SerializeToString,
      ('qbit.services.Qbit', 'GetOperation'): GetOperationRequest.SerializeToString,
      ('qbit.services.Qbit', 'GetOperationDetail'): GetOperationRequest.SerializeToString,
      ('qbit.services.Qbit', 'GetOperationToWorkOn'): GetOperationToWorkOnRequest.SerializeToString,
      ('qbit.services.Qbit', 'HealthCheck'): HealthCheckRequest.SerializeToString,
      ('qbit.services.Qbit', 'Hobo2Qubo'): BinaryPolynomial.SerializeToString,
      ('qbit.services.Qbit', 'Knapsack'): KnapsackRequest.SerializeToString,
      ('qbit.services.Qbit', 'ListOperations'): ListOperationsRequest.SerializeToString,
      ('qbit.services.Qbit', 'MinKCutPartitioning'): MinKCutRequest.SerializeToString,
      ('qbit.services.Qbit', 'PutOperationBackToQueue'): GetOperationRequest.SerializeToString,
      ('qbit.services.Qbit', 'SolveQubo'): QuboRequest.SerializeToString,
    }
    response_deserializers = {
      ('qbit.services.Qbit', 'CancelOperation'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('qbit.services.Qbit', 'CompareMolecule'): ComparisonResult.FromString,
      ('qbit.services.Qbit', 'CompleteOperation'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('qbit.services.Qbit', 'ErrorOperation'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('qbit.services.Qbit', 'GetOperation'): Operation.FromString,
      ('qbit.services.Qbit', 'GetOperationDetail'): OperationDetail.FromString,
      ('qbit.services.Qbit', 'GetOperationToWorkOn'): OperationDetail.FromString,
      ('qbit.services.Qbit', 'HealthCheck'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('qbit.services.Qbit', 'Hobo2Qubo'): BinaryPolynomial.FromString,
      ('qbit.services.Qbit', 'Knapsack'): KnapsackResponse.FromString,
      ('qbit.services.Qbit', 'ListOperations'): ListOperationsResponse.FromString,
      ('qbit.services.Qbit', 'MinKCutPartitioning'): MinKCutResponse.FromString,
      ('qbit.services.Qbit', 'PutOperationBackToQueue'): google_dot_protobuf_dot_empty__pb2.Empty.FromString,
      ('qbit.services.Qbit', 'SolveQubo'): QuboResponse.FromString,
    }
    cardinalities = {
      'CancelOperation': cardinality.Cardinality.UNARY_UNARY,
      'CompareMolecule': cardinality.Cardinality.UNARY_UNARY,
      'CompleteOperation': cardinality.Cardinality.UNARY_UNARY,
      'ErrorOperation': cardinality.Cardinality.UNARY_UNARY,
      'GetOperation': cardinality.Cardinality.UNARY_UNARY,
      'GetOperationDetail': cardinality.Cardinality.UNARY_UNARY,
      'GetOperationToWorkOn': cardinality.Cardinality.UNARY_UNARY,
      'HealthCheck': cardinality.Cardinality.UNARY_UNARY,
      'Hobo2Qubo': cardinality.Cardinality.UNARY_UNARY,
      'Knapsack': cardinality.Cardinality.UNARY_UNARY,
      'ListOperations': cardinality.Cardinality.UNARY_UNARY,
      'MinKCutPartitioning': cardinality.Cardinality.UNARY_UNARY,
      'PutOperationBackToQueue': cardinality.Cardinality.UNARY_UNARY,
      'SolveQubo': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'qbit.services.Qbit', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
