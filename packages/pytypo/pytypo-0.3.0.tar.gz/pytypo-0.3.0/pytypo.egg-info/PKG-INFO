Metadata-Version: 1.1
Name: pytypo
Version: 0.3.0
Summary: corrects English spelling mistakes and normalize. (e.g., "cooooooooooooooollllllllllllll" to "cool")
Home-page: https://github.com/ikegami-yukino/pytypo
Author: Yukino Ikegami
Author-email: yknikgm@gmail.com
License: MIT License
Description-Content-Type: UNKNOWN
Description: pytypo
        ===========
        |travis| |coveralls| |landscape| |pyversion| |version| |license|
        
        pytypo corrects English spelling mistakes.
        That feature is based on TYPO CORPUS (http://luululu.com/tweet/)
        and Wikipedia (https://en.wikipedia.org/wiki/Wikipedia:Lists_of_common_misspellings/For_machines)
        
        And this module normalizes also lengthened English expression having repeating letters.
        (e.g., this module converts "cooooooooooooooollllllllllllll" to "cool")
        
        That feature is based on the following paper:
        Samuel Brody and Nicholas Diakopoulos.
        Cooooooooooooooollllllllllllll!!!!!!!!!!!!!! using word lengthening to detect sentiment in microblogs.
        In EMNLP2011, pp. 562-570, 2011.
        http://aclweb.org/anthology//D/D11/D11-1052.pdf
        
        
        Contributions are welcome!
        
        
        Installation
        ============
        
        ::
        
         $ pip install pytypo
        
        
        Usage
        =====
        
        Import pytypo
        --------------------------------------------
        
        ::
        
         >>> import pytypo
        
        
        correct sentence
        --------------------------------------------
        
        ::
        
         >>> pytypo.correct_sentence('you are coooolll!!!')
         you are cool!
        
        
        - correct_sentence(str)
        
        
        correct word
        --------------------------------------------
        
        ::
        
         >>> pytypo.correct('okayyyyy')
         okay
        
        
        - correct(str)
        
        
        Shorten repeated substring until threshould without dictionary
        -------------------------------------------------------------------
        
        ::
        
         >>> pytypo.cut_repeat('mamisaaaaaan', 1)
         mamisan
         >>> pytypo.cut_repeat('okayyyyy', 2)
         okayy
        
        
        - cut_repeat(str, threshould)
        
          * Note that this method don't use a lengthened expression normalize table (e.g., cooll -> cool).
            If you want to normalize such expression, use `correct()` or `correct_sentence()` method.
        
        License
        =========
        
        - This module is licensed under MIT License.
        
        .. |travis| image:: https://travis-ci.org/ikegami-yukino/pytypo.svg?branch=master
            :target: https://travis-ci.org/ikegami-yukino/pytypo
            :alt: travis-ci.org
        
        .. |coveralls| image:: https://coveralls.io/repos/ikegami-yukino/pytypo/badge.svg?branch=master&service=github
            :target: https://coveralls.io/github/ikegami-yukino/pytypo?branch=master
            :alt: coveralls.io
        
        .. |landscape| image:: https://landscape.io/github/ikegami-yukino/pytypo/master/landscape.svg?style=flat
           :target: https://landscape.io/github/ikegami-yukino/pytypo/master
           :alt: Code Health
        
        .. |pyversion| image:: https://img.shields.io/pypi/pyversions/pytypo.svg
        
        .. |version| image:: https://img.shields.io/pypi/v/pytypo.svg
            :target: http://pypi.python.org/pypi/pytypo/
            :alt: latest version
        
        .. |license| image:: https://img.shields.io/pypi/l/pytypo.svg
            :target: http://pypi.python.org/pypi/pytypo/
            :alt: license
        
        
        
        CHANGES
        ==========
        
        0.3 (2017-10-18)
        ---------------------
        
        Add many cases from Wikipedia
        
        
        0.2 (2016-04-15)
        ---------------------
        
        Add many cases
        
        0.1 (2016-04-14)
        ---------------------
        
        First release.
        
        
Keywords: normalize,lengthened expression,English,typo,spelling
Platform: POSIX
Platform: Windows
Platform: Unix
Platform: MacOS
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development
Classifier: Topic :: Text Processing
Classifier: Natural Language :: English
