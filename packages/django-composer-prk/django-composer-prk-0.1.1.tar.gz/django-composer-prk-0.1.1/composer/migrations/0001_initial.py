# -*- coding: utf-8 -*-
# Generated by Django 1.9.11 on 2016-11-15 14:51
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0)),
                ('width', models.PositiveIntegerField(default=8, validators=[django.core.validators.MaxValueValidator(12), django.core.validators.MinValueValidator(1)])),
                ('title', models.CharField(blank=True, help_text=b'The title is rendered at the top of a column.', max_length=256, null=True)),
                ('class_name', models.CharField(blank=True, help_text=b'One or more CSS classes that are applied to the column.', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Row',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0)),
                ('class_name', models.CharField(blank=True, help_text=b'One or more CSS classes that are applied to the row.', max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(db_index=True, default=b'/', help_text="Where on the site this slot will appear. Start and end with a slash. Example: '/about-us/people/'", max_length=100, verbose_name='URL')),
                ('slot_name', models.CharField(choices=[(b'header', 'Header'), (b'content', 'Content'), (b'footer', 'Footer')], default=b'content', help_text=b'Which base template slot should this be rendered in?', max_length=32)),
                ('title', models.CharField(help_text=b'A title that may appear in the browser window caption.', max_length=200)),
                ('description', models.TextField(blank=True, help_text='A short description. More verbose than the title but limited to one or two sentences.', null=True)),
                ('sites', models.ManyToManyField(blank=True, help_text=b'Sites that this slot will appear on.', to='sites.Site')),
            ],
        ),
        migrations.CreateModel(
            name='Tile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=0)),
                ('target_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('view_name', models.CharField(blank=True, help_text=b'A view to be rendered in this tile. This view is typically a snippet of a larger page. If you are unsure test and see if it works - you cannot break anything.', max_length=200, null=True)),
                ('style', models.CharField(blank=True, help_text=b'Display style. This corresponds to a listing or object style template.', max_length=200, null=True)),
                ('class_name', models.CharField(blank=True, help_text=b'One or more CSS classes that are applied to the tile.', max_length=200, null=True)),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='composer.Column')),
                ('target_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tile_target_content_type', to='contenttypes.ContentType')),
            ],
        ),
        migrations.AddField(
            model_name='row',
            name='slot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='composer.Slot'),
        ),
        migrations.AddField(
            model_name='column',
            name='row',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='composer.Row'),
        ),
    ]
