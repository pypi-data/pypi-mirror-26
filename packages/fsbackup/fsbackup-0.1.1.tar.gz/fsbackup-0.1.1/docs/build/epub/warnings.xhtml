<!DOCTYPE html>


<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    
    <title>Please, be aware!</title>
    
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head>
  <body role="document">

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="please-be-aware">
<h1>Please, <strong>be aware</strong>!</h1>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p class="last">To be able to use mongoDB, we must have a connection to a mongoDB server. It could be our own machine, a hosting service, etc.</p>
</div>
<p>If you are new to mongoDB, several tutorials are available, <a class="reference external" href="https://www.hongkiat.com/blog/webdev-with-mongodb-part1/">this</a><span class="link-target"> [https://www.hongkiat.com/blog/webdev-with-mongodb-part1/]</span> is one of them. There are also many mongoDB-hosting services that provide free sandboxes with a decent size, no need to spend a dime just to experiment.</p>
<p>If you have mongoDB installed, to serve it locally (in Windows) just run:</p>
<div class="code bash highlight-default"><div class="highlight"><pre><span></span><span class="n">mongod</span><span class="o">.</span><span class="n">exe</span> <span class="o">--</span><span class="n">dbpath</span><span class="o">=&lt;</span><span class="n">database_path</span><span class="o">&gt;</span>
</pre></div>
</div>
<div class="section" id="regarding-tests">
<h2>Regarding tests</h2>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p class="last">To be able to run tests, we need a mongoDB server to connect to (I know of no better way. If there is, please let me know). The tests are written assuming that a local server is running.</p>
</div>
<p>Then, a client is created that connects to it, creates testing databases/collections, fills them, accesses information stored, and wipes them all in the end.</p>
</div>
<div class="section" id="information-safety">
<h2>Information safety</h2>
<p>The mongoDBs created are essential to be able to recover contents from the backup.</p>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p class="last">If they were lost, in the volumes you won&#8217;t see proper filenames or extensions. Therefore although the content is indeed there, finding what you need would be, at the very least, awefully painful, if not utterly infeasable.</p>
</div>
<p>For that reason it is reasonable to make sure the mongoDB databases are safe,
and backed-up as frequently and redundantly as possible. I am using mongoDB hosting, and keep a local copy as well. Even periodically storing a copy with its
timestamp might be interesting, if you want to play it safe.</p>
</div>
<div class="section" id="license">
<h2>License</h2>
<p>This software is released under MIT license, with no warranty implied or otherwise. That said, on the sunny side a unittest is included that performs the complete backup cycle and
makes sure that the checkout is identical to the original filesystem. And <code class="docutils literal"><span class="pre">integrityCheck</span></code> command is available, which actually compares each backed-up file with its
counterpart in the filesystem.</p>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>