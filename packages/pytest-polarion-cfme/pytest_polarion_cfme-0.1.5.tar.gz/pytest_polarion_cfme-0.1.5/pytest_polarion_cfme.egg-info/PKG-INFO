Metadata-Version: 1.1
Name: pytest-polarion-cfme
Version: 0.1.5
Summary: pytest plugin for collecting test cases and recording test results
Home-page: https://github.com/mkoura/pytest-polarion-cfme
Author: Martin Kourim
Author-email: mkourim@redhat.com
License: GPL
Description-Content-Type: UNKNOWN
Description: ====================
        pytest-polarion-cfme
        ====================
        
        NOTE: pytest-polarion-cfme is no longer using pylarion as pylarion is being
        deprecated. As a consequence command line options changed too.
        
        pytest-polarion-cfme is a pytest plugin for collecting test cases and recording
        test results to database.
        
        From set of test cases specified on command line the plugin selects such test
        cases that are present in the database and have no reportable result yet.
        
        After executing a test case the plugin records its result in the database. By
        default results for passed and blocked (test cases with blocker or 'skipif')
        test cases are recorded.
        
        It is tailored for the CFME QE team.
        
        
        Usage
        -----
        Generate sqlite3 file out of the CSV file exported from Polarion®. Use the
        ``csv2sqlite.py`` from dump2polarion_ for this.
        
        From test cases available to pytest (you can limit these using standard pytest
        features like ``-k`` or specifying file/directory path) select and run those
        that are present in the database and have no reportable result. Record results
        for test cases that passed or that are blocked::
        
            $ py.test --db <db_file.sqlite3>
        
        To exclude tests that were already executed but haven't passed, add
        ``--skip-executed`` command line option (i.e. failing/skipped tests are not
        re-run and it saves time)::
        
            $ py.test --db <db_file.sqlite3> --skip-executed
        
        Submit results to Polarion® xunit importer using ``polarion_dumper.py`` from dump2polarion_.
        
        .. _dump2polarion: https://github.com/mkoura/dump2polarion
        
        
        Install
        -------
        For CFME QE specific instructions see https://mojo.redhat.com/docs/DOC-1098563
        (accessible only from internal network).
        
        Install this plugin::
        
            $ pip install pytest-polarion-cfme
Keywords: polarion,py.test,pytest,testing
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Framework :: Pytest
Classifier: Topic :: Software Development :: Testing
Classifier: License :: OSI Approved :: GNU General Public License v2 (GPLv2)
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Intended Audience :: Developers
