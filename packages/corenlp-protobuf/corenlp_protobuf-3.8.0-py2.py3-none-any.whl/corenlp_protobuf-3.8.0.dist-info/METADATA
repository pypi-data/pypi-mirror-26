Metadata-Version: 2.0
Name: corenlp-protobuf
Version: 3.8.0
Summary: Python bindings for Stanford CoreNLP protobufs
Home-page: https://github.com/stanfordnlp/python-corenlp-protobuf
Author: Stanford NLP Group
Author-email: chaganty@cs.stanford.edu
License: MIT
Description-Content-Type: UNKNOWN
Keywords: protobuf corenlp natural-language-processing nlp
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Object Brokering
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Requires-Dist: protobuf
Provides-Extra: dev
Requires-Dist: check-manifest; extra == 'dev'
Provides-Extra: test
Requires-Dist: coverage; extra == 'test'

Stanford CoreNLP Python Bindings
================================

.. image:: https://travis-ci.org/stanfordnlp/python-corenlp-protobuf.svg?branch=master
    :target: https://travis-ci.org/stanfordnlp/python-corenlp-protobuf

This package contains python bindings for `Stanford
CoreNLP <https://github.com/stanfordnlp/CoreNLP>`_'s protobuf
specifications, as generated by `protoc`. These bindings can used to
parse binary data produced by, e.g., the `Stanford CoreNLP
server <https://stanfordnlp.github.io/CoreNLP/corenlp-server.html>`_.

----

Usage:

.. code-block:: python

  from corenlp_protobuf import Document, parseFromDelimitedString

  # document.dat contains a serialized Document.
  with open('document.dat', 'r') as f:
    buf = f.read()
  doc = Document()
  parseFromDelimitedString(doc, buf)

  # You can access the sentences from doc.sentence.
  sentence = doc.sentence[0]

  # You can access any property within a sentence.
  print(sentence.text)

  # Likewise for tokens
  token = sentence.token[0]
  print(token.lemma)

See `test_read.py` for more examples.


