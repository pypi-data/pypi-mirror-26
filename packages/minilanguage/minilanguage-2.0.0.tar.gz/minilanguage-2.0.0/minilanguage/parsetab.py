
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftCOMMADOTleft+-left*/HEX FLOAT NUMBER LBRACKET RBRACKET LPAREN RPAREN EQUALS NOT_EQUALS GT LT GTE LTE COMMENT STRING ID TRUE FALSE DOT COMMA AND OR NOT IN IF THEN ELSEexpression : expression COMMENTexpression : expression '+' termexpression : expression '-' termexpression : expression AND termexpression : expression OR termexpression : expression EQUALS termexpression : expression NOT_EQUALS termexpression : expression GT termexpression : expression LT termexpression : expression GTE termexpression : expression LTE termexpression : expression IN termexpression : IF expression THEN term ELSE termexpression : expression IF expression ELSE termexpression : expression '*' termexpression : expression '/' termexpression : termtuple : term COMMA termterm : tupleterm : factorterm : NOT factorfactor : factor DOT ID LPAREN tuple RPARENfactor : factor DOT ID LPAREN factor RPARENfactor : factor LBRACKET factor RBRACKETfactor : factor DOT factorfactor : LPAREN expression RPARENfactor : HEXfactor : FLOATfactor : NUMBERfactor : IDfactor : STRINGfactor : TRUEfactor : FALSE"
    
_lr_action_items = {'IF':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,27,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[3,27,-17,3,-19,-20,-30,3,-27,-28,-29,-31,-32,-33,-1,3,27,-21,27,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,27,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'NOT':([0,3,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,51,56,58,61,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'LPAREN':([0,3,6,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,51,53,56,58,61,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,58,8,8,8,]),'HEX':([0,3,6,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,51,56,58,61,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'FLOAT':([0,3,6,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,51,56,58,61,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'NUMBER':([0,3,6,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,51,56,58,61,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'ID':([0,3,6,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,51,56,58,61,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,53,7,7,7,7,7,]),'STRING':([0,3,6,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,51,56,58,61,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'TRUE':([0,3,6,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,51,56,58,61,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'FALSE':([0,3,6,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,51,56,58,61,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'$end':([1,2,4,5,7,9,10,11,12,13,14,15,34,36,37,38,39,40,41,42,43,44,45,46,48,49,50,52,53,55,59,60,65,66,67,],[0,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,-21,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'COMMENT':([1,2,4,5,7,9,10,11,12,13,14,15,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[15,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,15,-21,15,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,15,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'+':([1,2,4,5,7,9,10,11,12,13,14,15,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[16,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,16,-21,16,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,16,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'-':([1,2,4,5,7,9,10,11,12,13,14,15,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[17,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,17,-21,17,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,17,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'AND':([1,2,4,5,7,9,10,11,12,13,14,15,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[18,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,18,-21,18,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,18,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'OR':([1,2,4,5,7,9,10,11,12,13,14,15,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[19,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,19,-21,19,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,19,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'EQUALS':([1,2,4,5,7,9,10,11,12,13,14,15,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[20,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,20,-21,20,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,20,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'NOT_EQUALS':([1,2,4,5,7,9,10,11,12,13,14,15,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[21,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,21,-21,21,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,21,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'GT':([1,2,4,5,7,9,10,11,12,13,14,15,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[22,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,22,-21,22,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,22,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'LT':([1,2,4,5,7,9,10,11,12,13,14,15,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[23,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,23,-21,23,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,23,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'GTE':([1,2,4,5,7,9,10,11,12,13,14,15,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[24,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,24,-21,24,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,24,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'LTE':([1,2,4,5,7,9,10,11,12,13,14,15,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[25,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,25,-21,25,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,25,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'IN':([1,2,4,5,7,9,10,11,12,13,14,15,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[26,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,26,-21,26,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,26,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'*':([1,2,4,5,7,9,10,11,12,13,14,15,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[28,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,28,-21,28,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,28,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'/':([1,2,4,5,7,9,10,11,12,13,14,15,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,59,60,65,66,67,],[29,-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,29,-21,29,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,29,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'THEN':([2,4,5,7,9,10,11,12,13,14,15,31,34,36,37,38,39,40,41,42,43,44,45,46,48,49,50,52,53,55,59,60,65,66,67,],[-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,51,-21,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-18,-25,-30,-26,-24,-14,-13,-23,-22,]),'RPAREN':([2,4,5,7,9,10,11,12,13,14,15,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,52,53,55,59,60,62,63,65,66,67,],[-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,-21,55,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-15,-16,-18,-25,-30,-26,-24,-14,66,67,-13,-23,-22,]),'ELSE':([2,4,5,7,9,10,11,12,13,14,15,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,55,57,59,60,65,66,67,],[-17,-19,-20,-30,-27,-28,-29,-31,-32,-33,-1,-21,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,56,-15,-16,-18,-25,-30,-26,61,-24,-14,-13,-23,-22,]),'COMMA':([2,4,5,7,9,10,11,12,13,14,34,36,37,38,39,40,41,42,43,44,45,46,48,49,50,52,53,55,57,59,60,62,63,64,65,66,67,],[30,-19,-20,-30,-27,-28,-29,-31,-32,-33,-21,30,30,30,30,30,30,30,30,30,30,30,30,30,-18,-25,-30,-26,30,-24,30,-20,-19,30,30,-23,-22,]),'DOT':([5,7,9,10,11,12,13,14,34,52,53,54,55,59,62,66,67,],[32,-30,-27,-28,-29,-31,-32,-33,32,-25,-30,32,-26,-24,32,-23,-22,]),'LBRACKET':([5,7,9,10,11,12,13,14,34,52,53,54,55,59,62,66,67,],[33,-30,-27,-28,-29,-31,-32,-33,33,-25,-30,33,-26,-24,33,-23,-22,]),'RBRACKET':([7,9,10,11,12,13,14,52,53,54,55,59,66,67,],[-30,-27,-28,-29,-31,-32,-33,-25,-30,59,-26,-24,-23,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,3,8,27,],[1,31,35,47,]),'term':([0,3,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,51,56,58,61,],[2,2,2,36,37,38,39,40,41,42,43,44,45,46,2,48,49,50,57,60,64,65,]),'tuple':([0,3,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,51,56,58,61,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,63,4,]),'factor':([0,3,6,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,51,56,58,61,],[5,5,34,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,52,54,5,5,62,5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression COMMENT','expression',2,'p_expression_comment','grammar.py',22),
  ('expression -> expression + term','expression',3,'p_expression_plus','grammar.py',26),
  ('expression -> expression - term','expression',3,'p_expression_minus','grammar.py',30),
  ('expression -> expression AND term','expression',3,'p_expression_and','grammar.py',34),
  ('expression -> expression OR term','expression',3,'p_expression_or','grammar.py',38),
  ('expression -> expression EQUALS term','expression',3,'p_expression_equals','grammar.py',42),
  ('expression -> expression NOT_EQUALS term','expression',3,'p_expression_not_equals','grammar.py',46),
  ('expression -> expression GT term','expression',3,'p_expression_gt','grammar.py',50),
  ('expression -> expression LT term','expression',3,'p_expression_lt','grammar.py',54),
  ('expression -> expression GTE term','expression',3,'p_expression_gte','grammar.py',58),
  ('expression -> expression LTE term','expression',3,'p_expression_lte','grammar.py',62),
  ('expression -> expression IN term','expression',3,'p_expression_in','grammar.py',66),
  ('expression -> IF expression THEN term ELSE term','expression',6,'p_expression_if_then_else','grammar.py',70),
  ('expression -> expression IF expression ELSE term','expression',5,'p_expression_if_else','grammar.py',74),
  ('expression -> expression * term','expression',3,'p_expression_times','grammar.py',78),
  ('expression -> expression / term','expression',3,'p_expression_div','grammar.py',82),
  ('expression -> term','expression',1,'p_expression_term','grammar.py',86),
  ('tuple -> term COMMA term','tuple',3,'p_tuple','grammar.py',90),
  ('term -> tuple','term',1,'p_term_tuple','grammar.py',94),
  ('term -> factor','term',1,'p_term_factor','grammar.py',98),
  ('term -> NOT factor','term',2,'p_term_not','grammar.py',102),
  ('factor -> factor DOT ID LPAREN tuple RPAREN','factor',6,'p_factor_method_args','grammar.py',106),
  ('factor -> factor DOT ID LPAREN factor RPAREN','factor',6,'p_factor_method','grammar.py',114),
  ('factor -> factor LBRACKET factor RBRACKET','factor',4,'p_factor_brackets','grammar.py',122),
  ('factor -> factor DOT factor','factor',3,'p_factor_dot','grammar.py',129),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','grammar.py',136),
  ('factor -> HEX','factor',1,'p_factor_hex','grammar.py',140),
  ('factor -> FLOAT','factor',1,'p_factor_float','grammar.py',144),
  ('factor -> NUMBER','factor',1,'p_factor_num','grammar.py',148),
  ('factor -> ID','factor',1,'p_factor_id','grammar.py',152),
  ('factor -> STRING','factor',1,'p_factor_string','grammar.py',156),
  ('factor -> TRUE','factor',1,'p_factor_true','grammar.py',160),
  ('factor -> FALSE','factor',1,'p_factor_false','grammar.py',164),
]
