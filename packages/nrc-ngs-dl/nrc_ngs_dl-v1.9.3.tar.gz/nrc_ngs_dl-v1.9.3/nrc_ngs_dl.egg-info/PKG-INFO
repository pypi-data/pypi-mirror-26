Metadata-Version: 1.0
Name: nrc-ngs-dl
Version: v1.9.3
Summary: software for downloading and handling sequence data from NRC-LIMS website
Home-page: UNKNOWN
Author: Chunfang Zheng
Author-email: chunfang.zheng@canada.ca
License: The MIT License (MIT)

Copyright (c) 2017 Government of Canada

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Description: <<<<<<< HEAD
        ========================
        ****NRC-LIMS-dataDownloader
        ========================
        
        
        Description
        -----------
        
        NRC-LIMS-Datadownloader is a software written in Python. This software explores the NRC-LIMS website, downloads all the sequence files, and keeps the meta data of all the sequences in a sqlite database.
        
        The list of the tasks performed by the software:
        1. Scrapes the NRC-LIMS website to get a list of all the completed sequence runs and all information related to sequence runs and sequence files.
        2. Obtains new runs that were not been previously downloaded or re-processed/modified runs by checking each sequence run against the database.
        3. Download each new/re-processed run's data and subsequently unzips the file to obtain demultiplexed fastq files
        4. Renames each fastq file to the submitted sample name from the sequencing run information page.
        5. Generates a SHA256 code for each fastq file and gzips the file
        6. Inserts information about newly downlaoded runs and files into database
        
        
        Requirements
        ------------
        
        *Python 2.7
        *VirtualEnv
        *GNU Make
        
        
        Deployment Procedures
        ---------------------
        
        *Create and start the virtual enviroment 
         > cd path/to/your/folder
         > virtualenv -p /path/to/python2.7 venv
         > source venv/bin/activate
        
        *Install the program and all the dependencies
         > pip install nrc_ngs_dl 
         
        *Copy the sample configuration file _config.ini.sample_ to _config.ini_ and provide the required settings
         > cp venv/bin/config.ini.sample config.ini
         > vim config.ini
         
        *Run the program
         > cd path/to/your/folder
         > source venv/bin/activate
         > lims_downloader -c config.ini
        
        
        Set up the HCRON service
        ------------------------
        
        *Get the permission to access hcron1.science.gc.ca
        HPC Dorval - Supercomputing - DC000131
        Please register my account   chz001   to use hcron on:
        hcron1.science.gc.ca
        
        
        *Setup Passwordless Login
         zhengc@onottra670241V:~$ ssh gpsc-in-gccloud.science.gc.ca date
         Fri Sep  8 18:01:17 GMT 2017
        
        
        •Create the home for your hcron events:
        $ mkdir -p  ~/.hcron/hcron1.science.gc.ca/events
        
        
        •Create a hcron event downloader :
        $ cd ~/.hcron/hcron1.science.gc.ca/events
        $ hcron-event downloader
        
        
        •Configure the event file to run the program nightly:
            as_user=
            host=142.135.29.204
            command=bash -l -c /space/project/grdi/eco/groups/mbb/chz001/dataDownloader/hcron_command.sh
            notify_email=chunfang.zheng@canada.ca
            notify_message=start the program 
            when_month=*
            when_day=*
            when_hour=20
            when_minute=0
            when_dow=*
            template_name=
        
        •Command file(hcron_command.sh)
        #!/bin/bash
        
        cd /space/project/grdi/eco/groups/mbb/chz001/dataDownloader
        source venv/bin/activate
        lims_downloader -c config.ini
        
        •Getting Your Environment Right
         "The brute force way is to run a shell as a login shell, which will provide an environment almost equivalent to an interactive session" 
        https://expl.info/display/HCRON/Getting+Your+Environment+Right
        command=bash -l -c "<commands here>" 
        
        
        from my test, the trick works for host=142.135.29.204, but not for host=gpsc-in.science.gc.ca
        
        •Connect to hcron server
        bash-4.1$ ssh hcron1.science.gc.ca
        
        
        •Load your hcron events
        chz001@hcron1: hcron-reload
        
        
        
        
        
        Deployment Clean up
        --------------------
        
        
        
        Testing
        -------
        
        
        
        SQLite database
        ----------------
        
        Three tables are maintained in this database. Tables will be updated when the program is run.
        
        1.data_packages: to keep all the information about each sequence run
         (run-name,....)
        2.data_files: to keep all the information about each sequence file, 
        include information scrapped from webpage, checksum(SHA256), original name and new name of the file, etc. 
        3.program_action: to keep all the information of every time the application is run,
          like failures, successes, urls scraped/attempted, timestamps, sequence runs downloaded. 
        
        
        
        
        =======
        >>>>>>> dev
        
Platform: UNKNOWN
