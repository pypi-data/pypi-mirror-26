
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'DOC_DIRECTIVE OPEN_PROPERTY_LIST CLOSE_PROPERTY_LIST EQUALS COMMA CHUNK_REFERENCE CODE_DIRECTIVE CODE_END_DIRECTIVE NEWLINE AT_DIRECTIVE TEXTweb : webtl web\n               | emptywebtl : codedefn\n                 | docdefn\n                 | doclinesempty :doclines : TEXT\n                    | NEWLINE\n                    | AT_DIRECTIVE\n                    | COMMA\n                    | OPEN_PROPERTY_LIST\n                    | CLOSE_PROPERTY_LIST\n                    | EQUALSdocdefn : DOC_DIRECTIVE TEXT optionalpropertylist NEWLINE doclinescodedefn : CODE_DIRECTIVE TEXT optionalpropertylist NEWLINE codelines CODE_END_DIRECTIVE\n                    codelines : codeline codelines\n                     | emptycodeline : TEXT \n                    | NEWLINE\n                    | AT_DIRECTIVE\n                    | OPEN_PROPERTY_LIST\n                    | CLOSE_PROPERTY_LIST\n                    | COMMA\n                    | EQUALS\n                    | chunkrefchunkref : CHUNK_REFERENCEoptionalpropertylist : propertylist \n                                | emptypropertylist : OPEN_PROPERTY_LIST propertysequence CLOSE_PROPERTY_LISTpropertysequence : empty \n                            | propertysequence1propertysequence1 : property \n                             | propertysequence1 COMMA propertyproperty : TEXT EQUALS TEXT'
    
_lr_action_items = {'EQUALS':([0,1,2,3,4,6,7,8,10,11,13,15,24,29,30,31,32,33,34,35,36,37,38,41,42,46,48,],[1,-13,-3,1,-8,-7,-5,-4,-12,-9,-10,-11,31,45,1,-24,-26,-21,-20,-25,-19,-18,31,-22,-23,-14,-15,]),'CHUNK_REFERENCE':([24,31,32,33,34,35,36,37,38,41,42,],[32,-24,-26,-21,-20,-25,-19,-18,32,-22,-23,]),'OPEN_PROPERTY_LIST':([0,1,2,3,4,6,7,8,10,11,13,15,17,18,24,30,31,32,33,34,35,36,37,38,41,42,46,48,],[15,-13,-3,15,-8,-7,-5,-4,-12,-9,-10,-11,21,21,33,15,-24,-26,-21,-20,-25,-19,-18,33,-22,-23,-14,-15,]),'AT_DIRECTIVE':([0,1,2,3,4,6,7,8,10,11,13,15,24,30,31,32,33,34,35,36,37,38,41,42,46,48,],[11,-13,-3,11,-8,-7,-5,-4,-12,-9,-10,-11,34,11,-24,-26,-21,-20,-25,-19,-18,34,-22,-23,-14,-15,]),'$end':([0,1,2,3,4,6,7,8,9,10,11,13,14,15,16,46,48,],[-6,-13,-3,-6,-8,-7,-5,-4,-2,-12,-9,-10,0,-11,-1,-14,-15,]),'NEWLINE':([0,1,2,3,4,6,7,8,10,11,13,15,17,18,19,20,22,23,24,30,31,32,33,34,35,36,37,38,41,42,44,46,48,],[4,-13,-3,4,-8,-7,-5,-4,-12,-9,-10,-11,-6,-6,24,-28,-27,30,36,4,-24,-26,-21,-20,-25,-19,-18,36,-22,-23,-29,-14,-15,]),'CODE_DIRECTIVE':([0,1,2,3,4,6,7,8,10,11,13,15,46,48,],[5,-13,-3,5,-8,-7,-5,-4,-12,-9,-10,-11,-14,-15,]),'COMMA':([0,1,2,3,4,6,7,8,10,11,13,15,24,25,27,30,31,32,33,34,35,36,37,38,41,42,46,48,49,50,],[13,-13,-3,13,-8,-7,-5,-4,-12,-9,-10,-11,42,-32,43,13,-24,-26,-21,-20,-25,-19,-18,42,-22,-23,-14,-15,-33,-34,]),'TEXT':([0,1,2,3,4,5,6,7,8,10,11,12,13,15,21,24,30,31,32,33,34,35,36,37,38,41,42,43,45,46,48,],[6,-13,-3,6,-8,17,-7,-5,-4,-12,-9,18,-10,-11,29,37,6,-24,-26,-21,-20,-25,-19,-18,37,-22,-23,29,50,-14,-15,]),'CODE_END_DIRECTIVE':([24,31,32,33,34,35,36,37,38,39,40,41,42,47,],[-6,-24,-26,-21,-20,-25,-19,-18,-6,48,-17,-22,-23,-16,]),'CLOSE_PROPERTY_LIST':([0,1,2,3,4,6,7,8,10,11,13,15,21,24,25,26,27,28,30,31,32,33,34,35,36,37,38,41,42,46,48,49,50,],[10,-13,-3,10,-8,-7,-5,-4,-12,-9,-10,-11,-6,41,-32,-30,-31,44,10,-24,-26,-21,-20,-25,-19,-18,41,-22,-23,-14,-15,-33,-34,]),'DOC_DIRECTIVE':([0,1,2,3,4,6,7,8,10,11,13,15,46,48,],[12,-13,-3,12,-8,-7,-5,-4,-12,-9,-10,-11,-14,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'codedefn':([0,3,],[2,2,]),'webtl':([0,3,],[3,3,]),'chunkref':([24,38,],[35,35,]),'propertylist':([17,18,],[22,22,]),'doclines':([0,3,30,],[7,7,46,]),'codeline':([24,38,],[38,38,]),'property':([21,43,],[25,49,]),'optionalpropertylist':([17,18,],[19,23,]),'codelines':([24,38,],[39,47,]),'docdefn':([0,3,],[8,8,]),'empty':([0,3,17,18,21,24,38,],[9,9,20,20,26,40,40,]),'propertysequence1':([21,],[27,]),'propertysequence':([21,],[28,]),'web':([0,3,],[14,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> web","S'",1,None,None,None),
  ('web -> webtl web','web',2,'p_web','parser.py',87),
  ('web -> empty','web',1,'p_web','parser.py',88),
  ('webtl -> codedefn','webtl',1,'p_webtl','parser.py',95),
  ('webtl -> docdefn','webtl',1,'p_webtl','parser.py',96),
  ('webtl -> doclines','webtl',1,'p_webtl','parser.py',97),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',101),
  ('doclines -> TEXT','doclines',1,'p_doclines','parser.py',105),
  ('doclines -> NEWLINE','doclines',1,'p_doclines','parser.py',106),
  ('doclines -> AT_DIRECTIVE','doclines',1,'p_doclines','parser.py',107),
  ('doclines -> COMMA','doclines',1,'p_doclines','parser.py',108),
  ('doclines -> OPEN_PROPERTY_LIST','doclines',1,'p_doclines','parser.py',109),
  ('doclines -> CLOSE_PROPERTY_LIST','doclines',1,'p_doclines','parser.py',110),
  ('doclines -> EQUALS','doclines',1,'p_doclines','parser.py',111),
  ('docdefn -> DOC_DIRECTIVE TEXT optionalpropertylist NEWLINE doclines','docdefn',5,'p_docdefn','parser.py',120),
  ('codedefn -> CODE_DIRECTIVE TEXT optionalpropertylist NEWLINE codelines CODE_END_DIRECTIVE','codedefn',6,'p_codedefn','parser.py',129),
  ('codelines -> codeline codelines','codelines',2,'p_codelines','parser.py',139),
  ('codelines -> empty','codelines',1,'p_codelines','parser.py',140),
  ('codeline -> TEXT','codeline',1,'p_codeline','parser.py',147),
  ('codeline -> NEWLINE','codeline',1,'p_codeline','parser.py',148),
  ('codeline -> AT_DIRECTIVE','codeline',1,'p_codeline','parser.py',149),
  ('codeline -> OPEN_PROPERTY_LIST','codeline',1,'p_codeline','parser.py',150),
  ('codeline -> CLOSE_PROPERTY_LIST','codeline',1,'p_codeline','parser.py',151),
  ('codeline -> COMMA','codeline',1,'p_codeline','parser.py',152),
  ('codeline -> EQUALS','codeline',1,'p_codeline','parser.py',153),
  ('codeline -> chunkref','codeline',1,'p_codeline','parser.py',154),
  ('chunkref -> CHUNK_REFERENCE','chunkref',1,'p_chunkref','parser.py',163),
  ('optionalpropertylist -> propertylist','optionalpropertylist',1,'p_optionalpropertylist','parser.py',167),
  ('optionalpropertylist -> empty','optionalpropertylist',1,'p_optionalpropertylist','parser.py',168),
  ('propertylist -> OPEN_PROPERTY_LIST propertysequence CLOSE_PROPERTY_LIST','propertylist',3,'p_propertylist','parser.py',176),
  ('propertysequence -> empty','propertysequence',1,'p_propertysequence','parser.py',180),
  ('propertysequence -> propertysequence1','propertysequence',1,'p_propertysequence','parser.py',181),
  ('propertysequence1 -> property','propertysequence1',1,'p_propertysequence1','parser.py',185),
  ('propertysequence1 -> propertysequence1 COMMA property','propertysequence1',3,'p_propertysequence1','parser.py',186),
  ('property -> TEXT EQUALS TEXT','property',3,'p_property','parser.py',193),
]
