#!python
# -*- coding: utf-8 -*-
#
import argparse
import sys

import matplotlib.pyplot as plt
import yaml

import stressberry


def _main(args):
    data = yaml.load(args.infile)

    _, ax1 = plt.subplots()

    red = '#d62728'
    blue = '#1f77b4'

    ax1.plot(data['time'], data['temperature'], red)
    ax1.grid()
    ax1.set_xlabel('time (s)')
    ax1.set_ylabel('temperature (Â°C)', color=red)
    ax1.set_xlim([data['time'][0], data['time'][-1]])
    ax1.tick_params('y', colors=red)
    # Set the temperature limits fixed so one can compare different solutions.
    ax1.set_ylim([30.0, 85.0])

    ax2 = ax1.twinx()
    ax2.plot(data['time'], data['cpu load'], blue)
    ax2.set_ylabel('CPU load', color=blue)
    ax2.tick_params('y', colors=blue)
    ax2.set_ylim([0.0, 1.1])

    ax1.set_zorder(ax2.get_zorder() + 1)

    if args.outfile is not None:
        plt.savefig(args.outfile, transparent=True)
    else:
        plt.show()
    return


def _parse_cmd_arguments():
    parser = argparse.ArgumentParser(
        description='Plot stress test data.'
        )
    parser.add_argument(
        '-v', '--version',
        help='display version information',
        action='version',
        version='stressberry {}, Python {}'.format(
            stressberry.__version__, sys.version
            )
        )
    parser.add_argument(
        'infile',
        nargs='?',
        type=argparse.FileType('r'),
        default=sys.stdin,
        help='input YAML file (default: stdin)'
        )
    parser.add_argument(
        'outfile',
        nargs='?',
        help=(
            'if specified, the plot is written to this file '
            '(default: show on screen)'
            )
        )
    return parser.parse_args()


if __name__ == '__main__':
    _main(_parse_cmd_arguments())
