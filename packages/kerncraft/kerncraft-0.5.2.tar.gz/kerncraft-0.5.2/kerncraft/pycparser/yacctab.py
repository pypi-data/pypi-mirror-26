
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'VOID':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,58,60,61,62,63,66,67,72,75,78,79,81,82,83,84,85,87,88,89,92,93,94,95,96,97,100,104,105,107,109,117,123,128,129,130,131,132,133,134,135,142,143,144,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[8,-62,-101,-113,-102,-99,-112,-66,-114,-303,8,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,8,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,8,-96,8,-107,-63,-160,-53,-10,-84,-9,-90,-87,8,-89,-88,8,8,-130,-131,-301,-81,-146,-147,8,8,8,-82,-86,-85,-69,-92,-61,-30,-161,8,8,8,-140,8,-128,8,8,-137,8,8,-70,8,-83,-71,8,-35,8,8,-36,-127,-126,-302,-132,-138,-129,8,8,-148,8,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,8,8,8,8,8,8,8,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,8,-196,8,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'CHAR':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,58,60,61,62,63,66,67,72,75,78,79,81,82,83,84,85,87,88,89,92,93,94,95,96,97,100,104,105,107,109,117,123,128,129,130,131,132,133,134,135,142,143,144,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[3,-62,-101,-113,-102,-99,-112,-66,-114,-303,3,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,3,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,3,-96,3,-107,-63,-160,-53,-10,-84,-9,-90,-87,3,-89,-88,3,3,-130,-131,-301,-81,-146,-147,3,3,3,-82,-86,-85,-69,-92,-61,-30,-161,3,3,3,-140,3,-128,3,3,-137,3,3,-70,3,-83,-71,3,-35,3,3,-36,-127,-126,-302,-132,-138,-129,3,3,-148,3,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,3,3,3,3,3,3,3,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,3,-196,3,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'SHORT':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,58,60,61,62,63,66,67,72,75,78,79,81,82,83,84,85,87,88,89,92,93,94,95,96,97,100,104,105,107,109,117,123,128,129,130,131,132,133,134,135,142,143,144,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[5,-62,-101,-113,-102,-99,-112,-66,-114,-303,5,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,5,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,5,-96,5,-107,-63,-160,-53,-10,-84,-9,-90,-87,5,-89,-88,5,5,-130,-131,-301,-81,-146,-147,5,5,5,-82,-86,-85,-69,-92,-61,-30,-161,5,5,5,-140,5,-128,5,5,-137,5,5,-70,5,-83,-71,5,-35,5,5,-36,-127,-126,-302,-132,-138,-129,5,5,-148,5,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,5,5,5,5,5,5,5,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,5,-196,5,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'MINUS':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,122,125,126,127,143,145,150,151,152,155,156,157,158,159,160,161,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,194,205,207,210,216,219,225,230,231,233,234,235,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,314,316,317,318,319,320,321,322,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,400,404,410,411,412,415,416,421,422,429,430,431,433,439,440,441,442,447,449,453,455,456,459,461,462,463,464,465,466,469,470,472,476,477,478,479,480,482,493,494,497,498,499,501,502,503,506,508,512,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,156,-288,-303,156,-28,156,156,-303,156,-28,267,-262,-260,-232,-303,-251,-261,-292,156,-264,156,-299,-265,-253,-290,-280,-293,-296,-278,-259,-263,-289,-291,-279,-294,156,-297,156,-295,-277,156,156,156,-260,156,156,-302,156,156,156,-193,-77,-288,156,-75,-74,-76,-78,-72,-73,-192,156,-194,156,-260,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-12,156,156,-11,-227,-220,-222,-228,-225,-219,156,-223,-226,-218,-224,-221,156,-254,156,-256,-251,156,156,-273,-274,-300,-298,-255,156,-257,-260,-303,156,156,-195,-211,-209,156,156,156,156,-212,-208,156,156,-196,156,267,-237,-233,267,267,267,267,267,267,-236,267,267,-235,267,267,-234,267,267,-303,-176,-269,-270,-268,-271,-272,156,-281,-303,156,-28,-260,-210,-197,-199,156,156,-207,156,156,-11,156,-266,-267,156,-258,-252,-303,156,-260,156,-198,156,156,156,156,156,-203,-200,156,-202,-282,156,-303,-275,156,156,-276,-201,-204,156,156,-206,-205,]),'ELLIPSIS':([203,],[340,]),'STRUCT':([0,1,10,13,15,17,20,21,23,24,28,30,31,34,37,39,40,41,43,45,46,47,49,50,51,54,58,60,61,62,63,72,79,81,84,85,92,93,94,95,96,97,104,105,107,109,123,128,131,132,133,134,135,142,143,144,154,187,190,191,203,204,219,221,223,224,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,335,337,343,344,347,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[25,-62,-66,-303,-52,-98,-60,-29,-64,-117,-65,-115,-67,-94,25,-303,-93,-97,-95,-303,-68,-116,25,-96,25,-63,-160,-53,-10,-84,-9,25,25,25,-301,-81,25,25,-82,-86,-85,-69,-61,-30,-161,25,25,-140,25,25,-137,25,25,-70,25,-83,-71,25,-35,25,25,-36,-302,-138,25,25,25,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,25,25,25,25,25,25,-34,-31,-139,-195,-211,-209,-212,-208,25,-196,25,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'XOR':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,273,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-241,-237,-233,-246,-240,273,-238,-248,-244,-236,-239,273,-235,-243,-242,-234,-245,273,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'AND':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,122,125,126,127,143,145,150,151,152,155,156,157,158,159,160,161,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,194,205,207,210,216,219,225,230,231,233,234,235,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,314,316,317,318,319,320,321,322,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,400,404,410,411,412,415,416,421,422,429,430,431,433,439,440,441,442,447,449,453,455,456,459,461,462,463,464,465,466,469,470,472,476,477,478,479,480,482,493,494,497,498,499,501,502,503,506,508,512,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,176,-288,-303,176,-28,176,176,-303,176,-28,269,-262,-260,-232,-303,-251,-261,-292,176,-264,176,-299,-265,-253,-290,-280,-293,-296,-278,-259,-263,-289,-291,-279,-294,176,-297,176,-295,-277,176,176,176,-260,176,176,-302,176,176,176,-193,-77,-288,176,-75,-74,-76,-78,-72,-73,-192,176,-194,176,-260,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,-12,176,176,-11,-227,-220,-222,-228,-225,-219,176,-223,-226,-218,-224,-221,176,-254,176,-256,-251,176,176,-273,-274,-300,-298,-255,176,-257,-260,-303,176,176,-195,-211,-209,176,176,176,176,-212,-208,176,176,-196,176,-241,-237,-233,-246,-240,269,-238,269,-244,-236,-239,269,-235,-243,-242,-234,-245,269,-303,-176,-269,-270,-268,-271,-272,176,-281,-303,176,-28,-260,-210,-197,-199,176,176,-207,176,176,-11,176,-266,-267,176,-258,-252,-303,176,-260,176,-198,176,176,176,176,176,-203,-200,176,-202,-282,176,-303,-275,176,176,-276,-201,-204,176,176,-206,-205,]),'RETURN':([46,84,85,97,143,219,230,233,234,239,241,242,244,245,248,249,250,251,358,359,361,362,363,367,368,372,439,440,441,442,449,476,477,478,482,493,494,498,506,513,514,516,518,519,520,],[-68,-301,-81,-69,231,-302,231,-193,-77,-75,-74,-76,-78,-72,-73,-192,231,-194,-195,-211,-209,231,231,-212,-208,-196,-210,-197,-199,231,-207,-198,231,231,231,-203,-200,-202,231,-201,-204,231,231,-206,-205,]),'CONTINUE':([46,84,85,97,143,219,230,233,234,239,241,242,244,245,248,249,250,251,358,359,361,362,363,367,368,372,439,440,441,442,449,476,477,478,482,493,494,498,506,513,514,516,518,519,520,],[-68,-301,-81,-69,232,-302,232,-193,-77,-75,-74,-76,-78,-72,-73,-192,232,-194,-195,-211,-209,232,232,-212,-208,-196,-210,-197,-199,232,-207,-198,232,232,232,-203,-200,-202,232,-201,-204,232,232,-206,-205,]),'DOUBLE':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,58,60,61,62,63,66,67,72,75,78,79,81,82,83,84,85,87,88,89,92,93,94,95,96,97,100,104,105,107,109,117,123,128,129,130,131,132,133,134,135,142,143,144,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[29,-62,-101,-113,-102,-99,-112,-66,-114,-303,29,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,29,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,29,-96,29,-107,-63,-160,-53,-10,-84,-9,-90,-87,29,-89,-88,29,29,-130,-131,-301,-81,-146,-147,29,29,29,-82,-86,-85,-69,-92,-61,-30,-161,29,29,29,-140,29,-128,29,29,-137,29,29,-70,29,-83,-71,29,-35,29,29,-36,-127,-126,-302,-132,-138,-129,29,29,-148,29,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,29,29,29,29,29,29,29,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,29,-196,29,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'COMMA':([3,4,5,7,8,9,12,15,16,17,18,19,21,22,24,27,29,30,34,35,38,40,41,42,43,44,47,48,50,53,56,57,58,59,60,65,66,67,68,69,72,73,74,75,77,78,82,83,87,88,100,101,102,103,105,106,107,114,116,117,118,120,121,122,130,136,137,138,141,147,153,155,158,160,162,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,188,189,190,192,193,195,196,197,198,199,200,201,204,211,212,213,215,217,219,220,222,226,227,228,229,235,253,257,258,259,260,261,288,307,309,310,316,317,318,319,320,322,323,325,333,334,339,341,343,344,348,349,351,352,353,354,355,356,360,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399,401,405,408,409,410,411,412,413,414,415,416,419,420,422,423,424,425,426,435,436,437,438,443,444,448,450,451,452,457,461,462,464,465,467,468,473,474,475,483,484,487,488,490,491,495,499,503,504,505,511,512,],[-101,-113,-102,-303,-99,-112,-114,-52,-105,-98,-91,-103,-29,-109,-117,-100,-106,-115,-94,-110,-215,-93,-97,-104,-95,-111,-116,-108,-96,-107,-158,-28,-160,-27,-53,-54,-90,-87,111,-157,-156,-120,-37,-89,-118,-88,-130,-131,-146,-147,-92,-124,146,-122,-30,-159,-161,-55,-164,-303,-169,202,203,-288,-128,-154,-151,226,-156,-38,-119,-230,-232,-251,-121,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-171,-216,-35,-2,-167,-168,-1,-166,-45,-182,-56,-184,-36,-127,-143,-141,-126,350,-302,-132,-129,-152,-148,226,226,-288,371,-213,-125,-123,-43,-44,400,-254,-256,-251,-273,-274,-300,-298,-255,-257,-303,371,-183,-57,-170,-165,-34,-31,-229,-145,-133,-134,-155,-153,-149,-150,371,-42,-39,-241,-237,-233,-246,-240,-249,-238,-248,-244,-236,-239,-250,-235,-243,371,-242,-234,-245,-247,-174,-172,-217,460,371,-269,-270,-268,463,-286,-271,-272,-182,-181,-281,-185,-191,-189,-187,-32,-33,-144,-142,371,371,-214,371,-40,-41,-173,-266,-267,-258,-252,-50,-51,-190,-188,-186,-231,-175,-287,502,-49,-46,371,-282,-275,-47,-48,371,-276,]),'PLUS':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,122,125,126,127,143,145,150,151,152,155,156,157,158,159,160,161,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,194,205,207,210,216,219,225,230,231,233,234,235,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,314,316,317,318,319,320,321,322,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,400,404,410,411,412,415,416,421,422,429,430,431,433,439,440,441,442,447,449,453,455,456,459,461,462,463,464,465,466,469,470,472,476,477,478,479,480,482,493,494,497,498,499,501,502,503,506,508,512,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,161,-288,-303,161,-28,161,161,-303,161,-28,275,-262,-260,-232,-303,-251,-261,-292,161,-264,161,-299,-265,-253,-290,-280,-293,-296,-278,-259,-263,-289,-291,-279,-294,161,-297,161,-295,-277,161,161,161,-260,161,161,-302,161,161,161,-193,-77,-288,161,-75,-74,-76,-78,-72,-73,-192,161,-194,161,-260,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,-12,161,161,-11,-227,-220,-222,-228,-225,-219,161,-223,-226,-218,-224,-221,161,-254,161,-256,-251,161,161,-273,-274,-300,-298,-255,161,-257,-260,-303,161,161,-195,-211,-209,161,161,161,161,-212,-208,161,161,-196,161,275,-237,-233,275,275,275,275,275,275,-236,275,275,-235,275,275,-234,275,275,-303,-176,-269,-270,-268,-271,-272,161,-281,-303,161,-28,-260,-210,-197,-199,161,161,-207,161,161,-11,161,-266,-267,161,-258,-252,-303,161,-260,161,-198,161,161,161,161,161,-203,-200,161,-202,-282,161,-303,-275,161,161,-276,-201,-204,161,161,-206,-205,]),'INLINE':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,60,66,67,72,75,78,79,82,83,84,85,87,88,89,92,94,97,100,104,105,109,117,142,143,144,154,190,191,203,204,219,220,227,230,233,234,239,241,242,244,245,248,249,251,335,337,343,344,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[17,-62,-101,-113,-102,-99,-112,-66,-114,17,17,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,17,-215,17,-93,-97,-104,-95,-111,17,-68,-116,-108,-96,17,-107,-63,-53,-90,-87,17,-89,-88,17,-130,-131,-301,-81,-146,-147,17,17,-82,-69,-92,-61,-30,17,17,-70,17,-83,-71,-35,17,17,-36,-302,-132,-148,17,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,17,17,-34,-31,-133,-134,-149,-150,-195,-211,-209,-212,-208,17,-196,17,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'RBRACKET':([24,30,47,58,59,80,107,110,122,126,127,151,152,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,189,194,206,207,208,209,219,257,263,264,307,309,310,316,317,318,319,320,322,331,332,336,338,342,345,348,375,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,405,409,410,411,412,415,416,422,430,431,433,434,448,461,462,464,465,470,471,483,489,492,499,503,511,512,],[-117,-115,-116,-160,-27,-303,-161,-303,-288,-303,-28,-303,-28,-230,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-216,-303,-3,343,344,-4,-302,-213,376,377,-254,-256,-251,-273,-274,-300,-298,-255,-257,425,426,-303,-303,435,436,-229,451,452,-241,-237,-233,-246,-240,-249,-238,-248,-244,-236,-239,-250,-235,-243,-242,-234,-245,-247,454,-217,461,-269,-270,-268,-271,-272,-281,-303,-28,474,475,-214,-266,-267,-258,-252,490,491,-231,504,505,-282,-275,517,-276,]),'PLUSPLUS':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,122,125,126,127,143,145,150,151,152,156,157,159,161,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,194,205,207,210,216,219,225,230,231,233,234,235,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,316,317,318,319,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,410,411,412,415,416,421,422,429,430,431,433,439,440,441,442,447,449,453,455,456,459,461,462,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,499,501,502,503,506,508,512,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,164,-288,-303,164,-28,164,164,-303,164,-28,-262,-260,-303,-261,-292,164,-264,164,-299,-265,316,-290,-280,-293,-296,-278,-259,-263,-289,-291,-279,-294,164,-297,164,-295,-277,164,164,164,-260,164,164,-302,164,164,164,-193,-77,-288,164,-75,-74,-76,-78,-72,-73,-192,164,-194,164,-260,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-12,164,164,-11,-227,-220,-222,-228,-225,-219,164,-223,-226,-218,-224,-221,164,164,164,164,-273,-274,-300,-298,164,-260,-303,164,164,-195,-211,-209,164,164,164,164,-212,-208,164,164,-196,164,-303,-176,-269,-270,-268,-271,-272,164,-281,-303,164,-28,-260,-210,-197,-199,164,164,-207,164,164,-11,164,-266,-267,164,-303,164,-260,164,-198,164,164,164,164,164,-203,-200,164,-202,-282,164,-303,-275,164,164,-276,-201,-204,164,164,-206,-205,]),'ID':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,59,61,62,63,64,66,67,75,76,78,79,80,82,83,84,85,86,87,88,89,93,95,96,97,100,104,106,107,109,110,111,113,117,125,126,127,129,130,139,140,142,143,145,146,150,151,152,154,156,157,159,161,164,165,166,176,177,182,184,187,191,194,199,202,205,207,210,211,215,216,219,220,222,225,226,227,230,231,233,234,238,239,241,242,244,245,248,249,250,251,255,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,292,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,313,314,315,321,328,331,335,336,338,346,350,351,352,355,356,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,460,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,500,501,502,506,508,513,514,516,518,519,520,],[21,-62,-101,-113,-102,21,-303,-99,-112,-66,21,-114,-303,21,-105,-98,-91,-103,-60,-109,-64,-117,-135,82,-100,-65,-106,-115,-67,-136,-94,-110,87,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,21,-96,21,-107,-63,-158,-28,-160,-27,-10,-84,-9,21,-90,-87,-89,21,-88,122,-303,-130,-131,-301,-81,136,-146,-147,21,21,-86,-85,-69,-92,-61,-159,-161,122,-303,21,122,21,-303,122,-28,21,-128,136,136,-70,235,122,21,-303,122,-28,-71,-262,-260,-303,-261,122,-264,122,-259,-263,122,122,122,21,122,21,122,122,-260,122,-127,-126,122,-302,-132,-129,122,136,-148,235,122,-193,-77,122,-75,-74,-76,-78,-72,-73,-192,235,-194,373,122,-260,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-12,122,122,-11,122,-227,-220,-222,-228,-225,-219,122,-223,-226,-218,-224,-221,122,122,122,410,122,415,122,21,-260,122,-303,122,122,21,-133,-134,-149,-150,-195,-211,-209,235,235,122,122,-212,-208,122,122,-196,122,-303,-176,122,-303,122,-28,-260,-210,-197,-199,235,122,-207,122,122,-11,122,122,122,-303,122,-260,122,-198,235,235,122,122,235,-203,-200,122,-202,122,122,-303,235,122,-201,-204,235,235,-206,-205,]),'UNSIGNED':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,58,60,61,62,63,66,67,72,75,78,79,81,82,83,84,85,87,88,89,92,93,94,95,96,97,100,104,105,107,109,117,123,128,129,130,131,132,133,134,135,142,143,144,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[22,-62,-101,-113,-102,-99,-112,-66,-114,-303,22,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,22,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,22,-96,22,-107,-63,-160,-53,-10,-84,-9,-90,-87,22,-89,-88,22,22,-130,-131,-301,-81,-146,-147,22,22,22,-82,-86,-85,-69,-92,-61,-30,-161,22,22,22,-140,22,-128,22,22,-137,22,22,-70,22,-83,-71,22,-35,22,22,-36,-127,-126,-302,-132,-138,-129,22,22,-148,22,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,22,22,22,22,22,22,22,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,22,-196,22,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'INT_CONST_BIN':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,125,126,127,143,145,150,151,152,156,157,159,161,164,165,166,176,177,182,184,187,194,205,207,210,216,219,225,230,231,233,234,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,501,502,506,508,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,163,-303,163,-28,163,163,-303,163,-28,-262,-260,-303,-261,163,-264,163,-259,-263,163,163,163,163,163,-260,163,163,-302,163,163,163,-193,-77,163,-75,-74,-76,-78,-72,-73,-192,163,-194,163,-260,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,-12,163,163,-11,-227,-220,-222,-228,-225,-219,163,-223,-226,-218,-224,-221,163,163,163,163,163,-260,-303,163,163,-195,-211,-209,163,163,163,163,-212,-208,163,163,-196,163,-303,-176,163,-303,163,-28,-260,-210,-197,-199,163,163,-207,163,163,-11,163,163,-303,163,-260,163,-198,163,163,163,163,163,-203,-200,163,-202,163,-303,163,163,-201,-204,163,163,-206,-205,]),'MOD':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,278,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,278,278,-233,278,278,278,278,278,278,278,278,278,-235,278,278,-234,278,278,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'OREQUAL':([122,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,297,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'LNOT':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,125,126,127,143,145,150,151,152,156,157,159,161,164,165,166,176,177,182,184,187,194,205,207,210,216,219,225,230,231,233,234,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,501,502,506,508,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,165,-303,165,-28,165,165,-303,165,-28,-262,-260,-303,-261,165,-264,165,-259,-263,165,165,165,165,165,-260,165,165,-302,165,165,165,-193,-77,165,-75,-74,-76,-78,-72,-73,-192,165,-194,165,-260,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-12,165,165,-11,-227,-220,-222,-228,-225,-219,165,-223,-226,-218,-224,-221,165,165,165,165,165,-260,-303,165,165,-195,-211,-209,165,165,165,165,-212,-208,165,165,-196,165,-303,-176,165,-303,165,-28,-260,-210,-197,-199,165,165,-207,165,165,-11,165,165,-303,165,-260,165,-198,165,165,165,165,165,-203,-200,165,-202,165,-303,165,165,-201,-204,165,165,-206,-205,]),'CASE':([46,84,85,97,143,219,230,233,234,239,241,242,244,245,248,249,250,251,358,359,361,362,363,367,368,372,439,440,441,442,449,476,477,478,482,493,494,498,506,513,514,516,518,519,520,],[-68,-301,-81,-69,238,-302,238,-193,-77,-75,-74,-76,-78,-72,-73,-192,238,-194,-195,-211,-209,238,238,-212,-208,-196,-210,-197,-199,238,-207,-198,238,238,238,-203,-200,-202,238,-201,-204,238,238,-206,-205,]),'_BOOL':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,58,60,61,62,63,66,67,72,75,78,79,81,82,83,84,85,87,88,89,92,93,94,95,96,97,100,104,105,107,109,117,123,128,129,130,131,132,133,134,135,142,143,144,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[27,-62,-101,-113,-102,-99,-112,-66,-114,-303,27,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,27,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,27,-96,27,-107,-63,-160,-53,-10,-84,-9,-90,-87,27,-89,-88,27,27,-130,-131,-301,-81,-146,-147,27,27,27,-82,-86,-85,-69,-92,-61,-30,-161,27,27,27,-140,27,-128,27,27,-137,27,27,-70,27,-83,-71,27,-35,27,27,-36,-127,-126,-302,-132,-138,-129,27,27,-148,27,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,27,27,27,27,27,27,27,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,27,-196,27,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'OFFSETOF':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,125,126,127,143,145,150,151,152,156,157,159,161,164,165,166,176,177,182,184,187,194,205,207,210,216,219,225,230,231,233,234,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,501,502,506,508,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,167,-303,167,-28,167,167,-303,167,-28,-262,-260,-303,-261,167,-264,167,-259,-263,167,167,167,167,167,-260,167,167,-302,167,167,167,-193,-77,167,-75,-74,-76,-78,-72,-73,-192,167,-194,167,-260,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,-12,167,167,-11,-227,-220,-222,-228,-225,-219,167,-223,-226,-218,-224,-221,167,167,167,167,167,-260,-303,167,167,-195,-211,-209,167,167,167,167,-212,-208,167,167,-196,167,-303,-176,167,-303,167,-28,-260,-210,-197,-199,167,167,-207,167,167,-11,167,167,-303,167,-260,167,-198,167,167,167,167,167,-203,-200,167,-202,167,-303,167,167,-201,-204,167,167,-206,-205,]),'TIMESEQUAL':([122,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,295,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'OR':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,284,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-241,-237,-233,-246,-240,284,-238,-248,-244,-236,-239,284,-235,-243,-242,-234,-245,-247,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'PPHASH':([0,1,10,20,23,28,31,46,51,54,85,97,104,142,154,219,372,],[31,-62,-66,-60,-64,-65,-67,-68,31,-63,-81,-69,-61,-70,-71,-302,-196,]),'WHILE':([46,84,85,97,143,219,230,233,234,239,241,242,244,245,248,249,250,251,358,359,361,362,363,367,368,369,372,439,440,441,442,449,476,477,478,482,493,494,498,506,513,514,516,518,519,520,],[-68,-301,-81,-69,240,-302,240,-193,-77,-75,-74,-76,-78,-72,-73,-192,240,-194,-195,-211,-209,240,240,-212,-208,445,-196,-210,-197,-199,240,-207,-198,240,240,240,-203,-200,-202,240,-201,-204,240,240,-206,-205,]),'CONDOP':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,280,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-241,-237,-233,-246,-240,-249,-238,-248,-244,-236,-239,-250,-235,-243,-242,-234,-245,-247,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'LE':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,266,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-241,-237,-233,266,-240,266,-238,266,266,-236,-239,266,-235,-243,-242,-234,266,266,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'GE':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,281,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-241,-237,-233,281,-240,281,-238,281,281,-236,-239,281,-235,-243,-242,-234,281,281,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'INT_CONST_OCT':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,125,126,127,143,145,150,151,152,156,157,159,161,164,165,166,176,177,182,184,187,194,205,207,210,216,219,225,230,231,233,234,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,501,502,506,508,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,171,-303,171,-28,171,171,-303,171,-28,-262,-260,-303,-261,171,-264,171,-259,-263,171,171,171,171,171,-260,171,171,-302,171,171,171,-193,-77,171,-75,-74,-76,-78,-72,-73,-192,171,-194,171,-260,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,-12,171,171,-11,-227,-220,-222,-228,-225,-219,171,-223,-226,-218,-224,-221,171,171,171,171,171,-260,-303,171,171,-195,-211,-209,171,171,171,171,-212,-208,171,171,-196,171,-303,-176,171,-303,171,-28,-260,-210,-197,-199,171,171,-207,171,171,-11,171,171,-303,171,-260,171,-198,171,171,171,171,171,-203,-200,171,-202,171,-303,171,171,-201,-204,171,171,-206,-205,]),'IF':([46,84,85,97,143,219,230,233,234,239,241,242,244,245,248,249,250,251,358,359,361,362,363,367,368,372,439,440,441,442,449,476,477,478,482,493,494,498,506,513,514,516,518,519,520,],[-68,-301,-81,-69,243,-302,243,-193,-77,-75,-74,-76,-78,-72,-73,-192,243,-194,-195,-211,-209,243,243,-212,-208,-196,-210,-197,-199,243,-207,-198,243,243,243,-203,-200,-202,243,-201,-204,243,243,-206,-205,]),'TYPEDEF':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,60,66,67,72,75,78,79,82,83,84,85,87,88,89,92,94,97,100,104,105,109,117,142,143,144,154,190,191,203,204,219,220,227,230,233,234,239,241,242,244,245,248,249,251,335,337,343,344,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[41,-62,-101,-113,-102,-99,-112,-66,-114,41,41,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,41,-215,41,-93,-97,-104,-95,-111,41,-68,-116,-108,-96,41,-107,-63,-53,-90,-87,41,-89,-88,41,-130,-131,-301,-81,-146,-147,41,41,-82,-69,-92,-61,-30,41,41,-70,41,-83,-71,-35,41,41,-36,-302,-132,-148,41,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,41,41,-34,-31,-133,-134,-149,-150,-195,-211,-209,-212,-208,41,-196,41,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'FLOAT_CONST':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,125,126,127,143,145,150,151,152,156,157,159,161,164,165,166,176,177,182,184,187,194,205,207,210,216,219,225,230,231,233,234,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,501,502,506,508,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,173,-303,173,-28,173,173,-303,173,-28,-262,-260,-303,-261,173,-264,173,-259,-263,173,173,173,173,173,-260,173,173,-302,173,173,173,-193,-77,173,-75,-74,-76,-78,-72,-73,-192,173,-194,173,-260,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-12,173,173,-11,-227,-220,-222,-228,-225,-219,173,-223,-226,-218,-224,-221,173,173,173,173,173,-260,-303,173,173,-195,-211,-209,173,173,173,173,-212,-208,173,173,-196,173,-303,-176,173,-303,173,-28,-260,-210,-197,-199,173,173,-207,173,173,-11,173,173,-303,173,-260,173,-198,173,173,173,173,173,-203,-200,173,-202,173,-303,173,173,-201,-204,173,173,-206,-205,]),'$end':([0,1,2,10,20,23,28,31,46,51,52,54,85,97,104,142,154,219,372,],[-303,-62,-59,-66,-60,-64,-65,-67,-68,-58,0,-63,-81,-69,-61,-70,-71,-302,-196,]),'__INT128':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,58,60,61,62,63,66,67,72,75,78,79,81,82,83,84,85,87,88,89,92,93,94,95,96,97,100,104,105,107,109,117,123,128,129,130,131,132,133,134,135,142,143,144,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[35,-62,-101,-113,-102,-99,-112,-66,-114,-303,35,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,35,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,35,-96,35,-107,-63,-160,-53,-10,-84,-9,-90,-87,35,-89,-88,35,35,-130,-131,-301,-81,-146,-147,35,35,35,-82,-86,-85,-69,-92,-61,-30,-161,35,35,35,-140,35,-128,35,35,-137,35,35,-70,35,-83,-71,35,-35,35,35,-36,-127,-126,-302,-132,-138,-129,35,35,-148,35,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,35,35,35,35,35,35,35,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,35,-196,35,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'RSHIFTEQUAL':([122,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,302,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'PERIOD':([84,122,159,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,291,293,316,317,318,319,400,402,403,410,411,412,415,416,422,454,461,462,466,485,486,499,502,503,510,512,517,],[-301,-288,292,-292,-299,-265,313,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-177,292,-273,-274,-300,-298,292,-180,-178,-269,-270,-268,-271,-272,-281,-179,-266,-267,292,500,-283,-282,292,-275,-284,-276,-285,]),'BREAK':([46,84,85,97,143,219,230,233,234,239,241,242,244,245,248,249,250,251,358,359,361,362,363,367,368,372,439,440,441,442,449,476,477,478,482,493,494,498,506,513,514,516,518,519,520,],[-68,-301,-81,-69,247,-302,247,-193,-77,-75,-74,-76,-78,-72,-73,-192,247,-194,-195,-211,-209,247,247,-212,-208,-196,-210,-197,-199,247,-207,-198,247,247,247,-203,-200,-202,247,-201,-204,247,247,-206,-205,]),'RSHIFT':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,272,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,272,-237,-233,272,272,272,-238,272,272,-236,-239,272,-235,272,272,-234,272,272,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'DIVEQUAL':([122,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,305,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'NOT':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,125,126,127,143,145,150,151,152,156,157,159,161,164,165,166,176,177,182,184,187,194,205,207,210,216,219,225,230,231,233,234,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,501,502,506,508,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,177,-303,177,-28,177,177,-303,177,-28,-262,-260,-303,-261,177,-264,177,-259,-263,177,177,177,177,177,-260,177,177,-302,177,177,177,-193,-77,177,-75,-74,-76,-78,-72,-73,-192,177,-194,177,-260,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,-12,177,177,-11,-227,-220,-222,-228,-225,-219,177,-223,-226,-218,-224,-221,177,177,177,177,177,-260,-303,177,177,-195,-211,-209,177,177,177,177,-212,-208,177,177,-196,177,-303,-176,177,-303,177,-28,-260,-210,-197,-199,177,177,-207,177,177,-11,177,177,-303,177,-260,177,-198,177,177,177,177,177,-203,-200,177,-202,177,-303,177,177,-201,-204,177,177,-206,-205,]),'ANDEQUAL':([122,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,294,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'INT_CONST_DEC':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,125,126,127,143,145,150,151,152,156,157,159,161,164,165,166,176,177,182,184,187,194,205,207,210,216,219,225,230,231,233,234,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,501,502,506,508,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,178,-303,178,-28,178,178,-303,178,-28,-262,-260,-303,-261,178,-264,178,-259,-263,178,178,178,178,178,-260,178,178,-302,178,178,178,-193,-77,178,-75,-74,-76,-78,-72,-73,-192,178,-194,178,-260,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,-12,178,178,-11,-227,-220,-222,-228,-225,-219,178,-223,-226,-218,-224,-221,178,178,178,178,178,-260,-303,178,178,-195,-211,-209,178,178,178,178,-212,-208,178,178,-196,178,-303,-176,178,-303,178,-28,-260,-210,-197,-199,178,178,-207,178,178,-11,178,178,-303,178,-260,178,-198,178,178,178,178,178,-203,-200,178,-202,178,-303,178,178,-201,-204,178,178,-206,-205,]),'PPPRAGMA':([0,1,10,20,23,28,31,46,51,54,84,85,97,104,142,143,154,219,230,233,234,239,241,242,244,245,248,249,250,251,358,359,361,362,363,367,368,372,439,440,441,442,449,476,477,478,482,493,494,498,506,513,514,516,518,519,520,],[46,-62,-66,-60,-64,-65,-67,-68,46,-63,-301,-81,-69,-61,-70,46,-71,-302,46,-193,-77,-75,-74,-76,-78,-72,-73,-192,46,-194,-195,-211,-209,46,46,-212,-208,-196,-210,-197,-199,46,-207,-198,46,46,46,-203,-200,-202,46,-201,-204,46,46,-206,-205,]),'LOR':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,277,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-241,-237,-233,-246,-240,-249,-238,-248,-244,-236,-239,-250,-235,-243,-242,-234,-245,-247,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'HEX_FLOAT_CONST':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,125,126,127,143,145,150,151,152,156,157,159,161,164,165,166,176,177,182,184,187,194,205,207,210,216,219,225,230,231,233,234,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,501,502,506,508,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,181,-303,181,-28,181,181,-303,181,-28,-262,-260,-303,-261,181,-264,181,-259,-263,181,181,181,181,181,-260,181,181,-302,181,181,181,-193,-77,181,-75,-74,-76,-78,-72,-73,-192,181,-194,181,-260,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,-12,181,181,-11,-227,-220,-222,-228,-225,-219,181,-223,-226,-218,-224,-221,181,181,181,181,181,-260,-303,181,181,-195,-211,-209,181,181,181,181,-212,-208,181,181,-196,181,-303,-176,181,-303,181,-28,-260,-210,-197,-199,181,181,-207,181,181,-11,181,181,-303,181,-260,181,-198,181,181,181,181,181,-203,-200,181,-202,181,-303,181,181,-201,-204,181,181,-206,-205,]),'COLON':([3,4,5,8,9,12,15,16,19,21,22,24,27,29,30,35,38,42,44,47,48,53,60,65,69,74,82,83,87,88,105,114,122,129,130,141,147,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,189,190,204,211,212,215,219,220,222,227,235,236,257,260,261,307,309,310,316,317,318,319,320,322,343,344,348,350,351,352,355,356,364,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,405,410,411,412,415,416,422,435,436,448,451,452,461,462,464,465,483,499,503,512,],[-101,-113,-102,-99,-112,-114,-52,-105,-103,-29,-109,-117,-100,-106,-115,-110,-215,-104,-111,-116,-108,-107,-53,-54,-157,-37,-130,-131,-146,-147,-30,-55,-288,216,-128,-156,-38,-230,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-216,-35,-36,-127,346,-126,-302,-132,-129,-148,362,363,-213,-43,-44,-254,-256,-251,-273,-274,-300,-298,-255,-257,-34,-31,-229,216,-133,-134,-149,-150,442,-42,-39,-241,-237,-233,-246,-240,-249,-238,-248,-244,-236,-239,-250,-235,-243,453,-242,-234,-245,-247,-217,-269,-270,-268,-271,-272,-281,-32,-33,-214,-40,-41,-266,-267,-258,-252,-231,-282,-275,-276,]),'EXTERN':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,60,66,67,72,75,78,79,82,83,84,85,87,88,89,92,94,97,100,104,105,109,117,142,143,144,154,190,191,203,204,219,220,227,230,233,234,239,241,242,244,245,248,249,251,335,337,343,344,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[50,-62,-101,-113,-102,-99,-112,-66,-114,50,50,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,50,-215,50,-93,-97,-104,-95,-111,50,-68,-116,-108,-96,50,-107,-63,-53,-90,-87,50,-89,-88,50,-130,-131,-301,-81,-146,-147,50,50,-82,-69,-92,-61,-30,50,50,-70,50,-83,-71,-35,50,50,-36,-302,-132,-148,50,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,50,50,-34,-31,-133,-134,-149,-150,-195,-211,-209,-212,-208,50,-196,50,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'MINUSEQUAL':([122,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,304,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'SIZEOF':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,125,126,127,143,145,150,151,152,156,157,159,161,164,165,166,176,177,182,184,187,194,205,207,210,216,219,225,230,231,233,234,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,501,502,506,508,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,184,-303,184,-28,184,184,-303,184,-28,-262,-260,-303,-261,184,-264,184,-259,-263,184,184,184,184,184,-260,184,184,-302,184,184,184,-193,-77,184,-75,-74,-76,-78,-72,-73,-192,184,-194,184,-260,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,-12,184,184,-11,-227,-220,-222,-228,-225,-219,184,-223,-226,-218,-224,-221,184,184,184,184,184,-260,-303,184,184,-195,-211,-209,184,184,184,184,-212,-208,184,184,-196,184,-303,-176,184,-303,184,-28,-260,-210,-197,-199,184,184,-207,184,184,-11,184,184,-303,184,-260,184,-198,184,184,184,184,184,-203,-200,184,-202,184,-303,184,184,-201,-204,184,184,-206,-205,]),'EQUALS':([15,21,60,65,69,72,73,74,101,105,114,122,136,141,147,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,190,204,219,235,260,261,291,293,307,309,310,316,317,318,319,320,322,343,344,376,377,402,403,410,411,412,415,416,422,435,436,451,452,454,461,462,464,465,499,503,512,],[-52,-29,-53,-54,-157,-156,113,-37,145,-30,-55,-288,225,-156,-38,303,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-35,-36,-302,-288,-43,-44,-177,404,-254,-256,-251,-273,-274,-300,-298,-255,-257,-34,-31,-42,-39,-180,-178,-269,-270,-268,-271,-272,-281,-32,-33,-40,-41,-179,-266,-267,-258,-252,-282,-275,-276,]),'TYPEID':([0,1,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,59,60,61,62,63,64,66,67,72,75,76,78,79,81,82,83,84,85,87,88,89,92,93,94,95,96,97,100,104,105,106,107,109,111,117,123,128,129,130,131,132,133,134,135,142,143,144,146,154,187,190,191,199,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,313,315,321,335,337,343,344,347,350,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[38,-62,-101,-113,-102,-303,-99,-112,-66,-114,-303,74,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-135,83,-100,-65,-106,-115,-67,-136,-94,-110,88,38,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,38,-96,38,-107,-63,-158,-28,-160,-27,-53,-10,-84,-9,74,-90,-87,38,-89,74,-88,38,38,-130,-131,-301,-81,-146,-147,74,38,38,-82,-86,-85,-69,-92,-61,-30,-159,-161,38,74,198,38,-140,74,-128,38,38,-137,38,38,-70,38,-83,74,-71,38,-35,38,198,38,-36,-127,-126,-302,-132,-138,-129,38,38,-148,38,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,38,38,38,411,416,38,38,38,-34,-31,-139,74,-133,-134,-149,-150,-195,-211,-209,-212,-208,38,-196,38,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'NE':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,283,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-241,-237,-233,283,-240,283,-238,283,-244,-236,-239,283,-235,-243,-242,-234,-245,283,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'SIGNED':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,58,60,61,62,63,66,67,72,75,78,79,81,82,83,84,85,87,88,89,92,93,94,95,96,97,100,104,105,107,109,117,123,128,129,130,131,132,133,134,135,142,143,144,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[48,-62,-101,-113,-102,-99,-112,-66,-114,-303,48,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,48,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,48,-96,48,-107,-63,-160,-53,-10,-84,-9,-90,-87,48,-89,-88,48,48,-130,-131,-301,-81,-146,-147,48,48,48,-82,-86,-85,-69,-92,-61,-30,-161,48,48,48,-140,48,-128,48,48,-137,48,48,-70,48,-83,-71,48,-35,48,48,-36,-127,-126,-302,-132,-138,-129,48,48,-148,48,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,48,48,48,48,48,48,48,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,48,-196,48,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'DO':([46,84,85,97,143,219,230,233,234,239,241,242,244,245,248,249,250,251,358,359,361,362,363,367,368,372,439,440,441,442,449,476,477,478,482,493,494,498,506,513,514,516,518,519,520,],[-68,-301,-81,-69,250,-302,250,-193,-77,-75,-74,-76,-78,-72,-73,-192,250,-194,-195,-211,-209,250,250,-212,-208,-196,-210,-197,-199,250,-207,-198,250,250,250,-203,-200,-202,250,-201,-204,250,250,-206,-205,]),'LPAREN':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,59,60,61,62,63,64,65,66,67,74,75,76,78,80,82,83,84,85,87,88,89,93,95,96,97,100,104,105,106,107,110,111,113,114,117,122,125,126,127,129,130,142,143,145,146,147,150,151,152,154,156,157,159,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,191,194,198,199,200,201,204,205,207,210,211,215,216,219,220,222,225,227,230,231,233,234,235,238,239,240,241,242,243,244,245,248,249,250,251,252,256,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,316,317,318,319,321,323,328,331,333,334,336,338,343,344,346,350,351,352,355,356,358,359,361,362,363,365,366,367,368,370,371,372,374,376,377,400,404,410,411,412,415,416,418,419,421,422,423,424,425,426,429,430,431,433,435,436,439,440,441,442,445,447,449,451,452,453,455,456,459,461,462,463,466,467,468,469,470,472,473,474,475,476,477,478,479,480,482,490,491,493,494,497,498,499,501,502,503,504,505,506,508,512,513,514,516,518,519,520,],[6,-62,-101,-113,-102,6,-303,-99,-112,-66,6,-114,-303,64,79,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,6,-96,6,-107,-63,-158,-28,-160,-27,79,-10,-84,-9,64,109,-90,-87,-37,-89,64,-88,-303,-130,-131,-301,-81,-146,-147,64,6,-86,-85,-69,-92,-61,-30,-159,-161,-303,64,187,109,191,-288,-303,187,-28,64,-128,-70,187,187,64,-38,-303,187,-28,-71,-262,-260,-303,-261,-292,306,-264,308,311,-299,-265,314,-290,-280,-293,-296,-278,-259,-263,-289,-291,-279,-294,306,-297,321,-295,-277,187,-35,191,187,-45,191,335,337,-36,187,-260,187,-127,-126,308,-302,-132,-129,308,-148,187,187,-193,-77,-288,308,-75,365,-74,-76,366,-78,-72,-73,-192,187,-194,370,374,-43,-44,187,-260,187,308,308,308,308,308,308,308,308,308,308,308,308,308,308,187,308,308,308,308,-12,308,187,-11,-227,-220,-222,-228,-225,-219,187,-223,-226,-218,-224,-221,187,187,187,187,-273,-274,-300,-298,187,418,191,-260,337,335,-303,187,-34,-31,308,64,-133,-134,-149,-150,-195,-211,-209,187,187,187,187,-212,-208,187,187,-196,187,-42,-39,-303,-176,-269,-270,-268,-271,-272,418,418,308,-281,-185,-191,-189,-187,-303,187,-28,-260,-32,-33,-210,-197,-199,187,479,187,-207,-40,-41,308,187,-11,308,-266,-267,187,-303,-50,-51,187,-260,187,-190,-188,-186,-198,187,187,187,187,187,-49,-46,-203,-200,187,-202,-282,187,-303,-275,-47,-48,187,187,-276,-201,-204,187,187,-206,-205,]),'TIMES':([0,1,3,4,5,6,7,8,9,10,12,13,14,16,17,18,19,20,22,23,24,27,28,29,30,31,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,59,61,62,63,64,66,67,75,78,80,82,83,84,85,87,88,89,93,95,96,97,100,104,107,110,111,113,117,122,125,126,127,129,130,142,143,145,146,150,151,152,154,155,156,157,158,159,160,161,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,191,194,205,207,210,211,215,216,219,220,222,225,227,230,231,233,234,235,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,314,316,317,318,319,320,321,322,323,331,336,338,346,350,351,352,355,356,358,359,361,362,363,365,366,367,368,370,371,372,374,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,400,404,410,411,412,415,416,418,421,422,429,430,431,433,439,440,441,442,447,449,453,455,456,459,461,462,463,464,465,466,469,470,472,476,477,478,479,480,482,493,494,497,498,499,501,502,503,506,508,512,513,514,516,518,519,520,],[7,-62,-101,-113,-102,7,-303,-99,-112,-66,-114,-303,7,-105,-98,-91,-103,-60,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,7,-96,7,-107,-63,7,-28,-160,-27,-10,-84,-9,7,-90,-87,-89,-88,-303,-130,-131,-301,-81,-146,-147,7,7,-86,-85,-69,-92,-61,-161,-303,7,157,7,-288,-303,207,-28,7,-128,-70,157,157,7,-303,263,-28,-71,268,-262,-260,-232,-303,-251,-261,-292,157,-264,157,-299,-265,-253,-290,-280,-293,-296,-278,-259,-263,-289,-291,-279,-294,157,-297,157,-295,-277,157,7,331,157,-260,157,-127,-126,157,-302,-132,-129,157,-148,157,157,-193,-77,-288,157,-75,-74,-76,-78,-72,-73,-192,157,-194,157,-260,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,-12,157,157,-11,-227,-220,-222,-228,-225,-219,157,-223,-226,-218,-224,-221,157,-254,157,-256,-251,157,157,-273,-274,-300,-298,-255,157,-257,7,-260,-303,433,157,7,-133,-134,-149,-150,-195,-211,-209,157,157,157,157,-212,-208,157,157,-196,157,268,268,-233,268,268,268,268,268,268,268,268,268,-235,268,268,-234,268,268,-303,-176,-269,-270,-268,-271,-272,7,157,-281,-303,470,-28,-260,-210,-197,-199,157,157,-207,157,157,-11,157,-266,-267,157,-258,-252,-303,157,-260,157,-198,157,157,157,157,157,-203,-200,157,-202,-282,157,-303,-275,157,157,-276,-201,-204,157,157,-206,-205,]),'SEMI':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,77,78,81,82,83,84,85,87,88,89,93,95,96,97,98,99,100,101,102,103,104,105,114,122,128,129,130,131,133,134,135,141,142,143,147,153,154,155,158,160,162,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,188,189,190,204,211,212,213,214,215,217,218,219,220,221,222,223,224,227,230,231,232,233,234,235,237,239,241,242,244,245,246,247,248,249,250,251,253,257,258,259,260,261,307,309,310,316,317,318,319,320,322,343,344,347,348,349,351,352,355,356,357,358,359,360,361,362,363,367,368,370,372,373,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,401,405,410,411,412,415,416,422,435,436,437,438,439,440,441,442,446,447,448,449,451,452,457,461,462,464,465,476,477,478,480,481,482,483,493,494,496,498,499,503,506,507,512,513,514,516,518,519,520,],[10,-62,-101,-113,-102,-99,-112,-66,-114,-303,-303,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,85,-94,-110,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,-303,-96,10,-107,-63,-53,-10,-84,-9,-54,-90,-87,-20,-157,-79,-19,-156,-120,-37,-89,-118,-88,128,-130,-131,-301,-81,-146,-147,-303,-303,-86,-85,-69,-15,-80,-92,-124,-16,-122,-61,-30,-55,-288,-140,-303,-128,128,-137,128,128,-156,-70,-303,-38,-119,-71,-230,-232,-251,-121,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-171,-216,-35,-36,-127,-143,-141,347,-126,-26,-25,-302,-132,-138,-129,128,128,-148,-303,359,361,-193,-77,-288,-13,-75,-74,-76,-78,-72,367,368,-73,-192,-303,-194,-14,-213,-125,-123,-43,-44,-254,-256,-251,-273,-274,-300,-298,-255,-257,-34,-31,-139,-229,-145,-133,-134,-149,-150,-13,-195,-211,439,-209,-303,-303,-212,-208,-303,-196,449,-42,-39,-241,-237,-233,-246,-240,-249,-238,-248,-244,-236,-239,-250,-235,-243,-242,-234,-245,-247,-172,-217,-269,-270,-268,-271,-272,-281,-32,-33,-144,-142,-210,-197,-199,-303,480,-303,-214,-207,-40,-41,-173,-266,-267,-258,-252,-198,-303,-303,-303,497,-303,-231,-203,-200,508,-202,-282,-275,-303,514,-276,-201,-204,-303,-303,-206,-205,]),'LT':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,270,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-241,-237,-233,270,-240,270,-238,270,270,-236,-239,270,-235,-243,-242,-234,270,270,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'AUTO':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,60,66,67,72,75,78,79,82,83,84,85,87,88,89,92,94,97,100,104,105,109,117,142,143,144,154,190,191,203,204,219,220,227,230,233,234,239,241,242,244,245,248,249,251,335,337,343,344,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[40,-62,-101,-113,-102,-99,-112,-66,-114,40,40,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,40,-215,40,-93,-97,-104,-95,-111,40,-68,-116,-108,-96,40,-107,-63,-53,-90,-87,40,-89,-88,40,-130,-131,-301,-81,-146,-147,40,40,-82,-69,-92,-61,-30,40,40,-70,40,-83,-71,-35,40,40,-36,-302,-132,-148,40,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,40,40,-34,-31,-133,-134,-149,-150,-195,-211,-209,-212,-208,40,-196,40,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'RPAREN':([3,4,5,7,8,9,12,15,16,17,18,19,21,22,24,27,29,30,34,35,38,40,41,42,43,44,47,48,50,53,55,56,57,58,59,60,65,66,67,74,75,78,79,82,83,87,88,100,105,106,107,108,109,114,115,116,117,118,119,120,121,122,124,130,147,148,149,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,189,190,191,192,193,195,196,197,198,199,200,201,204,211,215,219,220,222,227,253,257,260,261,307,309,310,314,316,317,318,319,320,322,323,324,325,326,327,328,329,330,333,334,335,337,339,340,341,343,344,351,352,355,356,357,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,405,406,407,410,411,412,413,414,415,416,417,418,419,420,422,423,424,425,426,427,428,432,435,436,443,444,448,450,451,452,461,462,464,465,467,468,473,474,475,483,485,486,487,490,491,495,497,499,503,504,505,508,509,510,512,515,517,],[-101,-113,-102,-303,-99,-112,-114,-52,-105,-98,-91,-103,-29,-109,-117,-100,-106,-115,-94,-110,-215,-93,-97,-104,-95,-111,-116,-108,-96,-107,105,-158,-28,-160,-27,-53,-54,-90,-87,-37,-89,-88,-303,-130,-131,-146,-147,-92,-30,-159,-161,147,-303,-55,190,-164,-303,-169,-17,-18,-162,-288,204,-128,-38,260,261,-230,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-216,-35,-303,-2,-167,-168,-1,-166,-45,-182,-56,-184,-36,-127,-126,-302,-132,-129,-148,-14,-213,-43,-44,-254,-256,-251,412,-273,-274,-300,-298,-255,-257,-303,421,422,-24,423,-182,424,-23,-183,-57,-303,-303,-170,-163,-165,-34,-31,-133,-134,-149,-150,-13,-42,-39,-241,-237,-233,-246,-240,-249,-238,-248,-244,-236,-239,-250,-235,-243,-242,-234,-245,-247,-217,458,459,-269,-270,-268,462,-286,-271,-272,464,-303,-182,-181,-281,-185,-191,-189,-187,467,468,473,-32,-33,477,478,-214,482,-40,-41,-266,-267,-258,-252,-50,-51,-190,-188,-186,-231,499,-283,-287,-49,-46,507,-303,-282,-275,-47,-48,-303,516,-284,-276,518,-285,]),'FLOAT':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,58,60,61,62,63,66,67,72,75,78,79,81,82,83,84,85,87,88,89,92,93,94,95,96,97,100,104,105,107,109,117,123,128,129,130,131,132,133,134,135,142,143,144,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[16,-62,-101,-113,-102,-99,-112,-66,-114,-303,16,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,16,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,16,-96,16,-107,-63,-160,-53,-10,-84,-9,-90,-87,16,-89,-88,16,16,-130,-131,-301,-81,-146,-147,16,16,16,-82,-86,-85,-69,-92,-61,-30,-161,16,16,16,-140,16,-128,16,16,-137,16,16,-70,16,-83,-71,16,-35,16,16,-36,-127,-126,-302,-132,-138,-129,16,16,-148,16,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,16,16,16,16,16,16,16,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,16,-196,16,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'RBRACE':([46,84,85,97,122,128,131,133,136,137,138,143,155,158,159,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,188,189,219,221,223,224,226,228,229,230,233,234,237,239,241,242,244,245,248,249,251,254,288,289,290,307,309,310,316,317,318,319,320,322,347,348,353,354,358,359,361,367,368,372,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,399,400,401,405,410,411,412,415,416,422,439,440,441,449,457,461,462,464,465,476,483,484,488,493,494,498,499,502,503,512,513,514,519,520,],[-68,-301,-81,-69,-288,-140,219,-137,-154,-151,219,-303,-230,-232,-303,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-171,-216,-302,-138,219,219,-152,219,219,-6,-193,-77,-5,-75,-74,-76,-78,-72,-73,-192,-194,219,-22,-21,219,-254,-256,-251,-273,-274,-300,-298,-255,-257,-139,-229,-155,-153,-195,-211,-209,-212,-208,-196,-241,-237,-233,-246,-240,-249,-238,-248,-244,-236,-239,-250,-235,-243,-242,-234,-245,-247,-174,219,-172,-217,-269,-270,-268,-271,-272,-281,-210,-197,-199,-207,-173,-266,-267,-258,-252,-198,-231,-175,219,-203,-200,-202,-282,219,-275,-276,-201,-204,-206,-205,]),'ELSE':([46,97,219,234,239,241,242,244,245,248,359,361,367,368,372,439,440,441,449,476,493,494,498,513,514,519,520,],[-68,-69,-302,-77,-75,-74,-76,-78,-72,-73,-211,-209,-212,-208,-196,-210,-197,-199,-207,-198,-203,506,-202,-201,-204,-206,-205,]),'FOR':([46,84,85,97,143,219,230,233,234,239,241,242,244,245,248,249,250,251,358,359,361,362,363,367,368,372,439,440,441,442,449,476,477,478,482,493,494,498,506,513,514,516,518,519,520,],[-68,-301,-81,-69,252,-302,252,-193,-77,-75,-74,-76,-78,-72,-73,-192,252,-194,-195,-211,-209,252,252,-212,-208,-196,-210,-197,-199,252,-207,-198,252,252,252,-203,-200,-202,252,-201,-204,252,252,-206,-205,]),'MODEQUAL':([122,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,296,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'INT':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,58,60,61,62,63,66,67,72,75,78,79,81,82,83,84,85,87,88,89,92,93,94,95,96,97,100,104,105,107,109,117,123,128,129,130,131,132,133,134,135,142,143,144,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[19,-62,-101,-113,-102,-99,-112,-66,-114,-303,19,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,19,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,19,-96,19,-107,-63,-160,-53,-10,-84,-9,-90,-87,19,-89,-88,19,19,-130,-131,-301,-81,-146,-147,19,19,19,-82,-86,-85,-69,-92,-61,-30,-161,19,19,19,-140,19,-128,19,19,-137,19,19,-70,19,-83,-71,19,-35,19,19,-36,-127,-126,-302,-132,-138,-129,19,19,-148,19,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,19,19,19,19,19,19,19,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,19,-196,19,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'VOLATILE':([0,1,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,57,58,60,66,67,72,75,78,79,80,81,82,83,84,85,87,88,89,92,94,97,100,104,105,107,109,110,117,125,127,128,129,130,131,132,133,134,135,142,143,144,150,152,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,336,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,429,431,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[24,-62,-101,-113,-102,24,-99,-112,-66,-114,24,24,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,24,-215,24,-93,-97,-104,-95,-111,24,-68,-116,-108,-96,24,-107,-63,24,-160,-53,-90,-87,24,-89,-88,24,24,24,-130,-131,-301,-81,-146,-147,24,24,-82,-69,-92,-61,-30,-161,24,24,24,24,24,-140,24,-128,24,24,-137,24,24,-70,24,-83,24,24,-71,24,-35,24,24,-36,-127,-126,-302,-132,-138,-129,24,24,-148,24,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,24,24,24,24,24,24,24,24,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,24,-196,24,24,24,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'PPPRAGMASTR':([46,],[97,]),'INT_CONST_HEX':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,125,126,127,143,145,150,151,152,156,157,159,161,164,165,166,176,177,182,184,187,194,205,207,210,216,219,225,230,231,233,234,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,501,502,506,508,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,179,-303,179,-28,179,179,-303,179,-28,-262,-260,-303,-261,179,-264,179,-259,-263,179,179,179,179,179,-260,179,179,-302,179,179,179,-193,-77,179,-75,-74,-76,-78,-72,-73,-192,179,-194,179,-260,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,-12,179,179,-11,-227,-220,-222,-228,-225,-219,179,-223,-226,-218,-224,-221,179,179,179,179,179,-260,-303,179,179,-195,-211,-209,179,179,179,179,-212,-208,179,179,-196,179,-303,-176,179,-303,179,-28,-260,-210,-197,-199,179,179,-207,179,179,-11,179,179,-303,179,-260,179,-198,179,179,179,179,179,-203,-200,179,-202,179,-303,179,179,-201,-204,179,179,-206,-205,]),'XOREQUAL':([122,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,299,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'DIVIDE':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,282,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,282,282,-233,282,282,282,282,282,282,282,282,282,-235,282,282,-234,282,282,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'LBRACE':([15,21,25,26,32,36,37,46,60,72,82,83,84,85,87,88,90,91,92,94,97,105,112,113,143,144,145,159,190,204,219,230,233,234,239,241,242,244,245,248,249,250,251,285,287,289,343,344,358,359,361,362,363,367,368,372,400,404,421,435,436,439,440,441,442,449,455,456,458,459,464,466,476,477,478,482,493,494,498,502,506,513,514,516,518,519,520,],[-52,-29,-135,84,-136,84,-303,-68,-53,-303,84,84,-301,-81,84,84,-7,84,-8,-82,-69,-30,84,84,84,-83,84,-303,-35,-36,-302,84,-193,-77,-75,-74,-76,-78,-72,-73,-192,84,-194,-12,84,-11,-34,-31,-195,-211,-209,84,84,-212,-208,-196,-303,-176,84,-32,-33,-210,-197,-199,84,-207,84,-11,84,84,84,-303,-198,84,84,84,-203,-200,-202,-303,84,-201,-204,84,84,-206,-205,]),'ENUM':([0,1,10,13,15,17,20,21,23,24,28,30,31,34,37,39,40,41,43,45,46,47,49,50,51,54,58,60,61,62,63,72,79,81,84,85,92,93,94,95,96,97,104,105,107,109,123,128,131,132,133,134,135,142,143,144,154,187,190,191,203,204,219,221,223,224,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,335,337,343,344,347,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[36,-62,-66,-303,-52,-98,-60,-29,-64,-117,-65,-115,-67,-94,36,-303,-93,-97,-95,-303,-68,-116,36,-96,36,-63,-160,-53,-10,-84,-9,36,36,36,-301,-81,36,36,-82,-86,-85,-69,-61,-30,-161,36,36,-140,36,36,-137,36,36,-70,36,-83,-71,36,-35,36,36,-36,-302,-138,36,36,36,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,36,36,36,36,36,36,-34,-31,-139,-195,-211,-209,-212,-208,36,-196,36,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'GT':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,279,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-241,-237,-233,279,-240,279,-238,279,279,-236,-239,279,-235,-243,-242,-234,279,279,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'WSTRING_LITERAL':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,125,126,127,143,145,150,151,152,156,157,159,161,164,165,166,168,172,176,177,182,184,187,194,205,207,210,216,219,225,230,231,233,234,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,318,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,501,502,506,508,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,168,-303,168,-28,168,168,-303,168,-28,-262,-260,-303,-261,168,-264,168,-299,318,-259,-263,168,168,168,168,168,-260,168,168,-302,168,168,168,-193,-77,168,-75,-74,-76,-78,-72,-73,-192,168,-194,168,-260,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,-12,168,168,-11,-227,-220,-222,-228,-225,-219,168,-223,-226,-218,-224,-221,168,168,168,168,-300,168,-260,-303,168,168,-195,-211,-209,168,168,168,168,-212,-208,168,168,-196,168,-303,-176,168,-303,168,-28,-260,-210,-197,-199,168,168,-207,168,168,-11,168,168,-303,168,-260,168,-198,168,168,168,168,168,-203,-200,168,-202,168,-303,168,168,-201,-204,168,168,-206,-205,]),'REGISTER':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,60,66,67,72,75,78,79,82,83,84,85,87,88,89,92,94,97,100,104,105,109,117,142,143,144,154,190,191,203,204,219,220,227,230,233,234,239,241,242,244,245,248,249,251,335,337,343,344,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[34,-62,-101,-113,-102,-99,-112,-66,-114,34,34,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,34,-215,34,-93,-97,-104,-95,-111,34,-68,-116,-108,-96,34,-107,-63,-53,-90,-87,34,-89,-88,34,-130,-131,-301,-81,-146,-147,34,34,-82,-69,-92,-61,-30,34,34,-70,34,-83,-71,-35,34,34,-36,-302,-132,-148,34,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,34,34,-34,-31,-133,-134,-149,-150,-195,-211,-209,-212,-208,34,-196,34,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'CONST':([0,1,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,57,58,60,66,67,72,75,78,79,80,81,82,83,84,85,87,88,89,92,94,97,100,104,105,107,109,110,117,125,127,128,129,130,131,132,133,134,135,142,143,144,150,152,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,336,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,429,431,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[30,-62,-101,-113,-102,30,-99,-112,-66,-114,30,30,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,30,-215,30,-93,-97,-104,-95,-111,30,-68,-116,-108,-96,30,-107,-63,30,-160,-53,-90,-87,30,-89,-88,30,30,30,-130,-131,-301,-81,-146,-147,30,30,-82,-69,-92,-61,-30,-161,30,30,30,30,30,-140,30,-128,30,30,-137,30,30,-70,30,-83,30,30,-71,30,-35,30,30,-36,-127,-126,-302,-132,-138,-129,30,30,-148,30,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,30,30,30,30,30,30,30,30,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,30,-196,30,30,30,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'LBRACKET':([3,4,5,7,8,9,12,15,16,17,18,19,21,22,24,27,29,30,34,35,38,40,41,42,43,44,47,48,50,53,56,57,58,59,60,65,66,67,74,75,78,82,83,84,87,88,100,105,106,107,114,117,122,130,147,159,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,190,191,198,199,200,201,204,211,215,219,220,222,227,235,260,261,291,293,316,317,318,319,323,328,333,334,343,344,351,352,355,356,376,377,400,402,403,410,411,412,415,416,418,419,422,423,424,425,426,435,436,451,452,454,461,462,466,467,468,473,474,475,485,486,490,491,499,502,503,504,505,510,512,517,],[-101,-113,-102,-303,-99,-112,-114,80,-105,-98,-91,-103,-29,-109,-117,-100,-106,-115,-94,-110,-215,-93,-97,-104,-95,-111,-116,-108,-96,-107,-158,-28,-160,-27,80,110,-90,-87,-37,-89,-88,-130,-131,-301,-146,-147,-92,-30,-159,-161,110,194,-288,-128,-38,286,-292,-299,-265,312,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-35,194,-45,194,336,338,-36,-127,-126,-302,-132,-129,-148,-288,-43,-44,-177,286,-273,-274,-300,-298,194,194,338,336,-34,-31,-133,-134,-149,-150,-42,-39,286,-180,-178,-269,-270,-268,-271,-272,194,194,-281,-185,-191,-189,-187,-32,-33,-40,-41,-179,-266,-267,286,-50,-51,-190,-188,-186,501,-283,-49,-46,-282,286,-275,-47,-48,-284,-276,-285,]),'UNION':([0,1,10,13,15,17,20,21,23,24,28,30,31,34,37,39,40,41,43,45,46,47,49,50,51,54,58,60,61,62,63,72,79,81,84,85,92,93,94,95,96,97,104,105,107,109,123,128,131,132,133,134,135,142,143,144,154,187,190,191,203,204,219,221,223,224,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,335,337,343,344,347,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[32,-62,-66,-303,-52,-98,-60,-29,-64,-117,-65,-115,-67,-94,32,-303,-93,-97,-95,-303,-68,-116,32,-96,32,-63,-160,-53,-10,-84,-9,32,32,32,-301,-81,32,32,-82,-86,-85,-69,-61,-30,-161,32,32,-140,32,32,-137,32,32,-70,32,-83,-71,32,-35,32,32,-36,-302,-138,32,32,32,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,32,32,32,32,32,32,-34,-31,-139,-195,-211,-209,-212,-208,32,-196,32,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'LAND':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,271,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-241,-237,-233,-246,-240,-249,-238,-248,-244,-236,-239,271,-235,-243,-242,-234,-245,-247,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'GOTO':([46,84,85,97,143,219,230,233,234,239,241,242,244,245,248,249,250,251,358,359,361,362,363,367,368,372,439,440,441,442,449,476,477,478,482,493,494,498,506,513,514,516,518,519,520,],[-68,-301,-81,-69,255,-302,255,-193,-77,-75,-74,-76,-78,-72,-73,-192,255,-194,-195,-211,-209,255,255,-212,-208,-196,-210,-197,-199,255,-207,-198,255,255,255,-203,-200,-202,255,-201,-204,255,255,-206,-205,]),'RESTRICT':([0,1,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,57,58,60,66,67,72,75,78,79,80,81,82,83,84,85,87,88,89,92,94,97,100,104,105,107,109,110,117,125,127,128,129,130,131,132,133,134,135,142,143,144,150,152,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,336,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,429,431,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[47,-62,-101,-113,-102,47,-99,-112,-66,-114,47,47,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,47,-215,47,-93,-97,-104,-95,-111,47,-68,-116,-108,-96,47,-107,-63,47,-160,-53,-90,-87,47,-89,-88,47,47,47,-130,-131,-301,-81,-146,-147,47,47,-82,-69,-92,-61,-30,-161,47,47,47,47,47,-140,47,-128,47,47,-137,47,47,-70,47,-83,47,47,-71,47,-35,47,47,-36,-127,-126,-302,-132,-138,-129,47,47,-148,47,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,47,47,47,47,47,47,47,47,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,47,-196,47,47,47,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'ARROW':([122,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,316,317,318,319,410,411,412,415,416,422,461,462,499,503,512,],[-288,-292,-299,-265,315,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-273,-274,-300,-298,-269,-270,-268,-271,-272,-281,-266,-267,-282,-275,-276,]),'WCHAR_CONST':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,125,126,127,143,145,150,151,152,156,157,159,161,164,165,166,176,177,182,184,187,194,205,207,210,216,219,225,230,231,233,234,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,501,502,506,508,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,174,-303,174,-28,174,174,-303,174,-28,-262,-260,-303,-261,174,-264,174,-259,-263,174,174,174,174,174,-260,174,174,-302,174,174,174,-193,-77,174,-75,-74,-76,-78,-72,-73,-192,174,-194,174,-260,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-12,174,174,-11,-227,-220,-222,-228,-225,-219,174,-223,-226,-218,-224,-221,174,174,174,174,174,-260,-303,174,174,-195,-211,-209,174,174,174,174,-212,-208,174,174,-196,174,-303,-176,174,-303,174,-28,-260,-210,-197,-199,174,174,-207,174,174,-11,174,174,-303,174,-260,174,-198,174,174,174,174,174,-203,-200,174,-202,174,-303,174,174,-201,-204,174,174,-206,-205,]),'EQ':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,274,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-241,-237,-233,274,-240,274,-238,274,-244,-236,-239,274,-235,-243,-242,-234,-245,274,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'LSHIFTEQUAL':([122,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,298,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'LSHIFT':([122,155,158,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,276,-232,-251,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,276,-237,-233,276,276,276,-238,276,276,-236,-239,276,-235,276,276,-234,276,276,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'LONG':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,58,60,61,62,63,66,67,72,75,78,79,81,82,83,84,85,87,88,89,92,93,94,95,96,97,100,104,105,107,109,117,123,128,129,130,131,132,133,134,135,142,143,144,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[42,-62,-101,-113,-102,-99,-112,-66,-114,-303,42,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,42,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,42,-96,42,-107,-63,-160,-53,-10,-84,-9,-90,-87,42,-89,-88,42,42,-130,-131,-301,-81,-146,-147,42,42,42,-82,-86,-85,-69,-92,-61,-30,-161,42,42,42,-140,42,-128,42,42,-137,42,42,-70,42,-83,-71,42,-35,42,42,-36,-127,-126,-302,-132,-138,-129,42,42,-148,42,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,42,42,42,42,42,42,42,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,42,-196,42,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'STATIC':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,58,60,66,67,72,75,78,79,80,82,83,84,85,87,88,89,92,94,97,100,104,105,107,109,110,117,127,142,143,144,152,154,190,191,203,204,219,220,227,230,233,234,239,241,242,244,245,248,249,251,335,336,337,343,344,351,352,355,356,358,359,361,367,368,370,372,418,431,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[43,-62,-101,-113,-102,-99,-112,-66,-114,43,43,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,43,-215,43,-93,-97,-104,-95,-111,43,-68,-116,-108,-96,43,-107,-63,-160,-53,-90,-87,43,-89,-88,43,125,-130,-131,-301,-81,-146,-147,43,43,-82,-69,-92,-61,-30,-161,43,150,43,210,-70,43,-83,265,-71,-35,43,43,-36,-302,-132,-148,43,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,43,429,43,-34,-31,-133,-134,-149,-150,-195,-211,-209,-212,-208,43,-196,43,472,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'SWITCH':([46,84,85,97,143,219,230,233,234,239,241,242,244,245,248,249,250,251,358,359,361,362,363,367,368,372,439,440,441,442,449,476,477,478,482,493,494,498,506,513,514,516,518,519,520,],[-68,-301,-81,-69,256,-302,256,-193,-77,-75,-74,-76,-78,-72,-73,-192,256,-194,-195,-211,-209,256,256,-212,-208,-196,-210,-197,-199,256,-207,-198,256,256,256,-203,-200,-202,256,-201,-204,256,256,-206,-205,]),'MINUSMINUS':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,122,125,126,127,143,145,150,151,152,156,157,159,161,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,194,205,207,210,216,219,225,230,231,233,234,235,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,316,317,318,319,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,410,411,412,415,416,421,422,429,430,431,433,439,440,441,442,447,449,453,455,456,459,461,462,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,499,501,502,503,506,508,512,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,182,-288,-303,182,-28,182,182,-303,182,-28,-262,-260,-303,-261,-292,182,-264,182,-299,-265,317,-290,-280,-293,-296,-278,-259,-263,-289,-291,-279,-294,182,-297,182,-295,-277,182,182,182,-260,182,182,-302,182,182,182,-193,-77,-288,182,-75,-74,-76,-78,-72,-73,-192,182,-194,182,-260,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,-12,182,182,-11,-227,-220,-222,-228,-225,-219,182,-223,-226,-218,-224,-221,182,182,182,182,-273,-274,-300,-298,182,-260,-303,182,182,-195,-211,-209,182,182,182,182,-212,-208,182,182,-196,182,-303,-176,-269,-270,-268,-271,-272,182,-281,-303,182,-28,-260,-210,-197,-199,182,182,-207,182,182,-11,182,-266,-267,182,-303,182,-260,182,-198,182,182,182,182,182,-203,-200,182,-202,-282,182,-303,-275,182,182,-276,-201,-204,182,182,-206,-205,]),'STRING_LITERAL':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,125,126,127,143,145,150,151,152,156,157,159,161,164,165,166,176,177,180,182,183,184,187,194,205,207,210,216,219,225,230,231,233,234,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,319,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,501,502,506,508,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,183,-303,183,-28,183,183,-303,183,-28,-262,-260,-303,-261,183,-264,183,-259,-263,319,183,-297,183,183,183,183,-260,183,183,-302,183,183,183,-193,-77,183,-75,-74,-76,-78,-72,-73,-192,183,-194,183,-260,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,183,-12,183,183,-11,-227,-220,-222,-228,-225,-219,183,-223,-226,-218,-224,-221,183,183,183,183,-298,183,-260,-303,183,183,-195,-211,-209,183,183,183,183,-212,-208,183,183,-196,183,-303,-176,183,-303,183,-28,-260,-210,-197,-199,183,183,-207,183,183,-11,183,183,-303,183,-260,183,-198,183,183,183,183,183,-203,-200,183,-202,183,-303,183,183,-201,-204,183,183,-206,-205,]),'PLUSEQUAL':([122,160,163,168,169,170,171,172,173,174,175,178,179,180,181,183,185,186,219,235,307,309,310,316,317,318,319,320,322,410,411,412,415,416,422,461,462,464,465,499,503,512,],[-288,301,-292,-299,-265,-253,-290,-280,-293,-296,-278,-289,-291,-279,-294,-297,-295,-277,-302,-288,-254,-256,-251,-273,-274,-300,-298,-255,-257,-269,-270,-268,-271,-272,-281,-266,-267,-258,-252,-282,-275,-276,]),'_COMPLEX':([0,1,3,4,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,58,60,61,62,63,66,67,72,75,78,79,81,82,83,84,85,87,88,89,92,93,94,95,96,97,100,104,105,107,109,117,123,128,129,130,131,132,133,134,135,142,143,144,154,187,190,191,203,204,211,215,219,220,221,222,223,224,227,230,233,234,239,241,242,244,245,248,249,251,306,308,311,321,323,335,337,343,344,347,351,352,355,356,358,359,361,367,368,370,372,418,435,436,439,440,441,449,476,493,494,498,513,514,519,520,],[53,-62,-101,-113,-102,-99,-112,-66,-114,-303,53,-52,-105,-98,-91,-103,-60,-29,-109,-64,-117,-100,-65,-106,-115,-67,-94,-110,53,-215,-303,-93,-97,-104,-95,-111,-303,-68,-116,-108,53,-96,53,-107,-63,-160,-53,-10,-84,-9,-90,-87,53,-89,-88,53,53,-130,-131,-301,-81,-146,-147,53,53,53,-82,-86,-85,-69,-92,-61,-30,-161,53,53,53,-140,53,-128,53,53,-137,53,53,-70,53,-83,-71,53,-35,53,53,-36,-127,-126,-302,-132,-138,-129,53,53,-148,53,-193,-77,-75,-74,-76,-78,-72,-73,-192,-194,53,53,53,53,53,53,53,-34,-31,-139,-133,-134,-149,-150,-195,-211,-209,-212,-208,53,-196,53,-32,-33,-210,-197,-199,-207,-198,-203,-200,-202,-201,-204,-206,-205,]),'DEFAULT':([46,84,85,97,143,219,230,233,234,239,241,242,244,245,248,249,250,251,358,359,361,362,363,367,368,372,439,440,441,442,449,476,477,478,482,493,494,498,506,513,514,516,518,519,520,],[-68,-301,-81,-69,236,-302,236,-193,-77,-75,-74,-76,-78,-72,-73,-192,236,-194,-195,-211,-209,236,236,-212,-208,-196,-210,-197,-199,236,-207,-198,236,236,236,-203,-200,-202,236,-201,-204,236,236,-206,-205,]),'CHAR_CONST':([24,30,46,47,57,58,59,80,84,85,97,107,110,113,125,126,127,143,145,150,151,152,156,157,159,161,164,165,166,176,177,182,184,187,194,205,207,210,216,219,225,230,231,233,234,238,239,241,242,244,245,248,249,250,251,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,314,321,331,336,338,346,358,359,361,362,363,365,366,367,368,370,371,372,374,400,404,421,429,430,431,433,439,440,441,442,447,449,453,455,456,459,463,466,469,470,472,476,477,478,479,480,482,493,494,497,498,501,502,506,508,513,514,516,518,519,520,],[-117,-115,-68,-116,-28,-160,-27,-303,-301,-81,-69,-161,-303,185,-303,185,-28,185,185,-303,185,-28,-262,-260,-303,-261,185,-264,185,-259,-263,185,185,185,185,185,-260,185,185,-302,185,185,185,-193,-77,185,-75,-74,-76,-78,-72,-73,-192,185,-194,185,-260,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,-12,185,185,-11,-227,-220,-222,-228,-225,-219,185,-223,-226,-218,-224,-221,185,185,185,185,185,-260,-303,185,185,-195,-211,-209,185,185,185,185,-212,-208,185,185,-196,185,-303,-176,185,-303,185,-28,-260,-210,-197,-199,185,185,-207,185,185,-11,185,185,-303,185,-260,185,-198,185,185,185,185,185,-203,-200,185,-202,185,-303,185,185,-201,-204,185,185,-206,-205,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'binary_expression':([113,126,143,145,151,187,194,205,210,216,225,230,231,238,250,262,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,300,306,308,312,314,321,338,346,362,363,365,366,370,371,374,430,442,447,453,455,463,469,472,477,478,479,480,482,497,501,506,508,516,518,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,379,380,381,382,383,384,385,386,387,388,389,390,391,392,155,394,395,396,397,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'struct_or_union_specifier':([0,37,49,51,72,79,81,92,93,109,123,131,132,134,135,143,187,191,203,223,224,230,306,308,311,321,335,337,370,418,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'block_item_list':([143,],[230,]),'enum_specifier':([0,37,49,51,72,79,81,92,93,109,123,131,132,134,135,143,187,191,203,223,224,230,306,308,311,321,335,337,370,418,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'parameter_type_list':([79,109,191,335,337,418,],[115,148,326,427,326,326,]),'cast_expression':([113,126,143,145,151,166,187,194,205,210,216,225,230,231,238,250,262,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,300,306,308,312,314,321,338,346,362,363,365,366,370,371,374,421,430,442,447,453,455,459,463,469,472,477,478,479,480,482,497,501,506,508,516,518,],[158,158,158,158,158,309,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,465,158,158,158,158,158,465,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'pointer':([0,6,14,49,51,56,64,89,93,111,117,129,146,191,323,350,418,],[11,11,76,11,11,106,76,76,11,76,199,76,76,328,419,76,419,]),'type_specifier_no_typeid':([0,14,37,49,51,72,79,81,89,92,93,109,117,123,129,131,132,134,135,143,187,191,203,223,224,230,306,308,311,321,323,335,337,370,418,],[12,66,12,12,12,12,12,12,66,12,12,12,66,12,215,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,215,12,12,12,12,]),'statement':([143,230,250,362,363,442,477,478,482,506,516,518,],[233,233,369,440,441,476,493,494,498,513,519,520,]),'type_specifier':([0,37,49,51,72,79,81,92,93,109,123,131,132,134,135,143,187,191,203,223,224,230,306,308,311,321,335,337,370,418,],[18,18,100,18,18,18,130,18,100,18,100,130,222,130,130,18,130,18,18,130,130,18,130,130,130,130,18,18,18,18,]),'constant':([113,126,143,145,151,164,166,182,184,187,194,205,210,216,225,230,231,238,250,262,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,300,306,308,312,314,321,338,346,362,363,365,366,370,371,374,421,430,442,447,453,455,459,463,469,472,477,478,479,480,482,497,501,506,508,516,518,],[175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,]),'designation_opt':([159,400,466,502,],[287,455,287,455,]),'jump_statement':([143,230,250,362,363,442,477,478,482,506,516,518,],[234,234,234,234,234,234,234,234,234,234,234,234,]),'designation':([159,400,466,502,],[285,285,285,285,]),'identifier':([79,109,113,126,143,145,151,164,166,182,184,187,194,202,205,210,216,225,230,231,238,250,262,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,292,300,306,308,312,314,321,335,338,346,362,363,365,366,370,371,374,421,430,442,447,453,455,459,460,463,469,472,477,478,479,480,482,497,500,501,506,508,516,518,],[118,118,186,186,186,186,186,186,186,186,186,186,186,339,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,402,186,186,186,186,186,186,118,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,486,186,186,186,186,186,186,186,186,186,510,186,186,186,186,186,]),'empty':([0,7,13,14,37,39,45,49,72,79,80,89,93,109,110,117,125,126,129,143,150,151,159,191,194,230,250,323,335,336,337,338,362,363,370,400,418,429,430,442,447,466,477,478,480,482,497,502,506,508,516,518,],[2,59,63,71,90,63,63,98,90,119,59,71,98,119,59,196,59,206,218,237,59,206,289,330,206,357,357,196,119,59,330,206,357,357,357,456,330,59,206,357,357,456,357,357,357,357,357,456,357,357,357,357,]),'identifier_list':([79,109,335,],[120,120,120,]),'pppragma_directive':([0,51,143,230,250,362,363,442,477,478,482,506,516,518,],[28,28,244,244,244,244,244,244,244,244,244,244,244,244,]),'init_declarator_list_opt':([14,89,],[70,70,]),'struct_declaration':([81,131,134,135,223,224,],[133,221,133,133,221,221,]),'brace_open':([26,36,82,83,87,88,91,112,113,143,145,230,250,287,362,363,421,442,455,458,459,464,477,478,482,506,516,518,],[81,86,134,135,139,140,143,143,159,143,159,143,143,159,143,143,466,143,159,466,466,466,143,143,143,143,143,143,]),'postfix_expression':([113,126,143,145,151,164,166,182,184,187,194,205,210,216,225,230,231,238,250,262,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,300,306,308,312,314,321,338,346,362,363,365,366,370,371,374,421,430,442,447,453,455,459,463,469,472,477,478,479,480,482,497,501,506,508,516,518,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'compound_statement':([91,112,143,230,250,362,363,442,477,478,482,506,516,518,],[142,154,241,241,241,241,241,241,241,241,241,241,241,241,]),'iteration_statement':([143,230,250,362,363,442,477,478,482,506,516,518,],[242,242,242,242,242,242,242,242,242,242,242,242,]),'id_declarator':([0,6,14,49,51,64,89,93,111,117,129,146,191,350,],[37,55,72,101,37,55,141,101,141,197,141,141,55,141,]),'specifier_qualifier_list':([81,131,134,135,187,223,224,306,308,311,321,],[129,129,129,129,323,129,129,323,323,323,323,]),'selection_statement':([143,230,250,362,363,442,477,478,482,506,516,518,],[239,239,239,239,239,239,239,239,239,239,239,239,]),'labeled_statement':([143,230,250,362,363,442,477,478,482,506,516,518,],[245,245,245,245,245,245,245,245,245,245,245,245,]),'expression_opt':([143,230,250,362,363,370,442,447,477,478,480,482,497,506,508,516,518,],[246,246,246,246,246,446,246,481,246,246,496,246,509,246,515,246,246,]),'abstract_declarator':([117,191,323,418,],[192,327,192,327,]),'id_init_declarator_list':([49,93,],[102,102,]),'brace_close':([131,138,223,224,228,229,254,290,400,488,502,],[220,227,351,352,355,356,372,401,457,503,512,]),'direct_typeid_noparen_declarator':([117,199,],[200,334,]),'typedef_name':([0,37,49,51,72,79,81,92,93,109,123,131,132,134,135,143,187,191,203,223,224,230,306,308,311,321,335,337,370,418,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'id_init_declarator':([49,93,],[103,103,]),'declarator':([14,89,111,129,146,350,],[73,73,73,212,73,212,]),'designator_list':([159,400,466,502,],[293,293,293,293,]),'init_declarator':([14,89,111,146,],[77,77,153,259,]),'type_name':([187,306,308,311,321,],[324,406,407,408,417,]),'enumerator_list':([86,139,140,],[138,228,229,]),'expression_statement':([143,230,250,362,363,442,477,478,482,506,516,518,],[248,248,248,248,248,248,248,248,248,248,248,248,]),'designator':([159,293,400,466,502,],[291,403,291,291,291,]),'direct_id_declarator':([0,6,11,14,49,51,64,76,89,93,111,117,129,146,191,199,328,350,],[15,15,60,15,15,15,15,60,15,15,15,15,15,15,15,60,60,15,]),'type_qualifier_list':([7,80,81,110,125,131,134,135,150,187,223,224,306,308,311,321,336,429,],[57,127,132,152,57,132,132,132,57,132,132,132,132,132,132,132,431,57,]),'identifier_list_opt':([79,109,335,],[124,149,428,]),'struct_declarator_list':([129,],[217,]),'assignment_expression_opt':([126,151,194,338,430,],[208,264,332,434,471,]),'declaration':([0,37,51,72,92,143,230,370,],[54,94,54,94,144,249,249,447,]),'conditional_expression':([113,126,143,145,151,187,194,205,210,216,225,230,231,238,250,262,265,280,286,287,300,306,308,312,314,321,338,346,362,363,365,366,370,371,374,430,442,447,453,455,463,469,472,477,478,479,480,482,497,501,506,508,516,518,],[189,189,189,189,189,189,189,189,189,348,348,189,189,348,189,189,189,189,348,189,189,189,189,189,189,189,189,348,189,189,189,189,189,189,189,189,189,189,483,189,189,189,189,189,189,189,189,189,189,189,189,189,189,189,]),'function_definition':([0,51,],[1,1,]),'declaration_specifiers_no_type':([0,13,37,39,45,51,72,79,92,109,143,191,203,230,335,337,370,418,],[49,61,93,61,61,49,93,123,93,123,93,123,123,93,123,123,93,123,]),'declaration_specifiers_no_type_opt':([13,39,45,],[62,95,96,]),'decl_body':([0,37,51,72,92,143,230,370,],[33,33,33,33,33,33,33,33,]),'parameter_declaration':([79,109,191,203,335,337,418,],[116,116,116,341,116,116,116,]),'direct_typeid_declarator':([14,64,76,89,111,129,146,350,],[65,65,114,65,65,65,65,65,]),'offsetof_member_designator':([460,],[485,]),'typeid_noparen_declarator':([117,],[193,]),'block_item':([143,230,],[251,358,]),'type_qualifier':([0,7,13,14,37,39,45,51,57,72,79,80,81,89,92,109,110,117,125,127,129,131,132,134,135,143,150,152,187,191,203,223,224,230,306,308,311,321,323,335,336,337,370,418,429,431,],[13,58,13,67,13,13,13,13,107,13,13,58,58,67,13,13,58,67,58,107,211,58,107,58,58,13,58,107,58,13,13,58,58,13,58,58,58,58,211,13,58,13,13,13,58,107,]),'declaration_specifiers':([0,37,51,72,79,92,109,143,191,203,230,335,337,370,418,],[14,89,14,89,117,89,117,89,117,117,89,117,117,89,117,]),'id_init_declarator_list_opt':([49,93,],[99,99,]),'external_declaration':([0,51,],[20,104,]),'enumerator':([86,139,140,226,],[137,137,137,354,]),'pp_directive':([0,51,],[23,23,]),'assignment_operator':([160,],[300,]),'expression':([143,187,230,231,250,280,306,308,312,321,362,363,365,366,370,374,442,447,477,478,479,480,482,497,501,506,508,516,518,],[253,325,253,360,253,393,325,325,409,325,253,253,443,444,253,450,253,253,253,253,495,253,253,253,511,253,253,253,253,]),'init_declarator_list':([14,89,],[68,68,]),'declaration_list_opt':([37,72,],[91,112,]),'initializer_list_opt':([159,],[290,]),'abstract_declarator_opt':([117,323,],[195,420,]),'struct_or_union':([0,37,49,51,72,79,81,92,93,109,123,131,132,134,135,143,187,191,203,223,224,230,306,308,311,321,335,337,370,418,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'typeid_declarator':([14,64,89,111,129,146,350,],[69,108,69,69,69,69,69,]),'declaration_list':([37,72,],[92,92,]),'primary_expression':([113,126,143,145,151,164,166,182,184,187,194,205,210,216,225,230,231,238,250,262,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,300,306,308,312,314,321,338,346,362,363,365,366,370,371,374,421,430,442,447,453,455,459,463,469,472,477,478,479,480,482,497,501,506,508,516,518,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,]),'parameter_type_list_opt':([191,337,418,],[329,432,329,]),'argument_expression_list':([314,],[413,]),'parameter_list':([79,109,191,335,337,418,],[121,121,121,121,121,121,]),'initializer_list':([159,466,],[288,488,]),'block_item_list_opt':([143,],[254,]),'unary_expression':([113,126,143,145,151,164,166,182,184,187,194,205,210,216,225,230,231,238,250,262,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,300,306,308,312,314,321,338,346,362,363,365,366,370,371,374,421,430,442,447,453,455,459,463,469,472,477,478,479,480,482,497,501,506,508,516,518,],[160,160,160,160,160,307,310,320,322,160,160,160,160,310,310,160,160,310,160,160,160,310,310,310,310,310,310,310,310,310,310,310,310,310,310,160,310,310,310,310,310,160,160,160,160,160,160,160,160,310,160,160,160,160,160,160,160,310,160,160,160,310,160,310,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'unified_wstring_literal':([113,126,143,145,151,164,166,182,184,187,194,205,210,216,225,230,231,238,250,262,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,300,306,308,312,314,321,338,346,362,363,365,366,370,371,374,421,430,442,447,453,455,459,463,469,472,477,478,479,480,482,497,501,506,508,516,518,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'type_qualifier_list_opt':([7,80,110,125,150,336,429,],[56,126,151,205,262,430,469,]),'translation_unit':([0,],[51,]),'initializer':([113,145,287,455,],[162,258,399,484,]),'function_specifier':([0,13,14,37,39,45,51,72,79,89,92,109,117,143,191,203,230,335,337,370,418,],[39,39,75,39,39,39,39,39,39,75,39,39,75,39,39,39,39,39,39,39,39,]),'struct_declarator':([129,350,],[213,438,]),'constant_expression':([216,225,238,286,346,],[349,353,364,398,437,]),'struct_declarator_list_opt':([129,],[214,]),'unified_string_literal':([113,126,143,145,151,164,166,182,184,187,194,205,210,216,225,230,231,238,250,262,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,300,306,308,312,314,321,338,346,362,363,365,366,370,371,374,421,430,442,447,453,455,459,463,469,472,477,478,479,480,482,497,501,506,508,516,518,],[180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,]),'struct_declaration_list':([81,134,135,],[131,223,224,]),'direct_abstract_declarator':([117,191,199,323,328,418,419,],[201,201,333,201,333,201,333,]),'unary_operator':([113,126,143,145,151,164,166,182,184,187,194,205,210,216,225,230,231,238,250,262,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,300,306,308,312,314,321,338,346,362,363,365,366,370,371,374,421,430,442,447,453,455,459,463,469,472,477,478,479,480,482,497,501,506,508,516,518,],[166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'translation_unit_or_empty':([0,],[52,]),'storage_class_specifier':([0,13,14,37,39,45,51,72,79,89,92,109,117,143,191,203,230,335,337,370,418,],[45,45,78,45,45,45,45,45,45,78,45,45,78,45,45,45,45,45,45,45,45,]),'assignment_expression':([113,126,143,145,151,187,194,205,210,230,231,250,262,265,280,287,300,306,308,312,314,321,338,362,363,365,366,370,371,374,430,442,447,455,463,469,472,477,478,479,480,482,497,501,506,508,516,518,],[188,209,257,188,209,257,209,342,345,257,257,257,375,378,257,188,405,257,257,257,414,257,209,257,257,257,257,257,448,257,209,257,257,188,487,489,492,257,257,257,257,257,257,257,257,257,257,257,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',944),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',952),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',957),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',958),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',966),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',967),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',972),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',977),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',978),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',983),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',984),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',985),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',996),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',997),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1012),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1013),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1124),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1125),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1154),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1155),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1161),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1169),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1170),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1189),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1190),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1201),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1232),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1233),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1242),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1247),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1248),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1256),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1257),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1268),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1276),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1277),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1282),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1283),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1288),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1299),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1307),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1312),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1322),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1326),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1337),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1346),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1357),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1366),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1376),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1387),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1388),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1395),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1396),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1402),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1408),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1412),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1416),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1420),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1424),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1428),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1433),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1437),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1441),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1445),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1450),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1454),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1458),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1462),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1463),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1468),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1475),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1476),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1488),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1492),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1493),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1506),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1507),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1508),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1509),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1510),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1521),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1525),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1526),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1534),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1535),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1536),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1537),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1538),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1560),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1564),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1568),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1572),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1573),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1574),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1579),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1580),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1588),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1589),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1590),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1591),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1592),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1598),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1602),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1606),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1607),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1613),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1614),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1615),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1621),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1622),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1628),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1633),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1637),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1641),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1642),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1647),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1651),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1659),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1660),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1661),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1674),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1675),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1684),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1688),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1689),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1690),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1691),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1697),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1698),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1704),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1705),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1716),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1717),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1727),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1728),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1738),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1744),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1750),
]
