
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'NE':([117,147,149,150,151,153,156,159,160,163,164,165,166,167,170,172,173,176,178,181,215,242,263,264,278,280,282,283,305,310,311,375,376,378,379,381,387,388,389,390,391,392,393,394,395,396,397,398,400,401,402,403,404,405,409,451,453,459,460,501,502,512,],[-288,-253,-290,-251,-279,-293,-232,-295,294,-277,-296,-291,-289,-294,-265,-292,-297,-278,-280,-299,-288,-302,-274,-273,-298,-255,-251,-256,-254,-300,-257,-270,-269,-272,-271,-268,294,-237,294,-240,-236,-235,294,-242,-241,-245,-244,-243,294,-238,-234,-239,294,-233,-281,-266,-267,-252,-258,-282,-275,-276,]),'DEFAULT':([27,57,74,96,119,199,200,201,203,205,207,209,213,216,218,225,227,242,331,332,338,340,341,342,344,349,426,431,433,435,436,471,474,475,476,493,496,497,507,513,514,516,518,519,520,],[-68,-81,-69,-301,204,-78,-194,-74,-77,-76,204,-72,204,-192,-73,-193,-75,-302,-212,204,-195,204,-196,-209,-211,-208,-199,-207,-197,-210,204,204,204,-198,204,-200,-203,-202,204,-204,-201,204,204,-206,-205,]),'MINUS':([24,27,37,43,55,57,71,72,73,74,96,105,106,107,117,119,123,124,129,131,147,148,149,150,151,153,154,155,156,157,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,178,179,181,182,183,193,199,200,201,203,205,207,209,210,213,215,216,218,221,222,225,227,228,229,230,235,242,245,254,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,310,311,312,315,317,321,331,332,335,336,338,339,340,341,342,343,344,348,349,350,352,353,356,357,360,361,370,375,376,378,379,381,387,388,389,390,391,392,393,394,395,396,397,398,400,401,402,403,404,405,409,410,414,415,416,419,426,430,431,433,435,436,445,448,451,452,453,456,457,458,459,460,461,463,464,470,471,472,474,475,476,481,482,493,495,496,497,499,501,502,503,507,508,512,513,514,516,518,519,520,],[-116,-68,-117,-115,-303,-81,-160,-27,-28,-69,-301,148,-303,-28,-288,148,-161,-303,148,148,-253,-262,-290,-251,-279,-293,148,-259,-232,148,-295,286,-264,-260,-277,-296,-291,-289,-294,-261,-265,148,-292,-297,148,-263,-278,-280,148,-299,148,148,148,-78,-194,-74,-77,-76,148,-72,-260,148,-288,-192,-73,148,148,-193,-75,148,-303,-28,-303,-302,148,148,148,-274,-273,148,-224,-219,-225,148,-226,-222,-220,-218,-221,-228,-223,-227,-298,-255,148,-251,-256,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,-254,-300,-257,148,-303,148,-260,-212,148,148,148,-195,148,148,-196,-209,148,-211,148,-208,-260,148,148,-12,-11,148,148,148,-270,-269,-272,-271,-268,286,-237,286,286,-236,-235,286,286,286,286,286,286,286,286,-234,286,286,-233,-281,148,148,-303,-28,-260,-199,148,-207,-197,-210,148,-176,-303,-266,148,-267,148,148,-303,-252,-258,-260,148,148,148,148,148,148,-198,148,148,-11,-200,148,-203,-202,148,-282,-275,-303,148,148,-276,-204,-201,148,148,-206,-205,]),'MODEQUAL':([117,147,149,150,151,153,159,163,164,165,166,167,170,172,173,176,178,181,215,242,263,264,278,280,282,283,305,310,311,375,376,378,379,381,409,451,453,459,460,501,502,512,],[-288,-253,-290,271,-279,-293,-295,-277,-296,-291,-289,-294,-265,-292,-297,-278,-280,-299,-288,-302,-274,-273,-298,-255,-251,-256,-254,-300,-257,-270,-269,-272,-271,-268,-281,-266,-267,-252,-258,-282,-275,-276,]),'RPAREN':([2,3,5,6,7,9,10,11,13,19,21,22,24,25,26,29,30,31,33,35,37,39,40,43,44,46,47,48,52,54,56,68,70,71,72,73,76,78,79,80,82,89,90,97,99,100,102,104,108,109,110,111,112,113,114,116,117,122,123,125,127,130,138,145,147,149,150,151,153,156,159,160,163,164,165,166,167,168,170,172,173,176,178,181,184,185,186,187,188,189,190,191,192,194,195,196,214,223,231,232,238,242,244,250,255,256,258,263,264,265,278,280,282,283,304,305,306,307,308,309,310,311,316,318,319,320,323,324,325,326,327,328,329,330,333,354,355,365,368,369,374,375,376,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,400,401,402,403,404,405,406,407,408,409,411,412,413,417,418,421,422,423,424,425,428,432,434,437,438,439,451,453,459,460,465,466,467,468,469,477,478,483,484,485,486,488,489,492,495,501,502,504,505,508,509,511,512,515,517,],[-104,-52,-107,-97,-110,-98,-103,-112,-102,-215,-94,-111,-116,-303,-113,-108,-109,-101,-93,-96,-117,-99,-105,-115,-100,-91,-114,-95,-106,-29,-303,-53,-158,-160,-27,-28,-54,-88,-89,-87,-37,-90,-92,-147,-146,138,-131,-130,184,-303,196,-18,-169,-162,-164,-17,-288,-159,-161,-303,-55,238,-30,-128,-253,-290,-251,-279,-293,-232,-295,-230,-277,-296,-291,-289,-294,-216,-265,-292,-297,-278,-280,-299,-35,-1,-56,-184,-2,-166,-45,-182,-168,-303,-167,-36,-14,-213,354,355,-38,-302,-148,-127,-126,-129,-132,-274,-273,381,-298,-255,-251,-256,-34,-254,-303,409,410,-31,-300,-257,-303,-303,-57,-183,-23,424,-182,-24,425,-170,-165,-163,-13,-44,-43,-150,-149,-134,-133,-270,-269,-272,-271,453,-268,-286,-217,455,456,-249,-237,-247,-240,-236,-235,-246,-242,-241,-245,-244,-243,-250,-238,-234,-239,-248,-233,-181,-303,-182,-281,460,-32,-33,465,466,469,-189,-187,-185,-191,471,-214,474,476,-42,-39,-266,-267,-252,-258,-50,-51,-188,-186,-190,-40,-41,-287,-283,501,-231,-49,-46,506,-303,-282,-275,-47,-48,-303,516,-284,-276,518,-285,]),'MOD':([117,147,149,150,151,153,156,159,160,163,164,165,166,167,170,172,173,176,178,181,215,242,263,264,278,280,282,283,305,310,311,375,376,378,379,381,387,388,389,390,391,392,393,394,395,396,397,398,400,401,402,403,404,405,409,451,453,459,460,501,502,512,],[-288,-253,-290,-251,-279,-293,-232,-295,290,-277,-296,-291,-289,-294,-265,-292,-297,-278,-280,-299,-288,-302,-274,-273,-298,-255,-251,-256,-254,-300,-257,-270,-269,-272,-271,-268,290,290,290,290,290,-235,290,290,290,290,290,290,290,290,-234,290,290,-233,-281,-266,-267,-252,-258,-282,-275,-276,]),'OFFSETOF':([24,27,37,43,55,57,71,72,73,74,96,105,106,107,119,123,124,129,131,148,154,155,157,161,162,169,171,174,175,179,182,183,193,199,200,201,203,205,207,209,210,213,216,218,221,222,225,227,228,229,230,235,242,245,254,261,265,266,267,268,269,270,271,272,273,274,275,276,277,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,312,315,317,321,331,332,335,336,338,339,340,341,342,343,344,348,349,350,352,353,356,357,360,361,370,410,414,415,416,419,426,430,431,433,435,436,445,448,452,456,457,458,461,463,464,470,471,472,474,475,476,481,482,493,495,496,497,499,503,507,508,513,514,516,518,519,520,],[-116,-68,-117,-115,-303,-81,-160,-27,-28,-69,-301,152,-303,-28,152,-161,-303,152,152,-262,152,-259,152,-264,-260,-261,152,152,-263,152,152,152,152,-78,-194,-74,-77,-76,152,-72,-260,152,-192,-73,152,152,-193,-75,152,-303,-28,-303,-302,152,152,152,152,-224,-219,-225,152,-226,-222,-220,-218,-221,-228,-223,-227,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,-303,152,-260,-212,152,152,152,-195,152,152,-196,-209,152,-211,152,-208,-260,152,152,-12,-11,152,152,152,152,152,-303,-28,-260,-199,152,-207,-197,-210,152,-176,-303,152,152,152,-303,-260,152,152,152,152,152,152,-198,152,152,-11,-200,152,-203,-202,152,-303,152,152,-204,-201,152,152,-206,-205,]),'TYPEDEF':([0,1,2,3,5,6,7,9,10,11,13,14,15,17,18,19,21,22,23,24,26,27,28,29,30,31,32,33,35,37,38,39,40,43,44,45,46,47,48,50,51,52,53,54,56,57,62,64,65,68,74,78,79,80,81,89,90,96,97,99,101,102,104,109,118,119,120,125,138,184,194,196,198,199,200,201,203,205,209,213,216,218,225,227,233,242,244,258,304,309,316,318,331,336,338,341,342,344,349,365,368,369,374,407,412,413,426,431,433,435,475,493,496,497,513,514,519,520,],[6,-63,-104,-52,-107,-97,-110,-98,-103,-112,-102,6,-65,6,6,-215,-94,-111,6,-116,-113,-68,-60,-108,-109,-101,6,-93,-96,-117,-62,-99,-105,-115,-100,6,-91,-114,-95,-66,-64,-106,-67,-29,6,-81,-82,6,6,-53,-69,-88,-89,-87,6,-90,-92,-301,-147,-146,-61,-131,-130,6,-70,6,-83,6,-30,-35,6,-36,6,-78,-194,-74,-77,-76,-72,6,-192,-73,-193,-75,-71,-302,-148,-132,-34,-31,6,6,-212,6,-195,-196,-209,-211,-208,-150,-149,-134,-133,6,-32,-33,-199,-207,-197,-210,-198,-200,-203,-202,-204,-201,-206,-205,]),'UNION':([0,1,3,6,9,14,15,17,18,21,23,24,27,28,33,34,35,37,38,43,45,48,50,51,53,54,56,57,58,59,60,61,62,64,66,68,69,71,74,81,96,101,103,115,118,119,120,123,125,138,139,141,142,143,144,146,174,184,194,196,198,199,200,201,203,205,209,213,216,218,225,227,233,242,247,257,259,279,281,284,304,309,312,316,318,331,336,338,341,342,344,349,371,407,412,413,426,431,433,435,475,493,496,497,513,514,519,520,],[16,-63,-52,-97,-98,-303,-65,-303,16,-94,-303,-116,-68,-60,-93,16,-96,-117,-62,-115,16,-95,-66,-64,-67,-29,16,-81,-9,-10,-85,-84,-82,16,16,-53,-86,-160,-69,16,-301,-61,16,16,-70,16,-83,-161,16,-30,16,-137,16,16,-140,16,16,-35,16,-36,16,-78,-194,-74,-77,-76,-72,16,-192,-73,-193,-75,-71,-302,16,-138,16,16,16,16,-34,-31,16,16,16,-212,16,-195,-196,-209,-211,-208,-139,16,-32,-33,-199,-207,-197,-210,-198,-200,-203,-202,-204,-201,-206,-205,]),'GE':([117,147,149,150,151,153,156,159,160,163,164,165,166,167,170,172,173,176,178,181,215,242,263,264,278,280,282,283,305,310,311,375,376,378,379,381,387,388,389,390,391,392,393,394,395,396,397,398,400,401,402,403,404,405,409,451,453,459,460,501,502,512,],[-288,-253,-290,-251,-279,-293,-232,-295,292,-277,-296,-291,-289,-294,-265,-292,-297,-278,-280,-299,-288,-302,-274,-273,-298,-255,-251,-256,-254,-300,-257,-270,-269,-272,-271,-268,292,-237,292,-240,-236,-235,292,-242,-241,292,292,-243,292,-238,-234,-239,292,-233,-281,-266,-267,-252,-258,-282,-275,-276,]),'ANDEQUAL':([117,147,149,150,151,153,159,163,164,165,166,167,170,172,173,176,178,181,215,242,263,264,278,280,282,283,305,310,311,375,376,378,379,381,409,451,453,459,460,501,502,512,],[-288,-253,-290,277,-279,-293,-295,-277,-296,-291,-289,-294,-265,-292,-297,-278,-280,-299,-288,-302,-274,-273,-298,-255,-251,-256,-254,-300,-257,-270,-269,-272,-271,-268,-281,-266,-267,-252,-258,-282,-275,-276,]),'DOUBLE':([0,1,2,3,5,6,7,9,10,11,13,14,15,17,18,19,21,22,23,24,26,27,28,29,30,31,32,33,34,35,37,38,39,40,43,44,45,46,47,48,50,51,52,53,54,56,57,58,59,60,61,62,64,65,66,68,69,71,74,78,79,80,81,89,90,96,97,99,101,102,103,104,109,115,118,119,120,123,125,138,139,140,141,142,143,144,145,146,174,184,194,196,198,199,200,201,203,205,209,213,216,218,225,227,233,242,244,247,250,255,256,257,258,259,279,281,284,304,306,309,312,316,318,331,336,338,341,342,344,349,365,368,369,371,374,407,412,413,426,431,433,435,475,493,496,497,513,514,519,520,],[52,-63,-104,-52,-107,-97,-110,-98,-103,-112,-102,-303,-65,-303,52,-215,-94,-111,-303,-116,-113,-68,-60,-108,-109,-101,52,-93,52,-96,-117,-62,-99,-105,-115,-100,52,-91,-114,-95,-66,-64,-106,-67,-29,52,-81,-9,-10,-85,-84,-82,52,52,52,-53,-86,-160,-69,-88,-89,-87,52,-90,-92,-301,-147,-146,-61,-131,52,-130,52,52,-70,52,-83,-161,52,-30,52,52,-137,52,52,-140,-128,52,52,-35,52,-36,52,-78,-194,-74,-77,-76,-72,52,-192,-73,-193,-75,-71,-302,-148,52,-127,-126,-129,-138,-132,52,52,52,52,-34,52,-31,52,52,52,-212,52,-195,-196,-209,-211,-208,-150,-149,-134,-139,-133,52,-32,-33,-199,-207,-197,-210,-198,-200,-203,-202,-204,-201,-206,-205,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'specifier_qualifier_list':([103,139,143,146,174,247,259,279,281,284,312,],[140,140,140,140,306,140,140,306,306,306,306,]),'constant_expression':([222,245,254,360,370,],[346,367,373,443,449,]),'declaration_list_opt':([18,81,],[63,126,]),'postfix_expression':([105,119,129,131,154,157,171,174,179,182,183,193,207,213,221,222,228,245,254,261,265,269,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,312,317,332,335,336,339,340,343,348,352,353,360,361,370,410,414,430,436,452,456,457,463,464,470,471,472,474,476,481,495,499,507,508,516,518,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'block_item':([119,213,],[200,338,]),'declaration_specifiers':([0,18,45,56,64,81,119,125,194,198,213,316,318,336,407,],[32,65,32,109,65,65,65,109,109,109,65,109,109,65,109,]),'direct_typeid_noparen_declarator':([109,191,],[186,319,]),'expression_opt':([119,207,213,332,336,340,430,436,471,472,474,476,495,507,508,516,518,],[202,202,202,202,429,202,473,202,202,494,202,202,509,202,515,202,202,]),'direct_abstract_declarator':([109,191,194,306,325,407,408,],[187,320,187,187,320,187,320,]),'cast_expression':([105,119,129,131,157,174,182,183,193,207,213,221,222,228,245,254,261,265,269,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,312,317,332,335,336,339,340,343,348,352,353,360,361,370,410,414,430,436,452,456,457,463,464,470,471,472,474,476,481,495,499,507,508,516,518,],[156,156,156,156,283,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,459,156,156,156,156,459,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'decl_body':([0,18,45,64,81,119,213,336,],[8,8,8,8,8,8,8,8,]),'declaration_specifiers_no_type_opt':([14,17,23,],[60,61,69,]),'struct_declaration':([103,139,143,146,247,259,],[141,141,257,141,257,257,]),'enum_specifier':([0,18,34,45,56,64,66,81,103,115,119,125,139,142,143,146,174,194,198,213,247,259,279,281,284,312,316,318,336,407,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'empty':([0,14,17,18,23,25,32,34,55,56,65,66,81,105,106,109,119,124,125,140,193,194,207,213,228,229,235,306,315,316,317,318,332,336,340,407,414,415,430,436,448,458,471,472,474,476,495,503,507,508,516,518,],[12,58,58,67,58,72,77,91,72,116,77,91,67,158,72,185,206,72,116,249,158,323,333,333,158,72,357,185,72,116,158,323,333,333,333,323,158,72,333,333,482,482,333,333,333,333,333,482,333,333,333,333,]),'designation_opt':([235,448,458,503,],[361,481,361,481,]),'abstract_declarator':([109,194,306,407,],[188,324,188,324,]),'id_declarator':([0,32,34,42,45,65,66,87,109,128,132,140,194,372,],[18,81,92,100,18,121,92,100,189,121,121,121,100,121,]),'direct_typeid_declarator':([32,65,83,87,128,132,140,372,],[76,76,127,76,76,76,76,76,]),'labeled_statement':([119,207,213,332,340,436,471,474,476,507,516,518,],[209,209,209,209,209,209,209,209,209,209,209,209,]),'typedef_name':([0,18,34,45,56,64,66,81,103,115,119,125,139,142,143,146,174,194,198,213,247,259,279,281,284,312,316,318,336,407,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'struct_declarator_list_opt':([140,],[251,]),'struct_or_union_specifier':([0,18,34,45,56,64,66,81,103,115,119,125,139,142,143,146,174,194,198,213,247,259,279,281,284,312,316,318,336,407,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'struct_declarator':([140,372,],[252,450,]),'typeid_declarator':([32,65,87,128,132,140,372,],[85,85,130,85,85,85,85,]),'id_init_declarator_list':([34,66,],[94,94,]),'declarator':([32,65,128,132,140,372,],[86,86,86,86,248,248,]),'conditional_expression':([105,119,129,131,174,182,183,193,207,213,221,222,228,245,254,261,265,269,281,284,297,312,317,332,335,336,339,340,343,348,352,353,360,361,370,414,430,436,452,457,463,464,470,471,472,474,476,481,495,499,507,508,516,518,],[168,168,168,168,168,168,168,168,168,168,168,347,168,347,347,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,347,168,347,168,168,168,168,486,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'argument_expression_list':([265,],[380,]),'compound_statement':([63,119,126,207,213,332,340,436,471,474,476,507,516,518,],[118,201,233,201,201,201,201,201,201,201,201,201,201,201,]),'declaration_specifiers_no_type':([0,14,17,18,23,45,56,64,81,119,125,194,198,213,316,318,336,407,],[34,59,59,66,59,34,115,66,66,66,115,115,115,66,115,115,66,115,]),'designator_list':([235,448,458,503,],[362,362,362,362,]),'id_init_declarator':([34,66,],[93,93,]),'translation_unit_or_empty':([0,],[41,]),'type_qualifier_list_opt':([25,55,106,124,229,315,415,],[70,105,182,228,352,414,463,]),'struct_declaration_list':([103,139,146,],[143,247,259,]),'designation':([235,448,458,503,],[356,356,356,356,]),'initializer':([129,131,361,481,],[236,239,444,498,]),'type_specifier_no_typeid':([0,18,32,34,45,56,64,65,66,81,103,109,115,119,125,139,140,142,143,146,174,194,198,213,247,259,279,281,284,306,312,316,318,336,407,],[47,47,89,47,47,47,47,89,47,47,47,89,47,47,47,47,255,47,47,47,47,47,47,47,47,47,47,47,47,255,47,47,47,47,47,]),'pppragma_directive':([0,45,119,207,213,332,340,436,471,474,476,507,516,518,],[15,15,199,199,199,199,199,199,199,199,199,199,199,199,]),'initializer_list_opt':([235,],[363,]),'block_item_list':([119,],[213,]),'assignment_expression':([105,119,129,131,174,182,183,193,207,213,221,228,261,265,269,281,284,297,312,317,332,335,336,339,340,343,348,352,353,361,414,430,436,452,463,464,470,471,472,474,476,481,495,499,507,508,516,518,],[180,223,237,237,223,313,314,180,223,223,223,180,223,382,383,223,223,223,223,180,223,223,223,432,223,223,223,440,441,237,180,223,223,483,490,491,223,223,223,223,223,237,223,223,223,223,223,223,]),'block_item_list_opt':([119,],[217,]),'initializer_list':([235,458,],[364,487,]),'parameter_type_list_opt':([194,318,407,],[327,421,327,]),'type_qualifier_list':([25,55,103,106,124,139,143,146,174,229,247,259,279,281,284,312,315,415,],[73,107,142,73,230,142,142,142,142,73,142,142,142,142,142,142,416,73,]),'declaration':([0,18,45,64,81,119,213,336,],[1,62,1,120,62,216,216,430,]),'enumerator_list':([98,133,137,],[134,241,246,]),'type_specifier':([0,18,34,45,56,64,66,81,103,115,119,125,139,142,143,146,174,194,198,213,247,259,279,281,284,312,316,318,336,407,],[46,46,90,46,46,46,90,46,145,90,46,46,145,256,145,145,145,46,46,46,145,145,145,145,145,145,46,46,46,46,]),'direct_id_declarator':([0,20,32,34,42,45,65,66,83,87,109,128,132,140,191,194,325,372,],[3,68,3,3,3,3,3,3,68,3,3,3,3,3,68,3,68,3,]),'id_init_declarator_list_opt':([34,66,],[95,95,]),'init_declarator_list_opt':([32,65,],[75,75,]),'assignment_operator':([150,],[269,]),'unary_expression':([105,119,129,131,154,157,171,174,179,182,183,193,207,213,221,222,228,245,254,261,265,269,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,312,317,332,335,336,339,340,343,348,352,353,360,361,370,410,414,430,436,452,456,457,463,464,470,471,472,474,476,481,495,499,507,508,516,518,],[150,150,150,150,280,282,305,150,311,150,150,150,150,150,150,282,150,282,282,150,150,150,150,150,282,282,282,282,282,282,282,282,282,282,282,282,150,282,282,282,282,282,282,150,150,150,150,150,150,150,150,150,150,150,282,150,282,282,150,150,150,150,282,282,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'offsetof_member_designator':([454,],[485,]),'abstract_declarator_opt':([109,306,],[192,406,]),'identifier_list':([56,125,316,],[111,111,111,]),'expression_statement':([119,207,213,332,340,436,471,474,476,507,516,518,],[218,218,218,218,218,218,218,218,218,218,218,218,]),'translation_unit':([0,],[45,]),'unified_string_literal':([105,119,129,131,154,157,171,174,179,182,183,193,207,213,221,222,228,245,254,261,265,269,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,312,317,332,335,336,339,340,343,348,352,353,360,361,370,410,414,430,436,452,456,457,463,464,470,471,472,474,476,481,495,499,507,508,516,518,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'declaration_list':([18,81,],[64,64,]),'function_specifier':([0,14,17,18,23,32,45,56,64,65,81,109,119,125,194,198,213,316,318,336,407,],[23,23,23,23,23,79,23,23,23,79,23,79,23,23,23,23,23,23,23,23,23,]),'identifier':([56,105,119,125,129,131,154,157,171,174,179,182,183,193,197,207,213,221,222,228,245,254,261,265,269,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,312,316,317,332,335,336,339,340,343,348,352,353,359,360,361,370,410,414,430,436,452,454,456,457,463,464,470,471,472,474,476,481,495,499,500,507,508,516,518,],[112,163,163,112,163,163,163,163,163,163,163,163,163,163,328,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,112,163,163,163,163,163,163,163,163,163,163,442,163,163,163,163,163,163,163,163,484,163,163,163,163,163,163,163,163,163,163,163,163,511,163,163,163,163,]),'binary_expression':([105,119,129,131,174,182,183,193,207,213,221,222,228,245,254,261,265,269,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,312,317,332,335,336,339,340,343,348,352,353,360,361,370,414,430,436,452,457,463,464,470,471,472,474,476,481,495,499,507,508,516,518,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,387,388,389,390,391,392,393,394,395,396,397,398,160,400,401,402,403,404,405,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'storage_class_specifier':([0,14,17,18,23,32,45,56,64,65,81,109,119,125,194,198,213,316,318,336,407,],[14,14,14,14,14,78,14,14,14,78,14,78,14,14,14,14,14,14,14,14,14,]),'type_qualifier':([0,14,17,18,23,25,32,45,55,56,64,65,73,81,103,106,107,109,119,124,125,139,140,142,143,146,174,194,198,213,229,230,247,259,279,281,284,306,312,315,316,318,336,407,415,416,],[17,17,17,17,17,71,80,17,71,17,17,80,123,17,71,71,123,80,17,71,17,71,250,123,71,71,71,17,17,17,71,123,71,71,71,71,71,250,71,71,17,17,17,17,71,123,]),'unary_operator':([105,119,129,131,154,157,171,174,179,182,183,193,207,213,221,222,228,245,254,261,265,269,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,312,317,332,335,336,339,340,343,348,352,353,360,361,370,410,414,430,436,452,456,457,463,464,470,471,472,474,476,481,495,499,507,508,516,518,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'pointer':([0,32,34,42,45,65,66,70,87,109,128,132,140,194,306,372,407,],[20,83,20,20,20,83,20,122,83,191,83,83,83,325,408,83,408,]),'expression':([119,174,207,213,221,261,281,284,297,312,332,335,336,340,343,348,430,436,470,471,472,474,476,495,499,507,508,516,518,],[214,307,214,214,345,377,307,307,399,307,214,428,214,214,434,437,214,214,492,214,214,214,214,214,510,214,214,214,214,]),'parameter_type_list':([56,125,194,316,318,407,],[108,232,326,417,326,326,]),'unified_wstring_literal':([105,119,129,131,154,157,171,174,179,182,183,193,207,213,221,222,228,245,254,261,265,269,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,312,317,332,335,336,339,340,343,348,352,353,360,361,370,410,414,430,436,452,456,457,463,464,470,471,472,474,476,481,495,499,507,508,516,518,],[178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,]),'brace_open':([36,49,63,97,99,102,104,119,126,129,131,207,213,332,340,361,410,436,455,456,460,471,474,476,481,507,516,518,],[98,103,119,133,137,139,146,119,119,235,235,119,119,119,119,235,458,119,458,458,458,119,119,119,235,119,119,119,]),'identifier_list_opt':([56,125,316,],[110,231,418,]),'init_declarator_list':([32,65,],[84,84,]),'parameter_list':([56,125,194,316,318,407,],[113,113,113,113,113,113,]),'struct_declarator_list':([140,],[253,]),'primary_expression':([105,119,129,131,154,157,171,174,179,182,183,193,207,213,221,222,228,245,254,261,265,269,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,312,317,332,335,336,339,340,343,348,352,353,360,361,370,410,414,430,436,452,456,457,463,464,470,471,472,474,476,481,495,499,507,508,516,518,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'function_definition':([0,45,],[38,38,]),'jump_statement':([119,207,213,332,340,436,471,474,476,507,516,518,],[203,203,203,203,203,203,203,203,203,203,203,203,]),'iteration_statement':([119,207,213,332,340,436,471,474,476,507,516,518,],[205,205,205,205,205,205,205,205,205,205,205,205,]),'designator':([235,362,448,458,503,],[358,446,358,358,358,]),'parameter_declaration':([56,125,194,198,316,318,407,],[114,114,114,329,114,114,114,]),'statement':([119,207,213,332,340,436,471,474,476,507,516,518,],[225,334,225,426,433,475,493,496,497,514,519,520,]),'constant':([105,119,129,131,154,157,171,174,179,182,183,193,207,213,221,222,228,245,254,261,265,269,281,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,312,317,332,335,336,339,340,343,348,352,353,360,361,370,410,414,430,436,452,456,457,463,464,470,471,472,474,476,481,495,499,507,508,516,518,],[176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'assignment_expression_opt':([105,193,228,317,414,],[177,322,351,420,462,]),'init_declarator':([32,65,128,132,],[88,88,234,240,]),'enumerator':([98,133,137,243,],[135,135,135,366,]),'brace_close':([134,143,217,241,246,247,259,363,448,487,503,],[244,258,341,365,368,369,374,447,480,502,512,]),'struct_or_union':([0,18,34,45,56,64,66,81,103,115,119,125,139,142,143,146,174,194,198,213,247,259,279,281,284,312,316,318,336,407,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'pp_directive':([0,45,],[51,51,]),'selection_statement':([119,207,213,332,340,436,471,474,476,507,516,518,],[227,227,227,227,227,227,227,227,227,227,227,227,]),'external_declaration':([0,45,],[28,101,]),'typeid_noparen_declarator':([109,],[195,]),'type_name':([174,279,281,284,312,],[308,384,385,386,411,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',944),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',952),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',957),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',958),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',966),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',967),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',972),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',977),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',978),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',983),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',984),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',985),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',996),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',997),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1012),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1013),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1124),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1125),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1154),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1155),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1161),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1169),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1170),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1189),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1190),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1201),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1232),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1233),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1242),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1247),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1248),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1256),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1257),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1268),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1276),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1277),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1282),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1283),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1288),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1299),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1307),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1312),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1322),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1326),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1337),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1346),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1357),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1366),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1376),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1387),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1388),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1395),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1396),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1402),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1408),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1412),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1416),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1420),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1424),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1428),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1433),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1437),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1441),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1445),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1450),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1454),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1458),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1462),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1463),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1468),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1475),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1476),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1488),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1492),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1493),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1506),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1507),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1508),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1509),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1510),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1521),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1525),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1526),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1534),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1535),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1536),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1537),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1538),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1560),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1564),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1568),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1572),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1573),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1574),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1579),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1580),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1588),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1589),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1590),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1591),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1592),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1598),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1602),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1606),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1607),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1613),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1614),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1615),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1621),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1622),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1628),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1633),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1637),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1641),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1642),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1647),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1651),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1659),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1660),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1661),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1674),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1675),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1684),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1688),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1689),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1690),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1691),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1697),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1698),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1704),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1705),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1716),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1717),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1727),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1728),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1738),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1744),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1750),
]
