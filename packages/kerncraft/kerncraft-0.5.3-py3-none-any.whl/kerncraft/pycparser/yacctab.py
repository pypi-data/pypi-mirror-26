
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {end':([0,5,7,8,10,15,19,37,40,42,47,48,61,80,99,106,210,244,295,],[-303,-68,-65,-66,-64,-58,-62,-63,-60,-59,-67,0,-69,-61,-81,-70,-71,-302,-196,]),'RPAREN':([1,2,3,6,11,12,14,16,17,18,21,22,23,24,25,26,29,30,31,32,34,36,38,39,41,45,46,51,52,54,63,67,68,69,70,76,81,85,91,93,94,95,96,98,100,101,102,103,111,114,115,116,117,118,119,121,122,123,124,125,141,144,145,146,147,150,155,159,161,166,168,169,170,173,178,179,180,183,185,186,190,194,199,200,203,205,211,212,217,218,219,220,221,223,224,225,226,227,228,229,232,244,245,249,252,253,259,274,278,280,281,283,286,287,288,289,291,292,319,325,327,339,340,345,349,351,352,353,354,355,356,357,358,359,360,362,363,365,368,369,370,375,377,378,379,380,381,384,385,386,387,388,389,390,391,392,393,394,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,420,422,432,433,435,436,440,441,442,445,446,447,448,454,455,458,459,472,473,474,475,480,481,482,485,486,487,489,491,492,496,497,500,502,503,505,508,509,510,512,514,519,],[-106,-111,-93,-105,-117,-97,-100,-116,-52,-114,-215,-102,-113,-99,-108,-103,-104,-101,-96,-107,-115,-109,-91,-98,-95,-110,-29,-112,-303,-94,-37,-87,-90,-54,-89,-88,-303,-92,-146,-147,-53,-130,-131,144,-158,-160,-27,-28,-303,-55,217,-164,-303,-169,229,-18,-17,-162,-288,232,-128,-30,-159,-161,-251,-232,-14,-290,-213,-253,-299,-297,-265,-289,-230,-291,-296,-292,-280,-295,-277,-294,-279,-216,-293,-278,339,340,-38,-56,-166,-168,-45,-184,-2,-182,-1,-303,-167,-36,-35,-302,-148,-129,-127,-126,-132,-13,-255,-251,-256,-257,383,-303,387,-274,390,-273,-300,-254,-298,-44,-43,-303,-303,-57,-183,445,-182,-23,446,-24,-170,-165,-163,-34,-31,-149,-150,-133,-134,-217,-214,451,452,453,454,-182,-303,-181,-281,-269,-270,-268,458,-286,-271,-272,-248,-242,-239,-241,-235,-247,-249,-236,-250,-233,-243,-245,-234,-238,-240,-237,-246,-244,465,467,-42,-39,474,475,-189,-187,480,-185,-191,-33,-32,-258,-252,-267,-266,-41,-40,-51,-50,-190,-188,-186,-287,501,-231,-303,-283,505,-49,-46,-275,-303,513,-282,-48,-47,-276,517,-284,-285,]),'TYPEID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,43,45,46,47,50,51,52,53,54,55,57,58,59,61,66,67,68,70,73,75,76,77,78,79,80,81,83,85,90,91,93,94,95,96,97,99,100,101,102,103,104,106,107,108,111,113,117,120,130,136,137,138,139,140,141,142,143,144,145,146,149,151,153,154,158,165,167,177,181,192,196,206,210,225,227,229,231,232,244,245,247,248,249,252,253,258,259,272,275,279,282,284,290,293,295,296,298,318,324,326,345,349,362,363,365,368,369,370,372,373,376,382,385,418,423,447,448,464,483,490,493,511,516,518,520,],[21,-106,-111,-93,21,-68,-105,-65,-66,63,-64,-117,-97,-303,-100,21,-116,-52,-114,-62,-303,-215,-102,-113,-99,-108,-103,21,93,-104,-101,-96,-107,-115,96,-109,-63,-91,-98,-60,-95,-136,-110,-29,-67,-135,-112,-303,-303,-94,63,21,21,-82,-69,21,-87,-90,-89,63,63,-88,-10,-9,-84,-61,21,-86,-92,-301,-146,-147,-53,-130,-131,21,-81,-158,-160,-27,-28,-85,-70,21,-83,21,63,221,21,63,21,21,-137,21,-140,-128,63,21,-30,-159,-161,-78,-72,21,-74,-73,21,-193,-75,-77,-194,-192,-76,-71,221,21,-36,21,-35,-302,-148,21,21,-129,-127,-126,-138,-132,-211,-195,21,21,21,389,394,-196,-208,-212,21,-209,21,21,21,-34,-31,-149,-150,-133,-134,63,-139,-210,-199,21,-207,-197,-33,-32,-198,-203,-202,-200,-204,-201,-206,-205,]),'DIVIDE':([124,147,150,159,166,168,169,170,173,178,179,180,183,185,186,190,194,199,202,203,205,244,278,280,281,283,289,292,319,325,327,387,388,389,390,393,394,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,454,455,458,459,500,505,510,],[-288,-251,-232,-290,-253,-299,-297,-265,-289,311,-291,-296,-292,-280,-295,-277,-294,-279,-288,-293,-278,-302,-255,-251,-256,-257,-274,-273,-300,-254,-298,-281,-269,-270,-268,-271,-272,311,311,311,311,-235,311,311,311,311,-233,311,311,-234,311,311,311,311,311,-258,-252,-267,-266,-275,-282,-276,]),'LBRACE':([4,5,17,28,35,43,46,50,56,57,59,60,61,66,90,91,93,94,95,96,99,107,108,109,110,129,144,149,151,153,154,158,167,175,177,181,192,196,206,209,229,232,244,272,275,285,295,296,298,324,329,332,335,336,362,363,376,382,383,418,419,423,426,427,447,448,451,452,453,454,456,464,465,467,468,469,483,490,493,499,507,511,513,516,517,518,520,],[-303,-68,-52,90,90,-136,-29,-135,90,-8,-82,-7,-69,-303,-301,90,90,-53,90,90,-81,90,-83,90,90,90,-30,-78,-72,90,-74,-73,-193,90,-75,-77,-194,-192,-76,-303,-36,-35,-302,-211,-195,90,-196,-208,-212,-209,90,-11,-12,90,-34,-31,-210,-199,90,-207,90,-197,-176,-303,-33,-32,90,90,90,90,-303,-198,90,90,-11,90,-203,-202,-200,-303,90,-204,90,-201,90,-206,-205,]),'INT_CONST_HEX':([5,11,16,34,61,82,90,99,101,102,103,107,109,112,126,127,128,129,146,148,149,151,152,153,154,157,158,162,163,165,167,171,175,177,181,182,188,191,192,195,196,197,204,206,209,213,214,215,222,233,234,238,242,244,257,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,279,282,284,285,291,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,323,324,328,329,332,335,336,338,341,342,344,346,347,350,371,376,382,383,417,418,419,423,426,427,437,438,439,443,451,453,456,457,460,461,462,464,465,467,468,469,476,477,479,483,489,490,493,499,502,506,507,511,513,516,517,518,520,],[-68,-117,-116,-115,-69,-303,-301,-81,-160,-27,-28,179,179,-303,-28,179,-303,179,-161,-260,-78,-72,179,179,-74,179,-73,179,179,179,-193,-264,179,-75,-77,-262,179,-263,-194,-261,-192,179,-259,-76,-303,-28,179,-303,179,179,-260,179,179,-302,179,-224,-227,-228,-219,-222,-226,-225,-220,179,-221,-218,-223,-211,-195,179,179,179,179,179,179,179,179,-196,-208,-212,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,-209,179,179,-11,-12,179,179,179,-260,179,-303,-260,179,179,-210,-199,179,179,-207,179,-197,-176,-303,-28,179,-303,-260,179,179,-303,179,179,179,179,-198,179,179,-11,179,179,-260,179,-203,179,-202,-200,-303,179,179,179,-204,179,-201,179,-206,-205,]),'XOREQUAL':([124,147,159,166,168,169,170,173,179,180,183,185,186,190,194,199,202,203,205,244,278,280,281,283,289,292,319,325,327,387,388,389,390,393,394,454,455,458,459,500,505,510,],[-288,263,-290,-253,-299,-297,-265,-289,-291,-296,-292,-280,-295,-277,-294,-279,-288,-293,-278,-302,-255,-251,-256,-257,-274,-273,-300,-254,-298,-281,-269,-270,-268,-271,-272,-258,-252,-267,-266,-275,-282,-276,]),'RSHIFTEQUAL':([124,147,159,166,168,169,170,173,179,180,183,185,186,190,194,199,202,203,205,244,278,280,281,283,289,292,319,325,327,387,388,389,390,393,394,454,455,458,459,500,505,510,],[-288,265,-290,-253,-299,-297,-265,-289,-291,-296,-292,-280,-295,-277,-294,-279,-288,-293,-278,-302,-255,-251,-256,-257,-274,-273,-300,-254,-298,-281,-269,-270,-268,-271,-272,-258,-252,-267,-266,-275,-282,-276,]),'CHAR_CONST':([5,11,16,34,61,82,90,99,101,102,103,107,109,112,126,127,128,129,146,148,149,151,152,153,154,157,158,162,163,165,167,171,175,177,181,182,188,191,192,195,196,197,204,206,209,213,214,215,222,233,234,238,242,244,257,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,279,282,284,285,291,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,323,324,328,329,332,335,336,338,341,342,344,346,347,350,371,376,382,383,417,418,419,423,426,427,437,438,439,443,451,453,456,457,460,461,462,464,465,467,468,469,476,477,479,483,489,490,493,499,502,506,507,511,513,516,517,518,520,],[-68,-117,-116,-115,-69,-303,-301,-81,-160,-27,-28,186,186,-303,-28,186,-303,186,-161,-260,-78,-72,186,186,-74,186,-73,186,186,186,-193,-264,186,-75,-77,-262,186,-263,-194,-261,-192,186,-259,-76,-303,-28,186,-303,186,186,-260,186,186,-302,186,-224,-227,-228,-219,-222,-226,-225,-220,186,-221,-218,-223,-211,-195,186,186,186,186,186,186,186,186,-196,-208,-212,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,-209,186,186,-11,-12,186,186,186,-260,186,-303,-260,186,186,-210,-199,186,186,-207,186,-197,-176,-303,-28,186,-303,-260,186,186,-303,186,186,186,186,-198,186,186,-11,186,186,-260,186,-203,186,-202,-200,-303,186,186,186,-204,186,-201,186,-206,-205,]),'VOID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,34,36,37,38,39,40,41,45,46,47,51,53,54,55,57,58,59,61,66,67,68,70,76,77,78,79,80,81,83,85,90,91,93,94,95,96,97,99,101,104,106,107,108,111,117,120,136,137,138,139,140,141,142,143,144,146,149,151,153,154,158,165,167,177,181,192,196,206,210,227,229,231,232,244,245,247,248,249,252,253,258,259,272,275,279,282,284,287,295,296,298,318,324,326,345,349,362,363,365,368,369,370,373,376,382,385,418,423,447,448,464,483,490,493,511,516,518,520,],[24,-106,-111,-93,24,-68,-105,-65,-66,24,-64,-117,-97,-303,-100,24,-116,-52,-114,-62,-303,-215,-102,-113,-99,-108,-103,24,-104,-101,-96,-107,-115,-109,-63,-91,-98,-60,-95,-110,-29,-67,-112,-303,-94,24,24,24,-82,-69,24,-87,-90,-89,-88,-10,-9,-84,-61,24,-86,-92,-301,-146,-147,-53,-130,-131,24,-81,-160,-85,-70,24,-83,24,24,24,24,24,-137,24,-140,-128,24,24,-30,-161,-78,-72,24,-74,-73,24,-193,-75,-77,-194,-192,-76,-71,24,-36,24,-35,-302,-148,24,24,-129,-127,-126,-138,-132,-211,-195,24,24,24,24,-196,-208,-212,24,-209,24,24,24,-34,-31,-149,-150,-133,-134,-139,-210,-199,24,-207,-197,-33,-32,-198,-203,-202,-200,-204,-201,-206,-205,]),'LAND':([124,147,150,159,166,168,169,170,173,178,179,180,183,185,186,190,194,199,202,203,205,244,278,280,281,283,289,292,319,325,327,387,388,389,390,393,394,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,454,455,458,459,500,505,510,],[-288,-251,-232,-290,-253,-299,-297,-265,-289,305,-291,-296,-292,-280,-295,-277,-294,-279,-288,-293,-278,-302,-255,-251,-256,-257,-274,-273,-300,-254,-298,-281,-269,-270,-268,-271,-272,-248,-242,-239,-241,-235,-247,-249,-236,305,-233,-243,-245,-234,-238,-240,-237,-246,-244,-258,-252,-267,-266,-275,-282,-276,]),'FOR':([5,61,90,99,107,149,151,153,154,158,167,175,177,181,192,196,206,244,272,275,285,295,296,298,324,329,376,382,418,419,423,451,464,465,467,483,490,493,507,511,513,516,517,518,520,],[-68,-69,-301,-81,184,-78,-72,184,-74,-73,-193,184,-75,-77,-194,-192,-76,-302,-211,-195,184,-196,-208,-212,-209,184,-210,-199,-207,184,-197,184,-198,184,184,-203,-202,-200,184,-204,184,-201,184,-206,-205,]),'GOTO':([5,61,90,99,107,149,151,153,154,158,167,175,177,181,192,196,206,244,272,275,285,295,296,298,324,329,376,382,418,419,423,451,464,465,467,483,490,493,507,511,513,516,517,518,520,],[-68,-69,-301,-81,187,-78,-72,187,-74,-73,-193,187,-75,-77,-194,-192,-76,-302,-211,-195,187,-196,-208,-212,-209,187,-210,-199,-207,187,-197,187,-198,187,187,-203,-202,-200,187,-204,187,-201,187,-206,-205,]),'CASE':([5,61,90,99,107,149,151,153,154,158,167,175,177,181,192,196,206,244,272,275,285,295,296,298,324,329,376,382,418,419,423,451,464,465,467,483,490,493,507,511,513,516,517,518,520,],[-68,-69,-301,-81,188,-78,-72,188,-74,-73,-193,188,-75,-77,-194,-192,-76,-302,-211,-195,188,-196,-208,-212,-209,188,-210,-199,-207,188,-197,188,-198,188,188,-203,-202,-200,188,-204,188,-201,188,-206,-205,]),'AUTO':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,34,36,37,38,39,40,41,45,46,47,51,53,54,55,57,59,61,66,67,68,70,76,80,81,85,90,91,93,94,95,96,99,106,107,108,111,117,144,149,151,153,154,158,167,177,181,192,196,206,210,227,229,231,232,244,245,259,272,275,295,296,298,318,324,345,349,362,363,365,368,369,370,376,382,385,418,423,447,448,464,483,490,493,511,516,518,520,],[3,-106,-111,-93,3,-68,-105,-65,-66,3,-64,-117,-97,3,-100,3,-116,-52,-114,-62,3,-215,-102,-113,-99,-108,-103,-104,-101,-96,-107,-115,-109,-63,-91,-98,-60,-95,-110,-29,-67,-112,3,-94,3,3,-82,-69,3,-87,-90,-89,-88,-61,3,-92,-301,-146,-147,-53,-130,-131,-81,-70,3,-83,3,3,-30,-78,-72,3,-74,-73,-193,-75,-77,-194,-192,-76,-71,3,-36,3,-35,-302,-148,-132,-211,-195,-196,-208,-212,3,-209,3,3,-34,-31,-149,-150,-133,-134,-210,-199,3,-207,-197,-33,-32,-198,-203,-202,-200,-204,-201,-206,-205,]),'SWITCH':([5,61,90,99,107,149,151,153,154,158,167,175,177,181,192,196,206,244,272,275,285,295,296,298,324,329,376,382,418,419,423,451,464,465,467,483,490,493,507,511,513,516,517,518,520,],[-68,-69,-301,-81,189,-78,-72,189,-74,-73,-193,189,-75,-77,-194,-192,-76,-302,-211,-195,189,-196,-208,-212,-209,189,-210,-199,-207,189,-197,189,-198,189,189,-203,-202,-200,189,-204,189,-201,189,-206,-205,]),'LONG':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,34,36,37,38,39,40,41,45,46,47,51,53,54,55,57,58,59,61,66,67,68,70,76,77,78,79,80,81,83,85,90,91,93,94,95,96,97,99,101,104,106,107,108,111,117,120,136,137,138,139,140,141,142,143,144,146,149,151,153,154,158,165,167,177,181,192,196,206,210,227,229,231,232,244,245,247,248,249,252,253,258,259,272,275,279,282,284,287,295,296,298,318,324,326,345,349,362,363,365,368,369,370,373,376,382,385,418,423,447,448,464,483,490,493,511,516,518,520,],[29,-106,-111,-93,29,-68,-105,-65,-66,29,-64,-117,-97,-303,-100,29,-116,-52,-114,-62,-303,-215,-102,-113,-99,-108,-103,29,-104,-101,-96,-107,-115,-109,-63,-91,-98,-60,-95,-110,-29,-67,-112,-303,-94,29,29,29,-82,-69,29,-87,-90,-89,-88,-10,-9,-84,-61,29,-86,-92,-301,-146,-147,-53,-130,-131,29,-81,-160,-85,-70,29,-83,29,29,29,29,29,-137,29,-140,-128,29,29,-30,-161,-78,-72,29,-74,-73,29,-193,-75,-77,-194,-192,-76,-71,29,-36,29,-35,-302,-148,29,29,-129,-127,-126,-138,-132,-211,-195,29,29,29,29,-196,-208,-212,29,-209,29,29,29,-34,-31,-149,-150,-133,-134,-139,-210,-199,29,-207,-197,-33,-32,-198,-203,-202,-200,-204,-201,-206,-205,]),'DIVEQUAL':([124,147,159,166,168,169,170,173,179,180,183,185,186,190,194,199,202,203,205,244,278,280,281,283,289,292,319,325,327,387,388,389,390,393,394,454,455,458,459,500,505,510,],[-288,269,-290,-253,-299,-297,-265,-289,-291,-296,-292,-280,-295,-277,-294,-279,-288,-293,-278,-302,-255,-251,-256,-257,-274,-273,-300,-254,-298,-281,-269,-270,-268,-271,-272,-258,-252,-267,-266,-275,-282,-276,]),'EXTERN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,34,36,37,38,39,40,41,45,46,47,51,53,54,55,57,59,61,66,67,68,70,76,80,81,85,90,91,93,94,95,96,99,106,107,108,111,117,144,149,151,153,154,158,167,177,181,192,196,206,210,227,229,231,232,244,245,259,272,275,295,296,298,318,324,345,349,362,363,365,368,369,370,376,382,385,418,423,447,448,464,483,490,493,511,516,518,520,],[31,-106,-111,-93,31,-68,-105,-65,-66,31,-64,-117,-97,31,-100,31,-116,-52,-114,-62,31,-215,-102,-113,-99,-108,-103,-104,-101,-96,-107,-115,-109,-63,-91,-98,-60,-95,-110,-29,-67,-112,31,-94,31,31,-82,-69,31,-87,-90,-89,-88,-61,31,-92,-301,-146,-147,-53,-130,-131,-81,-70,31,-83,31,31,-30,-78,-72,31,-74,-73,-193,-75,-77,-194,-192,-76,-71,31,-36,31,-35,-302,-148,-132,-211,-195,-196,-208,-212,31,-209,31,31,-34,-31,-149,-150,-133,-134,-210,-199,31,-207,-197,-33,-32,-198,-203,-202,-200,-204,-201,-206,-205,]),'RSHIFT':([124,147,150,159,166,168,169,170,173,178,179,180,183,185,186,190,194,199,202,203,205,244,278,280,281,283,289,292,319,325,327,387,388,389,390,393,394,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,454,455,458,459,500,505,510,],[-288,-251,-232,-290,-253,-299,-297,-265,-289,313,-291,-296,-292,-280,-295,-277,-294,-279,-288,-293,-278,-302,-255,-251,-256,-257,-274,-273,-300,-254,-298,-281,-269,-270,-268,-271,-272,313,313,-239,313,-235,313,313,-236,313,-233,313,313,-234,-238,313,-237,313,313,-258,-252,-267,-266,-275,-282,-276,]),'LSHIFTEQUAL':([124,147,159,166,168,169,170,173,179,180,183,185,186,190,194,199,202,203,205,244,278,280,281,283,289,292,319,325,327,387,388,389,390,393,394,454,455,458,459,500,505,510,],[-288,266,-290,-253,-299,-297,-265,-289,-291,-296,-292,-280,-295,-277,-294,-279,-288,-293,-278,-302,-255,-251,-256,-257,-274,-273,-300,-254,-298,-281,-269,-270,-268,-271,-272,-258,-252,-267,-266,-275,-282,-276,]),'CONTINUE':([5,61,90,99,107,149,151,153,154,158,167,175,177,181,192,196,206,244,272,275,285,295,296,298,324,329,376,382,418,419,423,451,464,465,467,483,490,493,507,511,513,516,517,518,520,],[-68,-69,-301,-81,193,-78,-72,193,-74,-73,-193,193,-75,-77,-194,-192,-76,-302,-211,-195,193,-196,-208,-212,-209,193,-210,-199,-207,193,-197,193,-198,193,193,-203,-202,-200,193,-204,193,-201,193,-206,-205,]),'PLUS':([5,11,16,34,61,82,90,99,101,102,103,107,109,112,124,126,127,128,129,146,147,148,149,150,151,152,153,154,157,158,159,162,163,165,166,167,168,169,170,171,173,175,177,178,179,180,181,182,183,185,186,188,190,191,192,194,195,196,197,199,202,203,204,205,206,209,213,214,215,222,233,234,238,242,244,257,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,285,289,291,292,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,323,324,325,327,328,329,332,335,336,338,341,342,344,346,347,350,371,376,382,383,387,388,389,390,393,394,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,417,418,419,423,426,427,437,438,439,443,451,453,454,455,456,457,458,459,460,461,462,464,465,467,468,469,476,477,479,483,489,490,493,499,500,502,505,506,507,510,511,513,516,517,518,520,],[-68,-117,-116,-115,-69,-303,-301,-81,-160,-27,-28,195,195,-303,-288,-28,195,-303,195,-161,-251,-260,-78,-232,-72,195,195,-74,195,-73,-290,195,195,195,-253,-193,-299,-297,-265,-264,-289,195,-75,306,-291,-296,-77,-262,-292,-280,-295,195,-277,-263,-194,-294,-261,-192,195,-279,-288,-293,-259,-278,-76,-303,-28,195,-303,195,195,-260,195,195,-302,195,-224,-227,-228,-219,-222,-226,-225,-220,195,-221,-218,-223,-211,-195,195,195,-255,195,-251,-256,195,-257,195,195,-274,195,-273,195,-196,-208,-212,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,195,-300,195,-209,-254,-298,195,195,-11,-12,195,195,195,-260,195,-303,-260,195,195,-210,-199,195,-281,-269,-270,-268,-271,-272,306,306,306,306,-235,306,306,-236,306,-233,306,306,-234,306,306,-237,306,306,195,-207,195,-197,-176,-303,-28,195,-303,-260,195,195,-258,-252,-303,195,-267,-266,195,195,195,-198,195,195,-11,195,195,-260,195,-203,195,-202,-200,-303,-275,195,-282,195,195,-276,-204,195,-201,195,-206,-205,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,34,36,37,38,39,40,41,45,46,47,51,53,54,55,57,58,59,61,66,67,68,70,76,77,78,79,80,81,83,85,90,91,93,94,95,96,97,99,101,104,106,107,108,111,117,120,136,137,138,139,140,141,142,143,144,146,149,151,153,154,158,165,167,177,181,192,196,206,210,227,229,231,232,244,245,247,248,249,252,253,258,259,272,275,279,282,284,287,295,296,298,318,324,326,345,349,362,363,365,368,369,370,373,376,382,385,418,423,447,448,464,483,490,493,511,516,518,520,],[1,-106,-111,-93,1,-68,-105,-65,-66,1,-64,-117,-97,-303,-100,1,-116,-52,-114,-62,-303,-215,-102,-113,-99,-108,-103,1,-104,-101,-96,-107,-115,-109,-63,-91,-98,-60,-95,-110,-29,-67,-112,-303,-94,1,1,1,-82,-69,1,-87,-90,-89,-88,-10,-9,-84,-61,1,-86,-92,-301,-146,-147,-53,-130,-131,1,-81,-160,-85,-70,1,-83,1,1,1,1,1,-137,1,-140,-128,1,1,-30,-161,-78,-72,1,-74,-73,1,-193,-75,-77,-194,-192,-76,-71,1,-36,1,-35,-302,-148,1,1,-129,-127,-126,-138,-132,-211,-195,1,1,1,1,-196,-208,-212,1,-209,1,1,1,-34,-31,-149,-150,-133,-134,-139,-210,-199,1,-207,-197,-33,-32,-198,-203,-202,-200,-204,-201,-206,-205,]),'MINUSEQUAL':([124,147,159,166,168,169,170,173,179,180,183,185,186,190,194,199,202,203,205,244,278,280,281,283,289,292,319,325,327,387,388,389,390,393,394,454,455,458,459,500,505,510,],[-288,260,-290,-253,-299,-297,-265,-289,-291,-296,-292,-280,-295,-277,-294,-279,-288,-293,-278,-302,-255,-251,-256,-257,-274,-273,-300,-254,-298,-281,-269,-270,-268,-271,-272,-258,-252,-267,-266,-275,-282,-276,]),'STATIC':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,34,36,37,38,39,40,41,45,46,47,51,53,54,55,57,59,61,66,67,68,70,76,80,81,82,85,90,91,93,94,95,96,99,101,106,107,108,111,112,117,126,144,146,149,151,153,154,158,167,177,181,192,196,206,210,213,227,229,231,232,244,245,259,272,275,295,296,298,318,324,345,346,349,362,363,365,368,369,370,376,382,385,418,423,437,447,448,464,483,490,493,511,516,518,520,],[41,-106,-111,-93,41,-68,-105,-65,-66,41,-64,-117,-97,41,-100,41,-116,-52,-114,-62,41,-215,-102,-113,-99,-108,-103,-104,-101,-96,-107,-115,-109,-63,-91,-98,-60,-95,-110,-29,-67,-112,41,-94,41,41,-82,-69,41,-87,-90,-89,-88,-61,41,128,-92,-301,-146,-147,-53,-130,-131,-81,-160,-70,41,-83,41,215,41,233,-30,-161,-78,-72,41,-74,-73,-193,-75,-77,-194,-192,-76,-71,341,41,-36,41,-35,-302,-148,-132,-211,-195,-196,-208,-212,41,-209,41,439,41,-34,-31,-149,-150,-133,-134,-210,-199,41,-207,-197,476,-33,-32,-198,-203,-202,-200,-204,-201,-206,-205,]),'INLINE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,34,36,37,38,39,40,41,45,46,47,51,53,54,55,57,59,61,66,67,68,70,76,80,81,85,90,91,93,94,95,96,99,106,107,108,111,117,144,149,151,153,154,158,167,177,181,192,196,206,210,227,229,231,232,244,245,259,272,275,295,296,298,318,324,345,349,362,363,365,368,369,370,376,382,385,418,423,447,448,464,483,490,493,511,516,518,520,],[39,-106,-111,-93,39,-68,-105,-65,-66,39,-64,-117,-97,39,-100,39,-116,-52,-114,-62,39,-215,-102,-113,-99,-108,-103,-104,-101,-96,-107,-115,-109,-63,-91,-98,-60,-95,-110,-29,-67,-112,39,-94,39,39,-82,-69,39,-87,-90,-89,-88,-61,39,-92,-301,-146,-147,-53,-130,-131,-81,-70,39,-83,39,39,-30,-78,-72,39,-74,-73,-193,-75,-77,-194,-192,-76,-71,39,-36,39,-35,-302,-148,-132,-211,-195,-196,-208,-212,39,-209,39,39,-34,-31,-149,-150,-133,-134,-210,-199,39,-207,-197,-33,-32,-198,-203,-202,-200,-204,-201,-206,-205,]),'UNION':([0,3,4,5,7,8,10,11,12,13,15,16,17,19,20,27,31,34,37,39,40,41,46,47,53,54,57,58,59,61,66,77,78,79,80,81,83,90,94,97,99,101,104,106,107,108,111,120,136,137,138,139,140,143,144,146,149,151,153,154,158,165,167,177,181,192,196,206,210,227,229,231,232,244,247,248,258,272,275,279,282,284,295,296,298,318,324,326,345,349,362,363,373,376,382,385,418,423,447,448,464,483,490,493,511,516,518,520,],[43,-93,43,-68,-65,-66,-64,-117,-97,-303,43,-116,-52,-62,-303,43,-96,-115,-63,-98,-60,-95,-29,-67,-303,-94,43,43,-82,-69,43,-10,-9,-84,-61,43,-86,-301,-53,43,-81,-160,-85,-70,43,-83,43,43,43,43,-137,43,-140,43,-30,-161,-78,-72,43,-74,-73,43,-193,-75,-77,-194,-192,-76,-71,43,-36,43,-35,-302,43,43,-138,-211,-195,43,43,43,-196,-208,-212,43,-209,43,43,43,-34,-31,-139,-210,-199,43,-207,-197,-33,-32,-198,-203,-202,-200,-204,-201,-206,-205,]),'__INT128':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,34,36,37,38,39,40,41,45,46,47,51,53,54,55,57,58,59,61,66,67,68,70,76,77,78,79,80,81,83,85,90,91,93,94,95,96,97,99,101,104,106,107,108,111,117,120,136,137,138,139,140,141,142,143,144,146,149,151,153,154,158,165,167,177,181,192,196,206,210,227,229,231,232,244,245,247,248,249,252,253,258,259,272,275,279,282,284,287,295,296,298,318,324,326,345,349,362,363,365,368,369,370,373,376,382,385,418,423,447,448,464,483,490,493,511,516,518,520,],[45,-106,-111,-93,45,-68,-105,-65,-66,45,-64,-117,-97,-303,-100,45,-116,-52,-114,-62,-303,-215,-102,-113,-99,-108,-103,45,-104,-101,-96,-107,-115,-109,-63,-91,-98,-60,-95,-110,-29,-67,-112,-303,-94,45,45,45,-82,-69,45,-87,-90,-89,-88,-10,-9,-84,-61,45,-86,-92,-301,-146,-147,-53,-130,-131,45,-81,-160,-85,-70,45,-83,45,45,45,45,45,-137,45,-140,-128,45,45,-30,-161,-78,-72,45,-74,-73,45,-193,-75,-77,-194,-192,-76,-71,45,-36,45,-35,-302,-148,45,45,-129,-127,-126,-138,-132,-211,-195,45,45,45,45,-196,-208,-212,45,-209,45,45,45,-34,-31,-149,-150,-133,-134,-139,-210,-199,45,-207,-197,-33,-32,-198,-203,-202,-200,-204,-201,-206,-205,]),'IF':([5,61,90,99,107,149,151,153,154,158,167,175,177,181,192,196,206,244,272,275,285,295,296,298,324,329,376,382,418,419,423,451,464,465,467,483,490,493,507,511,513,516,517,518,520,],[-68,-69,-301,-81,201,-78,-72,201,-74,-73,-193,201,-75,-77,-194,-192,-76,-302,-211,-195,201,-196,-208,-212,-209,201,-210,-199,-207,201,-197,201,-198,201,201,-203,-202,-200,201,-204,201,-201,201,-206,-205,]),'ID':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,47,50,51,52,53,54,55,58,61,67,68,70,73,75,76,77,78,79,80,81,82,83,85,90,91,92,93,95,96,99,100,101,102,103,104,106,107,109,111,112,113,117,126,127,128,129,130,131,135,141,142,145,146,148,149,151,152,153,154,157,158,162,163,165,167,171,175,177,181,182,187,188,191,192,195,196,197,204,206,209,210,213,214,215,222,225,227,230,233,234,238,242,243,244,245,249,252,253,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,279,282,284,285,290,291,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,323,324,328,329,330,332,335,336,338,341,342,344,345,346,347,350,354,365,368,369,370,371,372,376,382,383,417,418,419,423,426,427,437,438,439,443,451,453,456,457,460,461,462,464,465,466,467,468,469,476,477,479,483,489,490,493,499,502,504,506,507,511,513,516,517,518,520,],[46,-106,-111,-93,-68,-105,-65,-66,46,-64,-117,-97,-303,-100,46,-116,-114,-62,-303,-215,-102,-113,-99,-108,-103,46,91,-104,-101,-96,-107,46,-115,95,-109,-63,-91,-98,-60,-95,-136,46,-110,-67,-135,-112,-303,-303,-94,46,46,-69,-87,-90,-89,46,46,-88,-10,-9,-84,-61,124,-303,-86,-92,-301,-146,132,-147,-130,-131,-81,-158,-160,-27,-28,-85,-70,202,124,124,-303,46,46,-28,124,-303,124,46,132,132,-128,46,-159,-161,-260,-78,-72,124,202,-74,124,-73,124,124,124,-193,-264,202,-75,-77,-262,320,124,-263,-194,-261,-192,124,-259,-76,-303,-71,-28,124,-303,124,46,46,124,124,-260,124,124,132,-302,-148,-129,-127,-126,124,-132,-224,-227,-228,-219,-222,-226,-225,-220,124,-221,-218,-223,-211,-195,124,124,124,124,124,202,388,124,393,124,-196,-208,-212,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,-209,124,202,124,-11,-12,124,124,124,-260,124,124,-303,-260,124,46,-149,-150,-133,-134,124,46,-210,-199,124,124,-207,202,-197,-176,-303,-28,124,-303,-260,202,124,-303,124,124,124,124,-198,202,124,202,-11,124,124,-260,124,-203,124,-202,-200,-303,124,124,124,202,-204,202,-201,202,-206,-205,]),'_COMPLEX':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,34,36,37,38,39,40,41,45,46,47,51,53,54,55,57,58,59,61,66,67,68,70,76,77,78,79,80,81,83,85,90,91,93,94,95,96,97,99,101,104,106,107,108,111,117,120,136,137,138,139,140,141,142,143,144,146,149,151,153,154,158,165,167,177,181,192,196,206,210,227,229,231,232,244,245,247,248,249,252,253,258,259,272,275,279,282,284,287,295,296,298,318,324,326,345,349,362,363,365,368,369,370,373,376,382,385,418,423,447,448,464,483,490,493,511,516,518,520,],[32,-106,-111,-93,32,-68,-105,-65,-66,32,-64,-117,-97,-303,-100,32,-116,-52,-114,-62,-303,-215,-102,-113,-99,-108,-103,32,-104,-101,-96,-107,-115,-109,-63,-91,-98,-60,-95,-110,-29,-67,-112,-303,-94,32,32,32,-82,-69,32,-87,-90,-89,-88,-10,-9,-84,-61,32,-86,-92,-301,-146,-147,-53,-130,-131,32,-81,-160,-85,-70,32,-83,32,32,32,32,32,-137,32,-140,-128,32,32,-30,-161,-78,-72,32,-74,-73,32,-193,-75,-77,-194,-192,-76,-71,32,-36,32,-35,-302,-148,32,32,-129,-127,-126,-138,-132,-211,-195,32,32,32,32,-196,-208,-212,32,-209,32,32,32,-34,-31,-149,-150,-133,-134,-139,-210,-199,32,-207,-197,-33,-32,-198,-203,-202,-200,-204,-201,-206,-205,]),'AND':([5,11,16,34,61,82,90,99,101,102,103,107,109,112,124,126,127,128,129,146,147,148,149,150,151,152,153,154,157,158,159,162,163,165,166,167,168,169,170,171,173,175,177,178,179,180,181,182,183,185,186,188,190,191,192,194,195,196,197,199,202,203,204,205,206,209,213,214,215,222,233,234,238,242,244,257,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,278,279,280,281,282,283,284,285,289,291,292,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,323,324,325,327,328,329,332,335,336,338,341,342,344,346,347,350,371,376,382,383,387,388,389,390,393,394,397,398,399,400,401,402,403,404,405,406,407,408,409,411,412,413,414,415,417,418,419,423,426,427,437,438,439,443,451,453,454,455,456,457,458,459,460,461,462,464,465,467,468,469,476,477,479,483,489,490,493,499,500,502,505,506,507,510,511,513,516,517,518,520,],[-68,-117,-116,-115,-69,-303,-301,-81,-160,-27,-28,204,204,-303,-288,-28,204,-303,204,-161,-251,-260,-78,-232,-72,204,204,-74,204,-73,-290,204,204,204,-253,-193,-299,-297,-265,-264,-289,204,-75,316,-291,-296,-77,-262,-292,-280,-295,204,-277,-263,-194,-294,-261,-192,204,-279,-288,-293,-259,-278,-76,-303,-28,204,-303,204,204,-260,204,204,-302,204,-224,-227,-228,-219,-222,-226,-225,-220,204,-221,-218,-223,-211,-195,204,204,-255,204,-251,-256,204,-257,204,204,-274,204,-273,204,-196,-208,-212,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,-300,204,-209,-254,-298,204,204,-11,-12,204,204,204,-260,204,-303,-260,204,204,-210,-199,204,-281,-269,-270,-268,-271,-272,316,-242,-239,-241,-235,316,316,-236,316,-233,-243,-245,-234,-238,-240,-237,-246,-244,204,-207,204,-197,-176,-303,-28,204,-303,-260,204,204,-258,-252,-303,204,-267,-266,204,204,204,-198,204,204,-11,204,204,-260,204,-203,204,-202,-200,-303,-275,204,-282,204,204,-276,-204,204,-201,204,-206,-205,]),'PPHASH':([0,5,7,8,10,15,19,37,40,47,61,80,99,106,210,244,295,],[47,-68,-65,-66,-64,47,-62,-63,-60,-67,-69,-61,-81,-70,-71,-302,-196,]),'INT_CONST_OCT':([5,11,16,34,61,82,90,99,101,102,103,107,109,112,126,127,128,129,146,148,149,151,152,153,154,157,158,162,163,165,167,171,175,177,181,182,188,191,192,195,196,197,204,206,209,213,214,215,222,233,234,238,242,244,257,260,261,262,263,264,265,266,267,268,269,270,271,272,275,276,277,279,282,284,285,291,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,323,324,328,329,332,335,336,338,341,342,344,346,347,350,371,376,382,383,417,418,419,423,426,427,437,438,439,443,451,453,456,457,460,461,462,464,465,467,468,469,476,477,479,483,489,490,493,499,502,506,507,511,513,516,517,518,520,],[-68,-117,-116,-115,-69,-303,-301,-81,-160,-27,-28,159,159,-303,-28,159,-303,159,-161,-260,-78,-72,159,159,-74,159,-73,159,159,159,-193,-264,159,-75,-77,-262,159,-263,-194,-261,-192,159,-259,-76,-303,-28,159,-303,159,159,-260,159,159,-302,159,-224,-227,-228,-219,-222,-226,-225,-220,159,-221,-218,-223,-211,-195,159,159,159,159,159,159,159,159,-196,-208,-212,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,-209,159,159,-11,-12,159,159,159,-260,159,-303,-260,159,159,-210,-199,159,159,-207,159,-197,-176,-303,-28,159,-303,-260,159,159,-303,159,159,159,159,-198,159,159,-11,159,159,-260,159,-203,159,-202,-200,-303,159,159,159,-204,159,-201,159,-206,-205,]),'ARROW':([124,159,166,168,169,170,173,179,180,183,185,186,190,194,199,202,203,205,244,289,292,319,327,387,388,389,390,393,394,458,459,500,505,510,],[-288,-290,293,-299,-297,-265,-289,-291,-296,-292,-280,-295,-277,-294,-279,-288,-293,-278,-302,-274,-273,-300,-298,-281,-269,-270,-268,-271,-272,-267,-266,-275,-282,-276,]),'COLON':([1,2,6,11,14,16,17,18,21,22,23,24,25,26,29,30,32,34,36,45,46,51,63,65,69,91,93,94,95,96,105,114,124,141,142,144,147,150,159,161,164,166,168,169,170,173,178,179,180,183,185,186,190,194,199,200,202,203,205,217,229,232,244,245,249,250,252,253,259,278,280,281,283,289,292,319,321,322,325,327,339,340,362,363,365,368,369,370,372,375,377,387,388,389,390,393,394,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,432,433,447,448,454,455,458,459,472,473,487,500,505,510,],[-106,-111,-105,-117,-100,-116,-52,-114,-215,-102,-113,-99,-108,-103,-104,-101,-107,-115,-109,-110,-29,-112,-37,-157,-54,-146,-147,-53,-130,-131,-156,-55,-288,-128,257,-30,-251,-232,-290,-213,285,-253,-299,-297,-265,-289,-230,-291,-296,-292,-280,-295,-277,-294,-279,-216,329,-293,-278,-38,-36,-35,-302,-148,-129,371,-127,-126,-132,-255,-251,-256,-257,-274,-273,-300,419,-229,-254,-298,-44,-43,-34,-31,-149,-150,-133,-134,257,-217,-214,-281,-269,-270,-268,-271,-272,-248,-242,-239,-241,-235,-247,-249,-236,-250,-233,-243,-245,-234,461,-238,-240,-237,-246,-244,-42,-39,-33,-32,-258,-252,-267,-266,-41,-40,-231,-275,-282,-276,]),'PLUSEQUAL':([124,147,159,166,168,169,170,173,179,180,183,185,186,190,194,199,202,203,205,244,278,280,281,283,289,292,319,325,327,387,388,389,390,393,394,454,455,458,459,500,505,510,],[-288,271,-290,-253,-299,-297,-265,-289,-291,-296,-292,-280,-295,-277,-294,-279,-288,-293,-278,-302,-255,-251,-256,-257,-274,-273,-300,-254,-298,-281,-269,-270,-268,-271,-272,-258,-252,-267,-266,-275,-282,-276,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init_declarator':([9,55,113,130,],[62,62,216,240,]),'unary_expression':([107,109,127,129,152,153,157,162,163,165,175,188,197,214,222,233,238,242,257,268,276,277,279,282,284,285,291,294,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,323,328,329,336,338,341,344,350,371,383,417,419,438,451,453,457,460,461,462,465,467,469,476,479,489,502,506,507,513,517,],[147,147,147,147,147,147,278,280,283,147,147,280,325,147,147,147,147,280,280,147,147,147,147,147,147,147,147,147,280,280,280,280,280,280,280,280,280,280,280,280,280,147,280,280,280,280,280,147,147,147,147,147,280,147,147,147,280,280,147,147,147,147,280,147,147,280,147,147,147,147,147,147,147,147,147,147,147,147,]),'declarator':([9,55,113,130,142,372,],[64,64,64,64,250,250,]),'direct_typeid_noparen_declarator':([117,225,],[218,351,]),'typeid_declarator':([9,55,75,113,130,142,372,],[65,65,115,65,65,65,65,]),'type_name':([165,279,282,284,326,],[286,379,380,381,421,]),'designation':([209,427,456,499,],[335,335,335,335,]),'pppragma_directive':([0,15,107,153,175,285,329,419,451,465,467,507,513,517,],[7,7,149,149,149,149,149,149,149,149,149,149,149,149,]),'function_specifier':([0,4,9,13,15,20,53,55,57,66,81,107,111,117,153,227,231,318,345,349,385,],[20,20,70,20,20,20,20,70,20,20,20,20,20,70,20,20,20,20,20,20,20,]),'labeled_statement':([107,153,175,285,329,419,451,465,467,507,513,517,],[151,151,151,151,151,151,151,151,151,151,151,151,]),'pp_directive':([0,15,],[10,10,]),'block_item_list':([107,],[153,]),'struct_declarator_list':([142,],[254,]),'identifier':([81,107,109,111,127,129,152,153,157,162,163,165,175,188,197,214,222,230,233,238,242,257,268,276,277,279,282,284,285,291,294,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,323,328,329,330,336,338,341,344,345,350,371,383,417,419,438,451,453,457,460,461,462,465,466,467,469,476,479,489,502,504,506,507,513,517,],[118,190,190,118,190,190,190,190,190,190,190,190,190,190,190,190,190,358,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,424,190,190,190,190,118,190,190,190,190,190,190,190,190,190,190,190,190,190,491,190,190,190,190,190,190,514,190,190,190,190,]),'specifier_qualifier_list':([97,136,137,143,165,247,248,279,282,284,326,],[142,142,142,142,287,142,142,287,287,287,287,]),'compound_statement':([56,107,110,153,175,285,329,419,451,465,467,507,513,517,],[106,154,210,154,154,154,154,154,154,154,154,154,154,154,]),'designator':([209,331,427,456,499,],[334,425,334,334,334,]),'declaration_specifiers_no_type_opt':([13,20,53,],[79,83,104,]),'function_definition':([0,15,],[19,19,]),'cast_expression':([107,109,127,129,152,153,162,165,175,188,214,222,233,238,242,257,268,276,277,279,282,284,285,291,294,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,323,328,329,336,338,341,344,350,371,383,417,419,438,451,453,457,460,461,462,465,467,469,476,479,489,502,506,507,513,517,],[150,150,150,150,150,150,281,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,455,150,150,150,150,455,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'init_declarator_list':([9,55,],[71,71,]),'expression':([107,152,153,165,175,277,279,282,284,285,294,312,318,323,328,329,417,419,451,460,462,465,467,489,502,506,507,513,517,],[155,273,155,288,155,378,288,288,288,155,395,410,155,420,422,155,155,155,155,486,155,155,155,155,155,515,155,155,155,]),'init_declarator_list_opt':([9,55,],[72,72,]),'enumerator':([92,131,135,243,],[133,133,133,367,]),'identifier_list_opt':([81,111,345,],[119,211,435,]),'constant_expression':([188,242,257,338,371,],[321,366,374,430,449,]),'abstract_declarator':([117,227,287,385,],[224,353,224,353,]),'type_qualifier_list':([52,82,97,112,128,136,137,143,165,215,247,248,279,282,284,326,346,439,],[103,126,139,213,103,139,139,139,139,103,139,139,139,139,139,139,437,103,]),'struct_declarator_list_opt':([142,],[255,]),'expression_statement':([107,153,175,285,329,419,451,465,467,507,513,517,],[158,158,158,158,158,158,158,158,158,158,158,158,]),'offsetof_member_designator':([466,],[492,]),'type_specifier':([0,4,15,27,57,58,66,81,97,107,111,120,136,137,139,143,153,165,227,231,247,248,279,282,284,318,326,345,349,385,],[38,38,38,85,38,85,38,38,141,38,38,85,141,141,249,141,38,141,38,38,141,141,141,141,141,38,141,38,38,38,]),'external_declaration':([0,15,],[40,80,]),'assignment_expression':([107,109,127,129,152,153,165,175,214,222,233,238,268,276,277,279,282,284,285,291,294,312,318,323,328,329,336,341,344,350,417,419,438,451,457,460,462,465,467,469,476,479,489,502,506,507,513,517,],[161,208,235,208,161,161,161,161,235,235,361,364,375,377,161,161,161,161,161,392,161,161,161,161,161,161,208,431,434,235,161,161,235,161,485,161,161,161,161,208,495,498,161,161,161,161,161,161,]),'unary_operator':([107,109,127,129,152,153,157,162,163,165,175,188,197,214,222,233,238,242,257,268,276,277,279,282,284,285,291,294,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,323,328,329,336,338,341,344,350,371,383,417,419,438,451,453,457,460,461,462,465,467,469,476,479,489,502,506,507,513,517,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'designator_list':([209,427,456,499,],[331,331,331,331,]),'struct_declarator':([142,372,],[251,450,]),'postfix_expression':([107,109,127,129,152,153,157,162,163,165,175,188,197,214,222,233,238,242,257,268,276,277,279,282,284,285,291,294,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,323,328,329,336,338,341,344,350,371,383,417,419,438,451,453,457,460,461,462,465,467,469,476,479,489,502,506,507,513,517,],[166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'statement':([107,153,175,285,329,419,451,465,467,507,513,517,],[167,167,297,382,423,464,483,490,493,516,518,520,]),'enumerator_list':([92,131,135,],[134,241,246,]),'translation_unit_or_empty':([0,],[48,]),'type_qualifier_list_opt':([52,82,112,128,215,346,439,],[100,127,214,238,344,438,479,]),'decl_body':([0,4,15,57,66,107,153,318,],[49,49,49,49,49,49,49,49,]),'designation_opt':([209,427,456,499,],[336,469,336,469,]),'primary_expression':([107,109,127,129,152,153,157,162,163,165,175,188,197,214,222,233,238,242,257,268,276,277,279,282,284,285,291,294,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,323,328,329,336,338,341,344,350,371,383,417,419,438,451,453,457,460,461,462,465,467,469,476,479,489,502,506,507,513,517,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'selection_statement':([107,153,175,285,329,419,451,465,467,507,513,517,],[177,177,177,177,177,177,177,177,177,177,177,177,]),'parameter_type_list':([81,111,227,345,349,385,],[125,212,357,436,357,357,]),'parameter_list':([81,111,227,345,349,385,],[123,123,123,123,123,123,]),'brace_open':([28,35,56,91,93,95,96,107,109,110,129,153,175,285,329,336,383,419,451,452,453,454,465,467,469,507,513,517,],[92,97,107,131,135,136,137,107,209,107,209,107,107,107,107,209,456,107,107,456,456,456,107,107,209,107,107,107,]),'block_item_list_opt':([107,],[172,]),'parameter_declaration':([81,111,227,231,345,349,385,],[116,116,116,359,116,116,116,]),'typedef_name':([0,4,15,27,57,58,66,81,97,107,111,120,136,137,139,143,153,165,227,231,247,248,279,282,284,318,326,345,349,385,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'expression_opt':([107,153,175,285,318,329,417,419,451,462,465,467,489,502,507,513,517,],[176,176,176,176,416,176,463,176,176,488,176,176,503,512,176,176,176,]),'id_declarator':([0,9,15,27,44,55,58,75,113,117,130,142,227,372,],[4,66,4,84,98,105,84,98,105,219,105,105,98,105,]),'abstract_declarator_opt':([117,287,],[220,386,]),'assignment_expression_opt':([127,214,222,350,438,],[237,343,348,444,478,]),'brace_close':([134,143,172,241,246,247,248,337,427,484,499,],[245,259,295,365,368,369,370,429,470,500,510,]),'declaration_specifiers':([0,4,15,57,66,81,107,111,153,227,231,318,345,349,385,],[9,55,9,55,55,117,55,117,55,117,117,55,117,117,117,]),'struct_declaration':([97,136,137,143,247,248,],[138,138,138,258,258,258,]),'type_qualifier':([0,4,9,13,15,20,52,53,55,57,66,81,82,97,103,107,111,112,117,126,128,136,137,139,142,143,153,165,213,215,227,231,247,248,279,282,284,287,318,326,345,346,349,385,437,439,],[13,13,67,13,13,13,101,13,67,13,13,13,101,101,146,13,13,101,67,146,101,101,101,146,252,101,13,101,146,101,13,13,101,101,101,101,101,252,13,101,13,101,13,13,146,101,]),'translation_unit':([0,],[15,]),'direct_abstract_declarator':([117,225,227,287,354,384,385,],[223,352,223,223,352,352,223,]),'direct_id_declarator':([0,9,15,27,33,44,55,58,73,75,113,117,130,142,225,227,354,372,],[17,17,17,17,94,17,17,17,94,17,17,17,17,17,94,17,94,17,]),'type_specifier_no_typeid':([0,4,9,15,27,55,57,58,66,81,97,107,111,117,120,136,137,139,142,143,153,165,227,231,247,248,279,282,284,287,318,326,345,349,385,],[18,18,68,18,18,68,18,18,18,18,18,18,18,68,18,18,18,18,253,18,18,18,18,18,18,18,18,18,18,253,18,18,18,18,18,]),'jump_statement':([107,153,175,285,329,419,451,465,467,507,513,517,],[181,181,181,181,181,181,181,181,181,181,181,181,]),'declaration_list_opt':([4,66,],[56,110,]),'struct_or_union_specifier':([0,4,15,27,57,58,66,81,97,107,111,120,136,137,139,143,153,165,227,231,247,248,279,282,284,318,326,345,349,385,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'direct_typeid_declarator':([9,55,73,75,113,130,142,372,],[69,69,114,69,69,69,69,69,]),'declaration_list':([4,66,],[57,57,]),'initializer_list_opt':([209,],[337,]),'unified_wstring_literal':([107,109,127,129,152,153,157,162,163,165,175,188,197,214,222,233,238,242,257,268,276,277,279,282,284,285,291,294,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,323,328,329,336,338,341,344,350,371,383,417,419,438,451,453,457,460,461,462,465,467,469,476,479,489,502,506,507,513,517,],[185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,]),'declaration_specifiers_no_type':([0,4,13,15,20,53,57,66,81,107,111,153,227,231,318,345,349,385,],[27,58,77,27,77,77,58,58,120,58,120,58,120,120,58,120,120,120,]),'binary_expression':([107,109,127,129,152,153,165,175,188,214,222,233,238,242,257,268,276,277,279,282,284,285,291,294,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,323,328,329,336,338,341,344,350,371,417,419,438,451,457,460,461,462,465,467,469,476,479,489,502,506,507,513,517,],[178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,397,398,399,400,401,402,403,404,405,406,407,408,409,178,411,412,413,414,415,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,]),'initializer_list':([209,456,],[333,484,]),'argument_expression_list':([291,],[391,]),'block_item':([107,153,],[192,275,]),'pointer':([0,9,15,27,44,55,58,75,100,113,117,130,142,227,287,372,385,],[33,73,33,33,33,73,33,73,145,73,225,73,73,354,384,73,384,]),'identifier_list':([81,111,345,],[121,121,121,]),'struct_or_union':([0,4,15,27,57,58,66,81,97,107,111,120,136,137,139,143,153,165,227,231,247,248,279,282,284,318,326,345,349,385,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'initializer':([109,129,336,469,],[207,239,428,494,]),'declaration':([0,4,15,57,66,107,153,318,],[37,59,37,108,59,196,196,417,]),'struct_declaration_list':([97,136,137,],[143,247,248,]),'id_init_declarator_list_opt':([27,58,],[86,86,]),'empty':([0,4,9,13,20,27,52,53,55,58,66,81,82,107,111,112,117,127,128,142,153,175,209,214,215,222,227,285,287,318,329,345,346,349,350,385,417,419,427,438,439,451,456,462,465,467,489,499,502,507,513,517,],[42,60,74,78,78,87,102,78,74,87,60,122,102,160,122,102,226,236,102,256,274,274,332,236,102,236,355,274,226,274,274,122,102,355,236,355,274,274,468,236,102,274,468,274,274,274,274,468,274,274,274,274,]),'unified_string_literal':([107,109,127,129,152,153,157,162,163,165,175,188,197,214,222,233,238,242,257,268,276,277,279,282,284,285,291,294,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,323,328,329,336,338,341,344,350,371,383,417,419,438,451,453,457,460,461,462,465,467,469,476,479,489,502,506,507,513,517,],[199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,]),'parameter_type_list_opt':([227,349,385,],[356,442,356,]),'conditional_expression':([107,109,127,129,152,153,165,175,188,214,222,233,238,242,257,268,276,277,279,282,284,285,291,294,312,318,323,328,329,336,338,341,344,350,371,417,419,438,451,457,460,461,462,465,467,469,476,479,489,502,506,507,513,517,],[200,200,200,200,200,200,200,200,322,200,200,200,200,322,322,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,322,200,200,200,322,200,200,200,200,200,200,487,200,200,200,200,200,200,200,200,200,200,200,200,]),'storage_class_specifier':([0,4,9,13,15,20,53,55,57,66,81,107,111,117,153,227,231,318,345,349,385,],[53,53,76,53,53,53,53,76,53,53,53,53,53,76,53,53,53,53,53,53,53,]),'id_init_declarator':([27,58,],[88,88,]),'assignment_operator':([147,],[268,]),'typeid_noparen_declarator':([117,],[228,]),'enum_specifier':([0,4,15,27,57,58,66,81,97,107,111,120,136,137,139,143,153,165,227,231,247,248,279,282,284,318,326,345,349,385,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'id_init_declarator_list':([27,58,],[89,89,]),'constant':([107,109,127,129,152,153,157,162,163,165,175,188,197,214,222,233,238,242,257,268,276,277,279,282,284,285,291,294,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,323,328,329,336,338,341,344,350,371,383,417,419,438,451,453,457,460,461,462,465,467,469,476,479,489,502,506,507,513,517,],[205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,]),'iteration_statement':([107,153,175,285,329,419,451,465,467,507,513,517,],[206,206,206,206,206,206,206,206,206,206,206,206,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',944),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',952),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',957),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',958),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',966),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',967),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',972),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',977),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',978),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',983),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',984),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',985),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',996),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',997),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1012),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1013),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1124),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1125),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1154),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1155),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1161),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1169),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1170),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1189),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1190),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1201),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1232),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1233),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1242),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1247),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1248),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1256),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1257),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1268),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1276),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1277),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1282),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1283),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1288),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1299),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1307),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1312),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1322),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1326),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1337),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1346),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1357),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1366),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1376),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1387),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1388),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1395),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1396),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1402),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1408),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1412),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1416),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1420),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1424),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1428),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1433),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1437),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1441),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1445),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1450),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1454),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1458),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1462),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1463),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1468),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1475),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1476),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1488),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1492),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1493),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1506),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1507),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1508),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1509),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1510),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1521),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1525),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1526),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1534),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1535),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1536),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1537),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1538),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1560),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1564),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1568),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1572),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1573),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1574),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1579),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1580),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1588),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1589),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1590),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1591),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1592),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1598),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1602),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1606),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1607),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1613),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1614),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1615),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1621),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1622),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1628),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1633),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1637),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1641),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1642),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1647),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1651),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1659),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1660),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1661),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1674),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1675),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1684),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1688),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1689),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1690),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1691),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1697),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1698),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1704),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1705),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1716),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1717),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1727),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1728),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1738),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1744),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1750),
]
