
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'EQUALS':([7,30,58,79,80,82,85,88,91,114,120,121,130,141,147,149,150,151,156,158,159,161,162,165,166,167,169,172,173,174,181,189,203,214,232,243,262,264,281,283,290,311,312,314,315,317,319,321,322,363,364,375,377,384,385,387,389,390,395,419,420,446,447,454,455,457,459,460,481,482,500,503,510,],[-52,-29,105,-37,-156,-54,129,-157,-53,-288,-30,-156,-55,257,-299,-265,277,-253,-289,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-280,-35,-36,-288,-38,-302,378,-177,-273,-274,-257,-298,-254,-255,-251,-256,-300,-31,-34,-43,-44,-180,-178,-271,-272,-268,-269,-270,-281,-32,-33,-39,-42,-179,-266,-267,-252,-258,-40,-41,-275,-282,-276,]),'FOR':([16,66,68,92,123,206,207,208,211,215,216,218,220,221,227,228,229,243,341,344,346,349,352,353,357,358,435,439,440,441,444,477,478,479,480,496,497,498,509,514,515,516,518,519,520,],[-68,-81,-69,-301,204,204,204,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-302,-211,-195,-212,204,-196,-209,204,-208,-210,-197,204,-207,-199,204,204,-198,204,-202,-203,-200,204,204,-204,-201,204,-206,-205,]),'RETURN':([16,66,68,92,123,206,207,208,211,215,216,218,220,221,227,228,229,243,341,344,346,349,352,353,357,358,435,439,440,441,444,477,478,479,480,496,497,498,509,514,515,516,518,519,520,],[-68,-81,-69,-301,205,205,205,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-302,-211,-195,-212,205,-196,-209,205,-208,-210,-197,205,-207,-199,205,205,-198,205,-202,-203,-200,205,205,-204,-201,205,-206,-205,]),'UNSIGNED':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,55,56,57,61,65,66,68,69,70,71,72,75,76,78,80,81,83,91,92,93,94,95,97,98,99,100,104,111,113,120,122,123,124,128,132,133,134,135,136,137,138,139,146,152,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,241,242,243,244,245,247,248,254,256,287,291,313,316,318,321,322,326,335,340,341,344,346,352,353,358,365,366,368,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[39,-107,-108,-99,-303,39,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,39,-303,-117,39,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,39,-63,-91,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-92,39,-81,-69,39,39,-82,39,-84,-89,-87,39,-90,-88,-53,-301,-130,-131,39,-146,-147,-61,-85,-160,39,39,-30,-83,39,-70,39,39,39,39,39,39,-140,-128,-137,-161,39,-35,39,39,-36,39,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,39,39,-302,-132,-138,-127,-126,-129,-148,39,39,39,39,39,-31,-34,39,39,39,-211,-195,-212,-196,-209,-208,-133,-134,-139,-149,-150,39,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'DEFAULT':([16,66,68,92,123,206,207,208,211,215,216,218,220,221,227,228,229,243,341,344,346,349,352,353,357,358,435,439,440,441,444,477,478,479,480,496,497,498,509,514,515,516,518,519,520,],[-68,-81,-69,-301,230,230,230,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-302,-211,-195,-212,230,-196,-209,230,-208,-210,-197,230,-207,-199,230,230,-198,230,-202,-203,-200,230,230,-204,-201,230,-206,-205,]),'INT_CONST_BIN':([10,16,22,50,64,66,68,92,102,103,104,105,107,108,109,123,127,129,146,148,152,153,154,155,160,163,164,168,170,177,178,183,187,188,195,205,206,207,208,211,215,216,218,219,220,221,227,228,229,234,235,236,243,250,257,261,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,325,333,334,340,341,344,346,347,348,349,352,353,355,356,357,358,359,361,362,370,378,380,394,421,422,423,431,434,435,439,440,441,444,451,452,456,458,461,463,465,466,468,474,476,477,478,479,480,494,496,497,498,499,501,506,509,514,515,516,518,519,520,],[-116,-68,-117,-115,-303,-81,-69,-301,-27,-28,-160,159,-303,159,-28,159,-303,159,-161,-303,159,159,-263,-261,-260,159,159,-264,-259,-262,159,159,-260,159,159,159,159,159,-78,-77,-73,-193,-194,159,-76,-72,-192,-75,-74,-303,159,-28,-302,159,159,159,-12,-11,159,-219,-224,-221,-225,-220,-222,-226,-228,-218,159,-223,-227,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,-303,-260,159,159,-211,-195,-212,159,159,159,-196,-209,159,159,159,-208,159,-260,159,159,-176,-303,159,-303,159,-28,-260,159,-210,-197,159,-207,-199,159,-11,159,-303,159,159,159,-260,159,159,159,159,159,-198,159,159,-202,-203,-200,-303,159,159,159,159,-204,-201,159,-206,-205,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,43,44,46,47,48,49,50,51,53,54,55,56,57,61,64,66,68,69,70,75,76,77,78,79,81,82,83,86,91,92,93,94,97,98,99,100,101,102,103,104,105,106,107,108,109,113,114,120,123,124,127,129,130,131,135,138,145,146,147,148,149,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,177,178,179,181,183,187,188,189,191,192,195,196,197,200,203,204,205,206,207,208,211,212,213,214,215,216,218,219,220,221,226,227,228,229,232,233,234,235,236,243,244,247,248,250,254,256,257,261,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,287,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,316,319,321,322,325,329,333,334,336,337,340,341,344,346,347,348,349,352,353,355,356,357,358,359,361,362,363,364,365,366,367,370,373,374,378,380,384,385,387,389,390,391,392,394,395,419,420,421,422,423,426,427,428,429,431,434,435,436,439,440,441,444,446,447,451,452,455,456,457,458,461,463,465,466,468,469,470,471,472,473,474,476,477,478,479,480,481,482,490,491,494,496,497,498,499,500,501,503,504,505,506,509,510,514,515,516,518,519,520,],[13,-107,-108,-99,-303,13,-102,65,-112,-62,-116,13,-106,-66,-68,-111,-215,-65,-303,-117,77,-67,-100,-97,-103,-93,-95,-29,-101,13,-113,-104,-96,-64,-110,-109,13,-63,-91,-303,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-92,-303,-81,-69,77,13,-84,-89,77,-87,-37,-90,128,-88,77,65,-301,-130,-131,-146,-147,-61,-85,-158,-27,-28,-160,152,77,-303,152,-28,192,-288,-30,152,-70,-303,152,128,77,77,-128,-159,-161,-299,-303,-265,285,152,291,-263,-261,-289,-297,-292,-260,-290,-279,313,313,-295,-293,-278,-264,-291,-259,-277,-296,-294,-262,316,318,-280,152,-260,152,-35,326,192,152,335,192,-45,-36,340,152,152,152,-78,-77,347,348,-288,-73,-193,-194,316,-76,-72,356,-192,-75,-74,-38,-71,-303,152,-28,-302,-132,-127,-126,316,-129,-148,316,152,-12,-11,316,-219,-224,-221,-225,-220,-222,-226,-228,-218,152,-223,-227,-273,152,-274,152,391,152,316,316,316,316,316,316,316,316,316,316,316,152,316,316,316,316,316,316,316,-298,152,152,-300,-31,-34,-303,192,-260,152,335,326,152,-211,-195,-212,152,152,152,-196,-209,152,152,152,-208,152,-260,152,-43,-44,-133,-134,77,316,-149,-150,-176,-303,-271,-272,-268,-269,-270,391,391,316,-281,-32,-33,-303,152,-28,-185,-191,-187,-189,-260,152,-210,476,-197,152,-207,-199,-39,-42,152,-11,-266,152,-267,-303,316,316,152,-260,152,-50,-51,-186,-188,-190,152,152,152,152,-198,152,-40,-41,-49,-46,152,-202,-203,-200,-303,-275,152,-282,-47,-48,152,152,-276,152,-204,-201,152,-206,-205,]),'SIZEOF':([10,16,22,50,64,66,68,92,102,103,104,105,107,108,109,123,127,129,146,148,152,153,154,155,160,163,164,168,170,177,178,183,187,188,195,205,206,207,208,211,215,216,218,219,220,221,227,228,229,234,235,236,243,250,257,261,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,325,333,334,340,341,344,346,347,348,349,352,353,355,356,357,358,359,361,362,370,378,380,394,421,422,423,431,434,435,439,440,441,444,451,452,456,458,461,463,465,466,468,474,476,477,478,479,480,494,496,497,498,499,501,506,509,514,515,516,518,519,520,],[-116,-68,-117,-115,-303,-81,-69,-301,-27,-28,-160,153,-303,153,-28,153,-303,153,-161,-303,153,153,-263,-261,-260,153,153,-264,-259,-262,153,153,-260,153,153,153,153,153,-78,-77,-73,-193,-194,153,-76,-72,-192,-75,-74,-303,153,-28,-302,153,153,153,-12,-11,153,-219,-224,-221,-225,-220,-222,-226,-228,-218,153,-223,-227,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,-303,-260,153,153,-211,-195,-212,153,153,153,-196,-209,153,153,153,-208,153,-260,153,153,-176,-303,153,-303,153,-28,-260,153,-210,-197,153,-207,-199,153,-11,153,-303,153,153,153,-260,153,153,153,153,153,-198,153,153,-202,-203,-200,-303,153,153,153,153,-204,-201,153,-206,-205,]),'PLUSEQUAL':([114,147,149,150,151,156,158,159,161,162,165,166,167,169,172,173,174,181,214,243,281,283,290,311,312,314,315,317,319,384,385,387,389,390,395,455,457,459,460,500,503,510,],[-288,-299,-265,279,-253,-289,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-280,-288,-302,-273,-274,-257,-298,-254,-255,-251,-256,-300,-271,-272,-268,-269,-270,-281,-266,-267,-252,-258,-275,-282,-276,]),'DO':([16,66,68,92,123,206,207,208,211,215,216,218,220,221,227,228,229,243,341,344,346,349,352,353,357,358,435,439,440,441,444,477,478,479,480,496,497,498,509,514,515,516,518,519,520,],[-68,-81,-69,-301,207,207,207,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-302,-211,-195,-212,207,-196,-209,207,-208,-210,-197,207,-207,-199,207,207,-198,207,-202,-203,-200,207,207,-204,-201,207,-206,-205,]),'SEMI':([0,1,2,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,66,68,69,70,75,76,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,97,98,99,100,114,120,121,123,124,130,132,133,134,135,137,138,139,147,149,150,151,156,157,158,159,161,162,165,166,167,169,171,172,173,174,175,176,180,181,182,189,203,205,206,207,208,209,210,211,214,215,216,217,218,220,221,223,225,227,228,229,231,232,233,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,256,281,283,290,311,312,314,315,317,319,321,322,340,341,342,343,344,346,349,351,352,353,354,357,358,363,364,365,366,368,369,373,374,379,382,384,385,387,389,390,395,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,419,420,433,434,435,439,440,441,442,444,446,447,449,450,453,455,457,459,460,474,475,477,478,479,480,481,482,486,493,496,497,498,500,503,508,509,510,514,515,516,518,519,520,],[15,-107,-108,-99,-303,-303,-102,-52,-112,-62,-116,66,-106,-66,-68,-111,-215,-65,-303,-117,-303,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,15,-63,-91,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-124,-80,-122,-92,-16,-15,-81,-69,-303,-303,-84,-89,-87,-37,-156,-90,-54,-88,-118,-120,-79,-157,-19,-20,-53,-301,-130,-131,137,-146,-147,-61,-85,-288,-30,-156,-303,-70,-55,137,137,137,-303,-140,-128,-137,-299,-265,-251,-253,-289,-230,-297,-292,-290,-279,-295,-293,-278,-291,-125,-277,-296,-294,-216,-171,-232,-280,-123,-35,-36,341,-303,-303,-78,346,-213,-77,-288,-73,-193,-13,-194,-76,-72,353,-14,-192,-75,-74,358,-38,-71,-121,-119,137,137,-302,-132,-138,-26,-127,-126,368,-141,-143,-25,-129,-148,-273,-274,-257,-298,-254,-255,-251,-256,-300,-31,-34,-303,-211,435,-13,-195,-212,-303,-229,-196,-209,441,-303,-208,-43,-44,-133,-134,-139,-145,-149,-150,-172,-217,-271,-272,-268,-269,-270,-281,-241,-238,-245,-235,-249,-242,-248,-234,-236,-246,-240,-233,-237,-243,-250,-247,-239,-244,-32,-33,474,-303,-210,-197,-303,-207,-214,-199,-39,-42,-142,-144,-173,-266,-267,-252,-258,-303,494,-303,-303,-198,-303,-40,-41,-231,506,-202,-203,-200,-275,-282,515,-303,-276,-303,-204,-201,-303,-206,-205,]),'PPPRAGMA':([0,9,15,16,19,24,37,41,43,54,66,68,92,99,123,124,206,207,208,211,215,216,218,220,221,227,228,229,233,243,341,344,346,349,352,353,357,358,435,439,440,441,444,477,478,479,480,496,497,498,509,514,515,516,518,519,520,],[16,-62,-66,-68,-65,-67,-64,16,-63,-60,-81,-69,-301,-61,16,-70,16,16,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,-302,-211,-195,-212,16,-196,-209,16,-208,-210,-197,16,-207,-199,16,16,-198,16,-202,-203,-200,16,16,-204,-201,16,-206,-205,]),'INT_CONST_DEC':([10,16,22,50,64,66,68,92,102,103,104,105,107,108,109,123,127,129,146,148,152,153,154,155,160,163,164,168,170,177,178,183,187,188,195,205,206,207,208,211,215,216,218,219,220,221,227,228,229,234,235,236,243,250,257,261,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,325,333,334,340,341,344,346,347,348,349,352,353,355,356,357,358,359,361,362,370,378,380,394,421,422,423,431,434,435,439,440,441,444,451,452,456,458,461,463,465,466,468,474,476,477,478,479,480,494,496,497,498,499,501,506,509,514,515,516,518,519,520,],[-116,-68,-117,-115,-303,-81,-69,-301,-27,-28,-160,156,-303,156,-28,156,-303,156,-161,-303,156,156,-263,-261,-260,156,156,-264,-259,-262,156,156,-260,156,156,156,156,156,-78,-77,-73,-193,-194,156,-76,-72,-192,-75,-74,-303,156,-28,-302,156,156,156,-12,-11,156,-219,-224,-221,-225,-220,-222,-226,-228,-218,156,-223,-227,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-303,-260,156,156,-211,-195,-212,156,156,156,-196,-209,156,156,156,-208,156,-260,156,156,-176,-303,156,-303,156,-28,-260,156,-210,-197,156,-207,-199,156,-11,156,-303,156,156,156,-260,156,156,156,156,156,-198,156,156,-202,-203,-200,-303,156,156,156,156,-204,-201,156,-206,-205,]),'TYPEID':([0,1,2,3,4,5,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,53,54,55,56,57,61,65,66,68,69,70,71,72,75,76,77,78,80,81,83,86,91,92,93,94,95,97,98,99,100,101,102,103,104,106,111,113,120,122,123,124,128,131,132,133,134,135,136,137,138,139,145,146,152,189,192,197,202,203,206,208,211,215,216,218,220,221,227,228,229,233,241,242,243,244,245,247,248,254,256,284,286,291,313,316,318,321,322,326,335,340,341,344,346,352,353,358,365,366,367,368,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[18,-107,-108,-99,-303,18,-102,-52,-112,-62,-116,-136,-106,-66,-68,-111,-215,-65,18,-303,-117,79,-67,-100,-97,-103,-93,-95,-29,-101,94,-113,-104,-96,-64,-110,-109,98,18,-135,-63,-91,-303,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-92,18,-81,-69,79,18,-82,18,-84,-89,79,-87,18,-90,-88,79,-53,-301,-130,-131,18,-146,-147,-61,-85,-158,-27,-28,-160,79,18,200,-30,-83,18,-70,18,79,18,18,18,79,18,-140,-128,-137,-159,-161,18,-35,18,200,18,-36,18,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,18,18,-302,-132,-138,-127,-126,-129,-148,385,390,18,18,18,18,-31,-34,18,18,18,-211,-195,-212,-196,-209,-208,-133,-134,79,-139,-149,-150,18,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'COMMA':([1,2,3,6,7,8,10,14,17,18,22,25,26,27,28,29,30,31,34,35,36,38,39,44,47,48,49,50,51,53,58,60,61,62,76,78,79,80,81,82,83,84,85,88,90,91,93,94,97,98,101,102,103,104,112,113,114,115,116,119,120,121,130,138,140,141,142,145,146,147,149,150,151,156,157,158,159,161,162,165,166,167,169,171,172,173,174,175,176,180,181,182,189,191,193,194,196,197,198,199,200,201,203,210,214,225,232,239,240,243,244,246,247,248,251,252,254,255,256,258,259,266,281,283,287,289,290,311,312,314,315,317,319,321,322,324,336,337,339,342,351,363,364,365,366,369,371,372,373,374,376,379,382,383,384,385,386,387,388,389,390,392,393,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,418,419,420,426,427,428,429,437,438,442,443,446,447,449,450,453,455,457,459,460,469,470,471,472,473,481,482,483,484,485,486,490,491,495,500,503,504,505,510,511,],[-107,-108,-99,-102,-52,-112,-116,-106,-111,-215,-117,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-110,-109,-91,-303,-94,-105,-115,-114,-98,-124,-122,-92,106,-89,-87,-37,-156,-90,-54,-88,-118,-120,-157,131,-53,-130,-131,-146,-147,-158,-27,-28,-160,190,-303,-288,202,-164,-169,-30,-156,-55,-128,255,-154,-151,-159,-161,-299,-265,-251,-253,-289,-230,-297,-292,-290,-279,-295,-293,-278,-291,-125,-277,-296,-294,-216,-171,-232,-280,-123,-35,-56,-166,-2,-184,-182,-168,-167,-45,-1,-36,-213,-288,355,-38,-121,-119,-302,-132,367,-127,-126,-141,-143,-129,-152,-148,255,255,380,-273,-274,-303,355,-257,-298,-254,-255,-251,-256,-300,-31,-34,-170,-183,-57,-165,355,-229,-43,-44,-133,-134,-145,-153,-155,-149,-150,-174,-172,-217,355,-271,-272,456,-268,-286,-269,-270,-182,-181,-281,-241,-238,-245,-235,-249,-242,-248,-234,-236,-246,-240,355,-233,-237,-243,-250,-247,-239,-244,464,-32,-33,-185,-191,-187,-189,355,355,-214,355,-39,-42,-142,-144,-173,-266,-267,-252,-258,-50,-51,-186,-188,-190,-40,-41,-175,-287,499,-231,-49,-46,355,-275,-282,-47,-48,-276,355,]),'RSHIFTEQUAL':([114,147,149,150,151,156,158,159,161,162,165,166,167,169,172,173,174,181,214,243,281,283,290,311,312,314,315,317,319,384,385,387,389,390,395,455,457,459,460,500,503,510,],[-288,-299,-265,275,-253,-289,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-280,-288,-302,-273,-274,-257,-298,-254,-255,-251,-256,-300,-271,-272,-268,-269,-270,-281,-266,-267,-252,-258,-275,-282,-276,]),'_BOOL':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,55,56,57,61,65,66,68,69,70,71,72,75,76,78,80,81,83,91,92,93,94,95,97,98,99,100,104,111,113,120,122,123,124,128,132,133,134,135,136,137,138,139,146,152,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,241,242,243,244,245,247,248,254,256,287,291,313,316,318,321,322,326,335,340,341,344,346,352,353,358,365,366,368,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[25,-107,-108,-99,-303,25,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,25,-303,-117,25,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,25,-63,-91,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-92,25,-81,-69,25,25,-82,25,-84,-89,-87,25,-90,-88,-53,-301,-130,-131,25,-146,-147,-61,-85,-160,25,25,-30,-83,25,-70,25,25,25,25,25,25,-140,-128,-137,-161,25,-35,25,25,-36,25,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,25,25,-302,-132,-138,-127,-126,-129,-148,25,25,25,25,25,-31,-34,25,25,25,-211,-195,-212,-196,-209,-208,-133,-134,-139,-149,-150,25,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'AUTO':([0,1,2,3,4,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,61,65,66,68,69,71,72,76,78,80,81,83,91,92,93,94,97,98,99,113,120,122,123,124,128,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,243,244,256,321,322,326,335,340,341,344,346,352,353,358,365,366,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[28,-107,-108,-99,28,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,28,28,-117,28,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,28,-63,-91,28,-94,-105,-115,-114,-98,-60,-92,28,-81,-69,28,-82,28,-89,-87,28,-90,-88,-53,-301,-130,-131,-146,-147,-61,28,-30,-83,28,-70,28,-35,28,28,-36,28,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,-302,-132,-148,-31,-34,28,28,28,-211,-195,-212,-196,-209,-208,-133,-134,-149,-150,28,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'MODEQUAL':([114,147,149,150,151,156,158,159,161,162,165,166,167,169,172,173,174,181,214,243,281,283,290,311,312,314,315,317,319,384,385,387,389,390,395,455,457,459,460,500,503,510,],[-288,-299,-265,274,-253,-289,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-280,-288,-302,-273,-274,-257,-298,-254,-255,-251,-256,-300,-271,-272,-268,-269,-270,-281,-266,-267,-252,-258,-275,-282,-276,]),'LSHIFT':([114,147,149,150,151,156,157,158,159,161,162,165,166,167,169,172,173,174,180,181,214,243,281,283,290,311,312,314,315,317,319,384,385,387,389,390,395,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,455,457,459,460,500,503,510,],[-288,-299,-265,-251,-253,-289,309,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-232,-280,-288,-302,-273,-274,-257,-298,-254,-255,-251,-256,-300,-271,-272,-268,-269,-270,-281,309,-238,309,-235,309,309,309,-234,-236,309,309,-233,-237,309,309,309,-239,309,-266,-267,-252,-258,-275,-282,-276,]),'SWITCH':([16,66,68,92,123,206,207,208,211,215,216,218,220,221,227,228,229,243,341,344,346,349,352,353,357,358,435,439,440,441,444,477,478,479,480,496,497,498,509,514,515,516,518,519,520,],[-68,-81,-69,-301,212,212,212,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-302,-211,-195,-212,212,-196,-209,212,-208,-210,-197,212,-207,-199,212,212,-198,212,-202,-203,-200,212,212,-204,-201,212,-206,-205,]),'WHILE':([16,66,68,92,123,206,207,208,211,215,216,218,220,221,227,228,229,243,341,344,345,346,349,352,353,357,358,435,439,440,441,444,477,478,479,480,496,497,498,509,514,515,516,518,519,520,],[-68,-81,-69,-301,213,213,213,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-302,-211,-195,436,-212,213,-196,-209,213,-208,-210,-197,213,-207,-199,213,213,-198,213,-202,-203,-200,213,213,-204,-201,213,-206,-205,]),'XOREQUAL':([114,147,149,150,151,156,158,159,161,162,165,166,167,169,172,173,174,181,214,243,281,283,290,311,312,314,315,317,319,384,385,387,389,390,395,455,457,459,460,500,503,510,],[-288,-299,-265,269,-253,-289,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-280,-288,-302,-273,-274,-257,-298,-254,-255,-251,-256,-300,-271,-272,-268,-269,-270,-281,-266,-267,-252,-258,-275,-282,-276,]),'ID':([0,1,2,3,4,5,6,8,9,10,11,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,53,54,55,56,57,61,64,65,66,68,69,70,75,76,77,78,81,83,86,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,113,123,124,127,128,129,131,135,138,143,144,145,146,148,152,153,154,155,160,163,164,168,170,177,178,183,187,188,190,192,195,197,205,206,207,208,211,215,216,218,219,220,221,224,227,228,229,233,234,235,236,243,244,247,248,250,254,255,256,257,260,261,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,284,285,286,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,325,326,329,333,334,340,341,344,346,347,348,349,352,353,355,356,357,358,359,361,362,365,366,367,370,373,374,378,380,394,421,422,423,431,434,435,439,440,441,444,451,452,456,458,461,463,464,465,466,468,474,476,477,478,479,480,494,496,497,498,499,501,502,506,509,514,515,516,518,519,520,],[30,-107,-108,-99,-303,30,-102,-112,-62,-116,-136,30,-106,-66,-68,-111,-215,-65,-303,-117,30,-67,-100,-97,-103,-93,-95,-101,30,93,-113,-104,-96,-64,-110,-109,97,30,-135,-63,-91,-303,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-92,-303,114,-81,-69,30,30,-84,-89,30,-87,-90,-88,30,-301,-130,-131,141,-146,-147,-61,-85,-158,-27,-28,-160,114,30,-303,114,-28,30,214,-70,-303,114,114,30,30,-128,141,141,-159,-161,-303,114,114,-263,-261,-260,114,114,-264,-259,-262,114,114,-260,114,114,30,114,30,114,214,214,-78,-77,-73,-193,-194,114,-76,-72,354,-192,-75,-74,-71,-303,114,-28,-302,-132,-127,-126,114,-129,141,-148,114,114,114,-12,-11,114,-219,-224,-221,-225,-220,-222,-226,-228,-218,114,-223,-227,114,384,114,389,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-303,114,30,-260,114,114,-211,-195,-212,114,114,214,-196,-209,114,114,214,-208,114,-260,114,-133,-134,30,114,-149,-150,-176,-303,114,-303,114,-28,-260,114,-210,-197,214,-207,-199,114,-11,114,-303,114,114,114,114,-260,114,114,114,214,214,-198,214,114,-202,-203,-200,-303,114,114,114,214,214,-204,-201,214,-206,-205,]),'CHAR':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,55,56,57,61,65,66,68,69,70,71,72,75,76,78,80,81,83,91,92,93,94,95,97,98,99,100,104,111,113,120,122,123,124,128,132,133,134,135,136,137,138,139,146,152,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,241,242,243,244,245,247,248,254,256,287,291,313,316,318,321,322,326,335,340,341,344,346,352,353,358,365,366,368,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[31,-107,-108,-99,-303,31,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,31,-303,-117,31,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,31,-63,-91,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-92,31,-81,-69,31,31,-82,31,-84,-89,-87,31,-90,-88,-53,-301,-130,-131,31,-146,-147,-61,-85,-160,31,31,-30,-83,31,-70,31,31,31,31,31,31,-140,-128,-137,-161,31,-35,31,31,-36,31,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,31,31,-302,-132,-138,-127,-126,-129,-148,31,31,31,31,31,-31,-34,31,31,31,-211,-195,-212,-196,-209,-208,-133,-134,-139,-149,-150,31,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'RBRACE':([16,66,68,92,114,123,134,137,139,140,141,142,147,148,149,150,151,156,157,158,159,161,162,165,166,167,169,172,173,174,175,176,180,181,206,208,211,215,216,217,218,220,221,222,227,228,229,241,242,243,245,255,258,259,263,266,267,281,283,290,311,312,314,315,317,319,341,344,346,351,352,353,358,368,371,372,376,379,380,382,384,385,387,389,390,395,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,435,439,441,444,453,455,457,459,460,479,483,485,486,496,497,498,499,500,503,510,515,516,519,520,],[-68,-81,-69,-301,-288,-303,243,-140,-137,243,-154,-151,-299,-303,-265,-251,-253,-289,-230,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-216,-171,-232,-280,-6,-78,-77,-73,-193,-5,-194,-76,-72,243,-192,-75,-74,243,243,-302,-138,-152,243,243,243,-22,-21,-273,-274,-257,-298,-254,-255,-251,-256,-300,-211,-195,-212,-229,-196,-209,-208,-139,-153,-155,-174,-172,243,-217,-271,-272,-268,-269,-270,-281,-241,-238,-245,-235,-249,-242,-248,-234,-236,-246,-240,-233,-237,-243,-250,-247,-239,-244,-210,-197,-207,-199,-173,-266,-267,-252,-258,-198,-175,243,-231,-202,-203,-200,243,-275,-282,-276,-204,-201,-206,-205,]),'RBRACKET':([10,22,50,64,102,104,108,109,114,127,146,147,149,150,151,156,157,158,159,161,162,165,166,167,169,172,173,174,175,180,181,184,185,186,187,195,210,235,236,243,281,283,290,311,312,314,315,317,319,320,323,325,332,333,334,351,360,361,381,382,383,384,385,387,389,390,395,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,422,423,430,431,442,445,448,455,457,459,460,466,467,486,489,492,500,503,510,511,],[-116,-117,-115,-303,-27,-160,-303,-28,-288,-303,-161,-299,-265,-251,-253,-289,-230,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-216,-232,-280,-3,-4,321,322,-303,-213,-303,-28,-302,-273,-274,-257,-298,-254,-255,-251,-256,-300,419,420,-303,428,429,-303,-229,446,447,454,-217,455,-271,-272,-268,-269,-270,-281,-241,-238,-245,-235,-249,-242,-248,-234,-236,-246,-240,-233,-237,-243,-250,-247,-239,-244,-303,-28,471,472,-214,481,482,-266,-267,-252,-258,490,491,-231,504,505,-275,-282,-276,517,]),'MINUSMINUS':([10,16,22,50,64,66,68,92,102,103,104,105,107,108,109,114,123,127,129,146,147,148,149,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,177,178,181,183,187,188,195,205,206,207,208,211,214,215,216,218,219,220,221,227,228,229,234,235,236,243,250,257,261,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,316,319,325,333,334,340,341,344,346,347,348,349,352,353,355,356,357,358,359,361,362,370,378,380,384,385,387,389,390,394,395,421,422,423,431,434,435,439,440,441,444,451,452,455,456,457,458,461,463,465,466,468,474,476,477,478,479,480,494,496,497,498,499,500,501,503,506,509,510,514,515,516,518,519,520,],[-116,-68,-117,-115,-303,-81,-69,-301,-27,-28,-160,164,-303,164,-28,-288,164,-303,164,-161,-299,-303,-265,283,164,164,-263,-261,-289,-297,-292,-260,-290,-279,164,164,-295,-293,-278,-264,-291,-259,-277,-296,-294,-262,164,-280,164,-260,164,164,164,164,164,-78,-77,-288,-73,-193,-194,164,-76,-72,-192,-75,-74,-303,164,-28,-302,164,164,164,-12,-11,164,-219,-224,-221,-225,-220,-222,-226,-228,-218,164,-223,-227,-273,164,-274,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-298,164,164,-300,-303,-260,164,164,-211,-195,-212,164,164,164,-196,-209,164,164,164,-208,164,-260,164,164,-176,-303,-271,-272,-268,-269,-270,164,-281,-303,164,-28,-260,164,-210,-197,164,-207,-199,164,-11,-266,164,-267,-303,164,164,164,-260,164,164,164,164,164,-198,164,164,-202,-203,-200,-303,-275,164,-282,164,164,-276,164,-204,-201,164,-206,-205,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,55,56,57,61,65,66,68,69,70,71,72,75,76,78,80,81,83,91,92,93,94,95,97,98,99,100,104,111,113,120,122,123,124,128,132,133,134,135,136,137,138,139,146,152,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,241,242,243,244,245,247,248,254,256,287,291,313,316,318,321,322,326,335,340,341,344,346,352,353,358,365,366,368,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[49,-107,-108,-99,-303,49,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,49,-303,-117,49,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,49,-63,-91,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-92,49,-81,-69,49,49,-82,49,-84,-89,-87,49,-90,-88,-53,-301,-130,-131,49,-146,-147,-61,-85,-160,49,49,-30,-83,49,-70,49,49,49,49,49,49,-140,-128,-137,-161,49,-35,49,49,-36,49,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,49,49,-302,-132,-138,-127,-126,-129,-148,49,49,49,49,49,-31,-34,49,49,49,-211,-195,-212,-196,-209,-208,-133,-134,-139,-149,-150,49,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'NOT':([10,16,22,50,64,66,68,92,102,103,104,105,107,108,109,123,127,129,146,148,152,153,154,155,160,163,164,168,170,177,178,183,187,188,195,205,206,207,208,211,215,216,218,219,220,221,227,228,229,234,235,236,243,250,257,261,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,325,333,334,340,341,344,346,347,348,349,352,353,355,356,357,358,359,361,362,370,378,380,394,421,422,423,431,434,435,439,440,441,444,451,452,456,458,461,463,465,466,468,474,476,477,478,479,480,494,496,497,498,499,501,506,509,514,515,516,518,519,520,],[-116,-68,-117,-115,-303,-81,-69,-301,-27,-28,-160,154,-303,154,-28,154,-303,154,-161,-303,154,154,-263,-261,-260,154,154,-264,-259,-262,154,154,-260,154,154,154,154,154,-78,-77,-73,-193,-194,154,-76,-72,-192,-75,-74,-303,154,-28,-302,154,154,154,-12,-11,154,-219,-224,-221,-225,-220,-222,-226,-228,-218,154,-223,-227,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,-303,-260,154,154,-211,-195,-212,154,154,154,-196,-209,154,154,154,-208,154,-260,154,154,-176,-303,154,-303,154,-28,-260,154,-210,-197,154,-207,-199,154,-11,154,-303,154,154,154,-260,154,154,154,154,154,-198,154,154,-202,-203,-200,-303,154,154,154,154,-204,-201,154,-206,-205,]),'LNOT':([10,16,22,50,64,66,68,92,102,103,104,105,107,108,109,123,127,129,146,148,152,153,154,155,160,163,164,168,170,177,178,183,187,188,195,205,206,207,208,211,215,216,218,219,220,221,227,228,229,234,235,236,243,250,257,261,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,325,333,334,340,341,344,346,347,348,349,352,353,355,356,357,358,359,361,362,370,378,380,394,421,422,423,431,434,435,439,440,441,444,451,452,456,458,461,463,465,466,468,474,476,477,478,479,480,494,496,497,498,499,501,506,509,514,515,516,518,519,520,],[-116,-68,-117,-115,-303,-81,-69,-301,-27,-28,-160,168,-303,168,-28,168,-303,168,-161,-303,168,168,-263,-261,-260,168,168,-264,-259,-262,168,168,-260,168,168,168,168,168,-78,-77,-73,-193,-194,168,-76,-72,-192,-75,-74,-303,168,-28,-302,168,168,168,-12,-11,168,-219,-224,-221,-225,-220,-222,-226,-228,-218,168,-223,-227,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,-303,-260,168,168,-211,-195,-212,168,168,168,-196,-209,168,168,168,-208,168,-260,168,168,-176,-303,168,-303,168,-28,-260,168,-210,-197,168,-207,-199,168,-11,168,-303,168,168,168,-260,168,168,168,168,168,-198,168,168,-202,-203,-200,-303,168,168,168,168,-204,-201,168,-206,-205,]),'ANDEQUAL':([114,147,149,150,151,156,158,159,161,162,165,166,167,169,172,173,174,181,214,243,281,283,290,311,312,314,315,317,319,384,385,387,389,390,395,455,457,459,460,500,503,510,],[-288,-299,-265,280,-253,-289,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-280,-288,-302,-273,-274,-257,-298,-254,-255,-251,-256,-300,-271,-272,-268,-269,-270,-281,-266,-267,-252,-258,-275,-282,-276,]),'AND':([10,16,22,50,64,66,68,92,102,103,104,105,107,108,109,114,123,127,129,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,177,178,180,181,183,187,188,195,205,206,207,208,211,214,215,216,218,219,220,221,227,228,229,234,235,236,243,250,257,261,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,325,333,334,340,341,344,346,347,348,349,352,353,355,356,357,358,359,361,362,370,378,380,384,385,387,389,390,394,395,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,421,422,423,431,434,435,439,440,441,444,451,452,455,456,457,458,459,460,461,463,465,466,468,474,476,477,478,479,480,494,496,497,498,499,500,501,503,506,509,510,514,515,516,518,519,520,],[-116,-68,-117,-115,-303,-81,-69,-301,-27,-28,-160,170,-303,170,-28,-288,170,-303,170,-161,-299,-303,-265,-251,-253,170,170,-263,-261,-289,301,-297,-292,-260,-290,-279,170,170,-295,-293,-278,-264,-291,-259,-277,-296,-294,-262,170,-232,-280,170,-260,170,170,170,170,170,-78,-77,-288,-73,-193,-194,170,-76,-72,-192,-75,-74,-303,170,-28,-302,170,170,170,-12,-11,170,-219,-224,-221,-225,-220,-222,-226,-228,-218,170,-223,-227,-273,170,-274,170,-257,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,-298,-254,170,-255,-251,170,-256,-300,-303,-260,170,170,-211,-195,-212,170,170,170,-196,-209,170,170,170,-208,170,-260,170,170,-176,-303,-271,-272,-268,-269,-270,170,-281,-241,-238,-245,-235,301,-242,301,-234,-236,-246,-240,-233,-237,-243,301,301,-239,-244,-303,170,-28,-260,170,-210,-197,170,-207,-199,170,-11,-266,170,-267,-303,-252,-258,170,170,170,-260,170,170,170,170,170,-198,170,170,-202,-203,-200,-303,-275,170,-282,170,170,-276,170,-204,-201,170,-206,-205,]),'XOR':([114,147,149,150,151,156,157,158,159,161,162,165,166,167,169,172,173,174,180,181,214,243,281,283,290,311,312,314,315,317,319,384,385,387,389,390,395,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,455,457,459,460,500,503,510,],[-288,-299,-265,-251,-253,-289,298,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-232,-280,-288,-302,-273,-274,-257,-298,-254,-255,-251,-256,-300,-271,-272,-268,-269,-270,-281,-241,-238,-245,-235,298,-242,-248,-234,-236,-246,-240,-233,-237,-243,298,298,-239,-244,-266,-267,-252,-258,-275,-282,-276,]),'__INT128':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,55,56,57,61,65,66,68,69,70,71,72,75,76,78,80,81,83,91,92,93,94,95,97,98,99,100,104,111,113,120,122,123,124,128,132,133,134,135,136,137,138,139,146,152,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,241,242,243,244,245,247,248,254,256,287,291,313,316,318,321,322,326,335,340,341,344,346,352,353,358,365,366,368,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[38,-107,-108,-99,-303,38,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,38,-303,-117,38,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,38,-63,-91,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-92,38,-81,-69,38,38,-82,38,-84,-89,-87,38,-90,-88,-53,-301,-130,-131,38,-146,-147,-61,-85,-160,38,38,-30,-83,38,-70,38,38,38,38,38,38,-140,-128,-137,-161,38,-35,38,38,-36,38,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,38,38,-302,-132,-138,-127,-126,-129,-148,38,38,38,38,38,-31,-34,38,38,38,-211,-195,-212,-196,-209,-208,-133,-134,-139,-149,-150,38,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'TYPEDEF':([0,1,2,3,4,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,61,65,66,68,69,71,72,76,78,80,81,83,91,92,93,94,97,98,99,113,120,122,123,124,128,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,243,244,256,321,322,326,335,340,341,344,346,352,353,358,365,366,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[26,-107,-108,-99,26,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,26,26,-117,26,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,26,-63,-91,26,-94,-105,-115,-114,-98,-60,-92,26,-81,-69,26,-82,26,-89,-87,26,-90,-88,-53,-301,-130,-131,-146,-147,-61,26,-30,-83,26,-70,26,-35,26,26,-36,26,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,-302,-132,-148,-31,-34,26,26,26,-211,-195,-212,-196,-209,-208,-133,-134,-149,-150,26,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'ELSE':([16,68,208,211,215,220,221,228,229,243,341,346,352,353,358,435,439,441,444,479,496,497,498,515,516,519,520,],[-68,-69,-78,-77,-73,-76,-72,-75,-74,-302,-211,-212,-196,-209,-208,-210,-197,-207,-199,-198,-202,-203,509,-204,-201,-206,-205,]),'LOR':([114,147,149,150,151,156,157,158,159,161,162,165,166,167,169,172,173,174,180,181,214,243,281,283,290,311,312,314,315,317,319,384,385,387,389,390,395,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,455,457,459,460,500,503,510,],[-288,-299,-265,-251,-253,-289,307,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-232,-280,-288,-302,-273,-274,-257,-298,-254,-255,-251,-256,-300,-271,-272,-268,-269,-270,-281,-241,-238,-245,-235,-249,-242,-248,-234,-236,-246,-240,-233,-237,-243,-250,-247,-239,-244,-266,-267,-252,-258,-275,-282,-276,]),'REGISTER':([0,1,2,3,4,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,61,65,66,68,69,71,72,76,78,80,81,83,91,92,93,94,97,98,99,113,120,122,123,124,128,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,243,244,256,321,322,326,335,340,341,344,346,352,353,358,365,366,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[48,-107,-108,-99,48,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,48,48,-117,48,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,48,-63,-91,48,-94,-105,-115,-114,-98,-60,-92,48,-81,-69,48,-82,48,-89,-87,48,-90,-88,-53,-301,-130,-131,-146,-147,-61,48,-30,-83,48,-70,48,-35,48,48,-36,48,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,-302,-132,-148,-31,-34,48,48,48,-211,-195,-212,-196,-209,-208,-133,-134,-149,-150,48,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'EQ':([114,147,149,150,151,156,157,158,159,161,162,165,166,167,169,172,173,174,180,181,214,243,281,283,290,311,312,314,315,317,319,384,385,387,389,390,395,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,455,457,459,460,500,503,510,],[-288,-299,-265,-251,-253,-289,310,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-232,-280,-288,-302,-273,-274,-257,-298,-254,-255,-251,-256,-300,-271,-272,-268,-269,-270,-281,-241,-238,-245,-235,310,-242,310,-234,-236,310,-240,-233,-237,-243,310,310,-239,-244,-266,-267,-252,-258,-275,-282,-276,]),'PERIOD':([92,114,147,148,149,151,156,158,159,161,162,165,166,167,169,172,173,174,181,214,243,262,264,281,283,311,319,375,377,380,384,385,387,389,390,395,454,455,457,458,487,488,499,500,503,510,512,517,],[-301,-288,-299,260,-265,286,-289,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-280,-288,-302,260,-177,-273,-274,-298,-300,-180,-178,260,-271,-272,-268,-269,-270,-281,-179,-266,-267,260,502,-283,260,-275,-282,-276,-284,-285,]),'ELLIPSIS':([202,],[338,]),'LONG':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,55,56,57,61,65,66,68,69,70,71,72,75,76,78,80,81,83,91,92,93,94,95,97,98,99,100,104,111,113,120,122,123,124,128,132,133,134,135,136,137,138,139,146,152,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,241,242,243,244,245,247,248,254,256,287,291,313,316,318,321,322,326,335,340,341,344,346,352,353,358,365,366,368,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[35,-107,-108,-99,-303,35,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,35,-303,-117,35,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,35,-63,-91,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-92,35,-81,-69,35,35,-82,35,-84,-89,-87,35,-90,-88,-53,-301,-130,-131,35,-146,-147,-61,-85,-160,35,35,-30,-83,35,-70,35,35,35,35,35,35,-140,-128,-137,-161,35,-35,35,35,-36,35,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,35,35,-302,-132,-138,-127,-126,-129,-148,35,35,35,35,35,-31,-34,35,35,35,-211,-195,-212,-196,-209,-208,-133,-134,-139,-149,-150,35,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'_COMPLEX':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,55,56,57,61,65,66,68,69,70,71,72,75,76,78,80,81,83,91,92,93,94,95,97,98,99,100,104,111,113,120,122,123,124,128,132,133,134,135,136,137,138,139,146,152,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,241,242,243,244,245,247,248,254,256,287,291,313,316,318,321,322,326,335,340,341,344,346,352,353,358,365,366,368,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[1,-107,-108,-99,-303,1,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,1,-303,-117,1,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,1,-63,-91,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-92,1,-81,-69,1,1,-82,1,-84,-89,-87,1,-90,-88,-53,-301,-130,-131,1,-146,-147,-61,-85,-160,1,1,-30,-83,1,-70,1,1,1,1,1,1,-140,-128,-137,-161,1,-35,1,1,-36,1,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,1,1,-302,-132,-138,-127,-126,-129,-148,1,1,1,1,1,-31,-34,1,1,1,-211,-195,-212,-196,-209,-208,-133,-134,-139,-149,-150,1,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'SIGNED':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,55,56,57,61,65,66,68,69,70,71,72,75,76,78,80,81,83,91,92,93,94,95,97,98,99,100,104,111,113,120,122,123,124,128,132,133,134,135,136,137,138,139,146,152,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,241,242,243,244,245,247,248,254,256,287,291,313,316,318,321,322,326,335,340,341,344,346,352,353,358,365,366,368,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[2,-107,-108,-99,-303,2,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,2,-303,-117,2,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,2,-63,-91,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-92,2,-81,-69,2,2,-82,2,-84,-89,-87,2,-90,-88,-53,-301,-130,-131,2,-146,-147,-61,-85,-160,2,2,-30,-83,2,-70,2,2,2,2,2,2,-140,-128,-137,-161,2,-35,2,2,-36,2,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,2,2,-302,-132,-138,-127,-126,-129,-148,2,2,2,2,2,-31,-34,2,2,2,-211,-195,-212,-196,-209,-208,-133,-134,-139,-149,-150,2,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'VOLATILE':([0,1,2,3,4,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,47,48,49,50,51,53,54,61,64,65,66,68,69,71,72,76,78,80,81,83,91,92,93,94,95,97,98,99,103,104,107,109,113,120,122,123,124,127,128,132,133,134,135,136,137,138,139,146,152,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,234,236,241,242,243,244,245,247,248,254,256,287,291,313,316,318,321,322,325,326,335,340,341,344,346,352,353,358,365,366,368,373,374,391,419,420,421,423,435,439,441,444,479,496,497,498,515,516,519,520,],[22,-107,-108,-99,22,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,22,22,-117,22,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,22,-63,-91,22,22,-94,-105,-115,-114,-98,-60,-92,22,22,-81,-69,22,-82,22,-89,-87,22,-90,-88,-53,-301,-130,-131,22,-146,-147,-61,22,-160,22,22,22,-30,-83,22,-70,22,22,22,22,22,22,22,-140,-128,-137,-161,22,-35,22,22,-36,22,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,22,22,22,22,-302,-132,-138,-127,-126,-129,-148,22,22,22,22,22,-31,-34,22,22,22,22,-211,-195,-212,-196,-209,-208,-133,-134,-139,-149,-150,22,-32,-33,22,22,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'VOID':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,55,56,57,61,65,66,68,69,70,71,72,75,76,78,80,81,83,91,92,93,94,95,97,98,99,100,104,111,113,120,122,123,124,128,132,133,134,135,136,137,138,139,146,152,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,241,242,243,244,245,247,248,254,256,287,291,313,316,318,321,322,326,335,340,341,344,346,352,353,358,365,366,368,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[3,-107,-108,-99,-303,3,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,3,-303,-117,3,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,3,-63,-91,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-92,3,-81,-69,3,3,-82,3,-84,-89,-87,3,-90,-88,-53,-301,-130,-131,3,-146,-147,-61,-85,-160,3,3,-30,-83,3,-70,3,3,3,3,3,3,-140,-128,-137,-161,3,-35,3,3,-36,3,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,3,3,-302,-132,-138,-127,-126,-129,-148,3,3,3,3,3,-31,-34,3,3,3,-211,-195,-212,-196,-209,-208,-133,-134,-139,-149,-150,3,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'COLON':([1,2,3,6,7,8,10,14,17,18,22,25,27,30,31,34,35,38,39,49,50,51,79,82,88,91,93,94,97,98,114,120,121,130,135,138,147,149,150,151,156,157,158,159,161,162,165,166,167,169,172,173,174,175,180,181,189,203,210,214,230,232,243,244,247,248,252,254,256,281,283,290,311,312,314,315,317,319,321,322,350,351,363,364,365,366,367,373,374,382,384,385,387,389,390,395,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,419,420,442,446,447,455,457,459,460,481,482,486,500,503,510,],[-107,-108,-99,-102,-52,-112,-116,-106,-111,-215,-117,-100,-103,-29,-101,-113,-104,-110,-109,-105,-115,-114,-37,-54,-157,-53,-130,-131,-146,-147,-288,-30,-156,-55,250,-128,-299,-265,-251,-253,-289,-230,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-216,-232,-280,-35,-36,-213,349,357,-38,-302,-132,-127,-126,370,-129,-148,-273,-274,-257,-298,-254,-255,-251,-256,-300,-31,-34,440,-229,-43,-44,-133,-134,250,-149,-150,-217,-271,-272,-268,-269,-270,-281,-241,-238,-245,-235,-249,-242,-248,-234,-236,-246,-240,461,-233,-237,-243,-250,-247,-239,-244,-32,-33,-214,-39,-42,-266,-267,-252,-258,-40,-41,-231,-275,-282,-276,]),'MINUS':([10,16,22,50,64,66,68,92,102,103,104,105,107,108,109,114,123,127,129,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,177,178,180,181,183,187,188,195,205,206,207,208,211,214,215,216,218,219,220,221,227,228,229,234,235,236,243,250,257,261,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,325,333,334,340,341,344,346,347,348,349,352,353,355,356,357,358,359,361,362,370,378,380,384,385,387,389,390,394,395,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,421,422,423,431,434,435,439,440,441,444,451,452,455,456,457,458,459,460,461,463,465,466,468,474,476,477,478,479,480,494,496,497,498,499,500,501,503,506,509,510,514,515,516,518,519,520,],[-116,-68,-117,-115,-303,-81,-69,-301,-27,-28,-160,177,-303,177,-28,-288,177,-303,177,-161,-299,-303,-265,-251,-253,177,177,-263,-261,-289,305,-297,-292,-260,-290,-279,177,177,-295,-293,-278,-264,-291,-259,-277,-296,-294,-262,177,-232,-280,177,-260,177,177,177,177,177,-78,-77,-288,-73,-193,-194,177,-76,-72,-192,-75,-74,-303,177,-28,-302,177,177,177,-12,-11,177,-219,-224,-221,-225,-220,-222,-226,-228,-218,177,-223,-227,-273,177,-274,177,-257,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,-298,-254,177,-255,-251,177,-256,-300,-303,-260,177,177,-211,-195,-212,177,177,177,-196,-209,177,177,177,-208,177,-260,177,177,-176,-303,-271,-272,-268,-269,-270,177,-281,305,305,305,-235,305,305,305,-234,-236,305,305,-233,-237,305,305,305,305,305,-303,177,-28,-260,177,-210,-197,177,-207,-199,177,-11,-266,177,-267,-303,-252,-258,177,177,177,-260,177,177,177,177,177,-198,177,177,-202,-203,-200,-303,-275,177,-282,177,177,-276,177,-204,-201,177,-206,-205,]),'CASE':([16,66,68,92,123,206,207,208,211,215,216,218,220,221,227,228,229,243,341,344,346,349,352,353,357,358,435,439,440,441,444,477,478,479,480,496,497,498,509,514,515,516,518,519,520,],[-68,-81,-69,-301,219,219,219,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-302,-211,-195,-212,219,-196,-209,219,-208,-210,-197,219,-207,-199,219,219,-198,219,-202,-203,-200,219,219,-204,-201,219,-206,-205,]),'UNION':([0,4,5,7,9,10,15,16,19,20,21,22,24,26,28,29,30,36,37,41,43,46,48,50,53,54,55,56,57,65,66,68,70,71,72,75,80,91,92,95,99,100,104,111,120,122,123,124,128,132,133,134,136,137,139,146,152,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,241,242,243,245,291,313,316,318,321,322,326,335,340,341,344,346,352,353,358,368,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[11,-303,11,-52,-62,-116,-66,-68,-65,11,-303,-117,-67,-97,-93,-95,-29,-96,-64,11,-63,-303,-94,-115,-98,-60,-10,-9,-86,11,-81,-69,11,-82,11,-84,11,-53,-301,11,-61,-85,-160,11,-30,-83,11,-70,11,11,11,11,11,-140,-137,-161,11,-35,11,11,-36,11,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,11,11,-302,-138,11,11,11,11,-31,-34,11,11,11,-211,-195,-212,-196,-209,-208,-139,11,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'ARROW':([114,147,149,151,156,158,159,161,162,165,166,167,169,172,173,174,181,214,243,281,283,311,319,384,385,387,389,390,395,455,457,500,503,510,],[-288,-299,-265,284,-289,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-280,-288,-302,-273,-274,-298,-300,-271,-272,-268,-269,-270,-281,-266,-267,-275,-282,-276,]),'NE':([114,147,149,150,151,156,157,158,159,161,162,165,166,167,169,172,173,174,180,181,214,243,281,283,290,311,312,314,315,317,319,384,385,387,389,390,395,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,455,457,459,460,500,503,510,],[-288,-299,-265,-251,-253,-289,294,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-232,-280,-288,-302,-273,-274,-257,-298,-254,-255,-251,-256,-300,-271,-272,-268,-269,-270,-281,-241,-238,-245,-235,294,-242,294,-234,-236,294,-240,-233,-237,-243,294,294,-239,-244,-266,-267,-252,-258,-275,-282,-276,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,55,56,57,61,65,66,68,69,70,71,72,75,76,78,80,81,83,91,92,93,94,95,97,98,99,100,104,111,113,120,122,123,124,128,132,133,134,135,136,137,138,139,146,152,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,241,242,243,244,245,247,248,254,256,287,291,313,316,318,321,322,326,335,340,341,344,346,352,353,358,365,366,368,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[14,-107,-108,-99,-303,14,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,14,-303,-117,14,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,14,-63,-91,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-92,14,-81,-69,14,14,-82,14,-84,-89,-87,14,-90,-88,-53,-301,-130,-131,14,-146,-147,-61,-85,-160,14,14,-30,-83,14,-70,14,14,14,14,14,14,-140,-128,-137,-161,14,-35,14,14,-36,14,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,14,14,-302,-132,-138,-127,-126,-129,-148,14,14,14,14,14,-31,-34,14,14,14,-211,-195,-212,-196,-209,-208,-133,-134,-139,-149,-150,14,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'RPAREN':([1,2,3,6,7,8,10,14,17,18,22,25,26,27,28,29,30,31,34,35,36,38,39,44,47,48,49,50,51,53,61,65,67,76,78,79,81,82,83,91,93,94,97,98,101,102,103,104,110,112,113,114,115,116,117,118,119,120,125,128,130,138,145,146,147,149,150,151,156,157,158,159,161,162,165,166,167,169,172,173,174,175,180,181,189,191,192,193,194,196,197,198,199,200,201,203,210,225,232,237,238,243,244,247,248,254,256,281,283,285,287,288,289,290,311,312,314,315,317,319,321,322,324,326,327,328,329,330,331,335,336,337,338,339,343,363,364,365,366,373,374,382,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,416,417,419,420,424,425,426,427,428,429,432,437,438,442,443,446,447,455,457,459,460,469,470,471,472,473,481,482,484,486,487,488,490,491,494,495,500,503,504,505,506,507,510,512,513,517,],[-107,-108,-99,-102,-52,-112,-116,-106,-111,-215,-117,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-110,-109,-91,-303,-94,-105,-115,-114,-98,-92,-303,120,-89,-87,-37,-90,-54,-88,-53,-130,-131,-146,-147,-158,-27,-28,-160,189,-18,-303,-288,-162,-164,203,-17,-169,-30,232,-303,-55,-128,-159,-161,-299,-265,-251,-253,-289,-230,-297,-292,-290,-279,-295,-293,-278,-291,-277,-296,-294,-216,-232,-280,-35,-56,-303,-166,-2,-184,-182,-168,-167,-45,-1,-36,-213,-14,-38,363,364,-302,-132,-127,-126,-129,-148,-273,-274,387,-303,394,395,-257,-298,-254,-255,-251,-256,-300,-31,-34,-170,-303,-24,426,-182,427,-23,-303,-183,-57,-163,-165,-13,-43,-44,-133,-134,-149,-150,-217,-271,-272,457,-268,-286,-269,-270,-303,-182,-181,-281,460,-241,-238,-245,-235,-249,-242,-248,-234,-236,-246,-240,-233,-237,-243,-250,-247,-239,-244,462,463,-32,-33,469,470,-185,-191,-187,-189,473,477,478,-214,480,-39,-42,-266,-267,-252,-258,-50,-51,-186,-188,-190,-40,-41,-287,-231,503,-283,-49,-46,-303,508,-275,-282,-47,-48,-303,514,-276,-284,518,-285,]),'INT':([0,1,2,3,4,5,6,7,8,9,10,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,38,39,41,43,44,46,48,49,50,51,53,54,55,56,57,61,65,66,68,69,70,71,72,75,76,78,80,81,83,91,92,93,94,95,97,98,99,100,104,111,113,120,122,123,124,128,132,133,134,135,136,137,138,139,146,152,189,192,202,203,206,208,211,215,216,218,220,221,227,228,229,233,241,242,243,244,245,247,248,254,256,287,291,313,316,318,321,322,326,335,340,341,344,346,352,353,358,365,366,368,373,374,391,419,420,435,439,441,444,479,496,497,498,515,516,519,520,],[27,-107,-108,-99,-303,27,-102,-52,-112,-62,-116,-106,-66,-68,-111,-215,-65,27,-303,-117,27,-67,-100,-97,-103,-93,-95,-29,-101,-113,-104,-96,-64,-110,-109,27,-63,-91,-303,-94,-105,-115,-114,-98,-60,-10,-9,-86,-92,27,-81,-69,27,27,-82,27,-84,-89,-87,27,-90,-88,-53,-301,-130,-131,27,-146,-147,-61,-85,-160,27,27,-30,-83,27,-70,27,27,27,27,27,27,-140,-128,-137,-161,27,-35,27,27,-36,27,-78,-77,-73,-193,-194,-76,-72,-192,-75,-74,-71,27,27,-302,-132,-138,-127,-126,-129,-148,27,27,27,27,27,-31,-34,27,27,27,-211,-195,-212,-196,-209,-208,-133,-134,-139,-149,-150,27,-32,-33,-210,-197,-207,-199,-198,-202,-203,-200,-204,-201,-206,-205,]),'PLUS':([10,16,22,50,64,66,68,92,102,103,104,105,107,108,109,114,123,127,129,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,177,178,180,181,183,187,188,195,205,206,207,208,211,214,215,216,218,219,220,221,227,228,229,234,235,236,243,250,257,261,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,325,333,334,340,341,344,346,347,348,349,352,353,355,356,357,358,359,361,362,370,378,380,384,385,387,389,390,394,395,397,398,399,400,401,402,403,404,405,406,407,409,410,411,412,413,414,415,421,422,423,431,434,435,439,440,441,444,451,452,455,456,457,458,459,460,461,463,465,466,468,474,476,477,478,479,480,494,496,497,498,499,500,501,503,506,509,510,514,515,516,518,519,520,],[-116,-68,-117,-115,-303,-81,-69,-301,-27,-28,-160,155,-303,155,-28,-288,155,-303,155,-161,-299,-303,-265,-251,-253,155,155,-263,-261,-289,300,-297,-292,-260,-290,-279,155,155,-295,-293,-278,-264,-291,-259,-277,-296,-294,-262,155,-232,-280,155,-260,155,155,155,155,155,-78,-77,-288,-73,-193,-194,155,-76,-72,-192,-75,-74,-303,155,-28,-302,155,155,155,-12,-11,155,-219,-224,-221,-225,-220,-222,-226,-228,-218,155,-223,-227,-273,155,-274,155,-257,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,-298,-254,155,-255,-251,155,-256,-300,-303,-260,155,155,-211,-195,-212,155,155,155,-196,-209,155,155,155,-208,155,-260,155,155,-176,-303,-271,-272,-268,-269,-270,155,-281,300,300,300,-235,300,300,300,-234,-236,300,300,-233,-237,300,300,300,300,300,-303,155,-28,-260,155,-210,-197,155,-207,-199,155,-11,-266,155,-267,-303,-252,-258,155,155,155,-260,155,155,155,155,155,-198,155,155,-202,-203,-200,-303,-275,155,-282,155,155,-276,155,-204,-201,155,-206,-205,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'type_qualifier_list_opt':([47,64,107,127,234,325,421,],[101,108,183,235,359,422,465,]),'enumerator_list':([96,143,144,],[140,258,259,]),'brace_close':([134,140,222,241,242,258,259,263,380,485,499,],[244,256,352,365,366,373,374,379,453,500,510,]),'primary_expression':([105,108,123,129,152,153,163,164,178,183,188,195,205,206,207,219,235,250,257,261,268,278,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,334,340,347,348,349,355,356,357,359,362,370,394,422,434,440,451,456,461,463,465,468,474,476,477,478,480,494,501,506,509,514,518,],[149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'declaration_specifiers_no_type':([0,4,20,21,41,46,65,72,80,123,128,192,202,206,326,335,340,391,],[5,55,70,55,5,55,111,70,70,70,111,111,111,70,111,111,70,111,]),'enum_specifier':([0,5,20,41,65,70,72,80,95,111,123,128,132,133,134,136,152,192,202,206,241,242,291,313,316,318,326,335,340,391,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'initializer_list':([148,458,],[266,485,]),'block_item_list':([123,],[206,]),'identifier_list':([65,128,326,],[112,112,112,]),'function_definition':([0,41,],[9,9,]),'type_qualifier':([0,4,20,21,23,41,46,47,64,65,69,72,80,95,103,107,109,113,123,127,128,132,133,134,135,136,152,192,202,206,234,236,241,242,287,291,313,316,318,325,326,335,340,391,421,423,],[21,21,21,21,78,21,21,104,104,21,78,21,21,104,146,104,146,78,21,104,21,104,104,104,247,146,104,21,21,21,104,146,104,104,247,104,104,104,104,104,21,21,21,21,104,146,]),'expression':([123,152,205,206,207,282,291,303,313,316,340,347,348,349,356,357,434,440,474,476,477,478,480,494,501,506,509,514,518,],[225,289,342,225,225,383,289,408,289,289,225,437,438,225,443,225,225,225,225,495,225,225,225,225,511,225,225,225,225,]),'block_item_list_opt':([123,],[222,]),'abstract_declarator':([113,192,287,391,],[194,328,194,328,]),'designation_opt':([148,380,458,499,],[261,451,261,451,]),'pppragma_directive':([0,41,123,206,207,349,357,440,477,478,480,509,514,518,],[19,19,208,208,208,208,208,208,208,208,208,208,208,208,]),'type_specifier_no_typeid':([0,5,20,23,41,65,69,70,72,80,95,111,113,123,128,132,133,134,135,136,152,192,202,206,241,242,287,291,313,316,318,326,335,340,391,],[51,51,51,81,51,51,81,51,51,51,51,51,81,51,51,51,51,51,248,51,51,51,51,51,51,51,248,51,51,51,51,51,51,51,51,]),'assignment_expression':([105,108,123,129,152,183,188,195,205,206,207,235,261,278,282,285,291,303,313,316,334,340,347,348,349,355,356,357,359,362,422,434,440,451,456,465,468,474,476,477,478,480,494,501,506,509,514,518,],[176,185,210,176,210,320,323,185,210,210,210,185,176,382,210,388,210,210,210,210,185,210,210,210,210,442,210,210,445,448,185,210,210,176,484,489,492,210,210,210,210,210,210,210,210,210,210,210,]),'jump_statement':([123,206,207,349,357,440,477,478,480,509,514,518,],[211,211,211,211,211,211,211,211,211,211,211,211,]),'id_init_declarator_list_opt':([5,70,],[59,59,]),'storage_class_specifier':([0,4,20,21,23,41,46,65,69,72,80,113,123,128,192,202,206,326,335,340,391,],[46,46,46,46,83,46,46,46,83,46,46,83,46,46,46,46,46,46,46,46,46,]),'parameter_list':([65,128,192,326,335,391,],[115,115,115,115,115,115,]),'designator_list':([148,380,458,499,],[262,262,262,262,]),'designation':([148,380,458,499,],[265,265,265,265,]),'pp_directive':([0,41,],[37,37,]),'expression_statement':([123,206,207,349,357,440,477,478,480,509,514,518,],[215,215,215,215,215,215,215,215,215,215,215,215,]),'init_declarator':([23,69,106,131,],[84,84,182,240,]),'id_init_declarator_list':([5,70,],[62,62,]),'unary_expression':([105,108,123,129,152,153,163,164,178,183,188,195,205,206,207,219,235,250,257,261,268,278,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,334,340,347,348,349,355,356,357,359,362,370,394,422,434,440,451,456,461,463,465,468,474,476,477,478,480,494,501,506,509,514,518,],[150,150,150,150,150,290,312,314,315,150,150,150,150,150,150,315,150,315,315,150,315,150,150,150,150,315,315,315,315,315,315,315,315,315,315,315,150,315,315,315,315,315,315,315,150,150,150,150,150,150,150,150,150,150,150,150,315,315,150,150,150,150,150,315,315,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'initializer':([105,129,261,451,],[171,239,376,483,]),'constant':([105,108,123,129,152,153,163,164,178,183,188,195,205,206,207,219,235,250,257,261,268,278,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,334,340,347,348,349,355,356,357,359,362,370,394,422,434,440,451,456,461,463,465,468,474,476,477,478,480,494,501,506,509,514,518,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'expression_opt':([123,206,207,340,349,357,434,440,474,477,478,480,494,506,509,514,518,],[209,209,209,433,209,209,475,209,493,209,209,209,507,513,209,209,209,]),'type_specifier':([0,5,20,41,65,70,72,80,95,111,123,128,132,133,134,136,152,192,202,206,241,242,291,313,316,318,326,335,340,391,],[44,61,44,44,44,61,44,44,138,61,44,44,138,138,138,254,138,44,44,44,138,138,138,138,138,138,44,44,44,44,]),'translation_unit_or_empty':([0,],[45,]),'pointer':([0,5,13,23,41,69,70,77,101,106,113,131,135,192,287,367,391,],[32,32,32,86,32,86,32,86,145,86,197,86,86,329,392,86,392,]),'direct_typeid_declarator':([23,69,77,86,106,131,135,367,],[82,82,82,130,82,82,82,82,]),'declaration_list':([20,80,],[72,72,]),'postfix_expression':([105,108,123,129,152,153,163,164,178,183,188,195,205,206,207,219,235,250,257,261,268,278,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,334,340,347,348,349,355,356,357,359,362,370,394,422,434,440,451,456,461,463,465,468,474,476,477,478,480,494,501,506,509,514,518,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'offsetof_member_designator':([464,],[487,]),'parameter_declaration':([65,128,192,202,326,335,391,],[116,116,116,339,116,116,116,]),'abstract_declarator_opt':([113,287,],[198,393,]),'identifier_list_opt':([65,128,326,],[117,238,425,]),'statement':([123,206,207,349,357,440,477,478,480,509,514,518,],[216,216,345,439,444,479,496,497,498,516,519,520,]),'declaration_list_opt':([20,80,],[73,126,]),'unary_operator':([105,108,123,129,152,153,163,164,178,183,188,195,205,206,207,219,235,250,257,261,268,278,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,334,340,347,348,349,355,356,357,359,362,370,394,422,434,440,451,456,461,463,465,468,474,476,477,478,480,494,501,506,509,514,518,],[178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,]),'typeid_declarator':([23,69,77,106,131,135,367,],[88,88,125,88,88,88,88,]),'empty':([0,4,5,20,21,23,46,47,64,65,69,70,80,107,108,113,123,127,128,135,148,192,195,206,207,234,235,287,325,326,334,335,340,349,357,380,391,421,422,434,440,458,474,477,478,480,494,499,506,509,514,518,],[52,56,63,74,56,89,56,102,102,118,89,63,74,102,184,201,217,102,118,253,267,331,184,343,343,102,184,201,102,118,184,331,343,343,343,452,331,102,184,343,343,452,343,343,343,343,343,452,343,343,343,343,]),'identifier':([65,105,108,123,128,129,152,153,163,164,178,183,188,190,195,205,206,207,219,235,250,257,260,261,268,278,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,326,334,340,347,348,349,355,356,357,359,362,370,394,422,434,440,451,456,461,463,464,465,468,474,476,477,478,480,494,501,502,506,509,514,518,],[119,172,172,172,119,172,172,172,172,172,172,172,172,324,172,172,172,172,172,172,172,172,375,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,119,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,488,172,172,172,172,172,172,172,172,172,512,172,172,172,172,]),'unified_wstring_literal':([105,108,123,129,152,153,163,164,178,183,188,195,205,206,207,219,235,250,257,261,268,278,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,334,340,347,348,349,355,356,357,359,362,370,394,422,434,440,451,456,461,463,465,468,474,476,477,478,480,494,501,506,509,514,518,],[181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,]),'external_declaration':([0,41,],[54,99,]),'struct_declaration':([95,132,133,134,241,242,],[139,139,139,245,245,245,]),'argument_expression_list':([285,],[386,]),'struct_declaration_list':([95,132,133,],[134,241,242,]),'struct_or_union':([0,5,20,41,65,70,72,80,95,111,123,128,132,133,134,136,152,192,202,206,241,242,291,313,316,318,326,335,340,391,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'parameter_type_list':([65,128,192,326,335,391,],[110,237,327,424,327,327,]),'block_item':([123,206,],[218,344,]),'function_specifier':([0,4,20,21,23,41,46,65,69,72,80,113,123,128,192,202,206,326,335,340,391,],[4,4,4,4,76,4,4,4,76,4,4,76,4,4,4,4,4,4,4,4,4,]),'assignment_expression_opt':([108,195,235,334,422,],[186,332,360,430,467,]),'direct_typeid_noparen_declarator':([113,197,],[191,337,]),'direct_id_declarator':([0,5,13,23,32,41,69,70,77,86,106,113,131,135,192,197,329,367,],[7,7,7,7,91,7,7,7,7,91,7,7,7,7,7,91,91,7,]),'specifier_qualifier_list':([95,132,133,134,152,241,242,291,313,316,318,],[135,135,135,135,287,135,135,287,287,287,287,]),'decl_body':([0,20,41,72,80,123,206,340,],[12,12,12,12,12,12,12,12,]),'type_qualifier_list':([47,64,95,107,127,132,133,134,152,234,241,242,291,313,316,318,325,421,],[103,109,136,103,236,136,136,136,136,103,136,136,136,136,136,136,423,103,]),'init_declarator_list':([23,69,],[90,90,]),'declaration_specifiers_no_type_opt':([4,21,46,],[57,75,100,]),'iteration_statement':([123,206,207,349,357,440,477,478,480,509,514,518,],[220,220,220,220,220,220,220,220,220,220,220,220,]),'id_declarator':([0,5,13,23,41,69,70,77,106,113,131,135,192,367,],[20,58,67,80,20,121,58,67,121,193,121,121,67,121,]),'binary_expression':([105,108,123,129,152,183,188,195,205,206,207,219,235,250,257,261,268,278,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,334,340,347,348,349,355,356,357,359,362,370,422,434,440,451,456,461,465,468,474,476,477,478,480,494,501,506,509,514,518,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,397,398,399,400,401,402,403,404,405,406,407,157,409,410,411,412,413,414,415,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'constant_expression':([219,250,257,268,370,],[350,369,372,381,450,]),'typeid_noparen_declarator':([113,],[199,]),'declaration_specifiers':([0,20,41,65,72,80,123,128,192,202,206,326,335,340,391,],[23,69,23,113,69,69,69,113,113,113,69,113,113,69,113,]),'labeled_statement':([123,206,207,349,357,440,477,478,480,509,514,518,],[221,221,221,221,221,221,221,221,221,221,221,221,]),'designator':([148,262,380,458,499,],[264,377,264,264,264,]),'struct_declarator_list_opt':([135,],[249,]),'struct_declarator_list':([135,],[246,]),'id_init_declarator':([5,70,],[60,60,]),'struct_or_union_specifier':([0,5,20,41,65,70,72,80,95,111,123,128,132,133,134,136,152,192,202,206,241,242,291,313,316,318,326,335,340,391,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'initializer_list_opt':([148,],[263,]),'brace_open':([33,40,73,93,94,97,98,105,123,126,129,206,207,261,349,357,394,440,451,460,462,463,477,478,480,509,514,518,],[95,96,123,132,133,143,144,148,123,123,148,123,123,148,123,123,458,123,148,458,458,458,123,123,123,123,123,123,]),'type_name':([152,291,313,316,318,],[288,396,416,417,418,]),'cast_expression':([105,108,123,129,152,178,183,188,195,205,206,207,219,235,250,257,261,268,278,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,334,340,347,348,349,355,356,357,359,362,370,394,422,434,440,451,456,461,463,465,468,474,476,477,478,480,494,501,506,509,514,518,],[180,180,180,180,180,317,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,459,180,180,180,180,180,180,459,180,180,180,180,180,180,180,180,180,180,180,180,180,]),'struct_declarator':([135,367,],[251,449,]),'declaration':([0,20,41,72,80,123,206,340,],[43,71,43,122,71,227,227,434,]),'declarator':([23,69,106,131,135,367,],[85,85,85,85,252,252,]),'direct_abstract_declarator':([113,192,197,287,329,391,392,],[196,196,336,196,336,196,336,]),'translation_unit':([0,],[41,]),'unified_string_literal':([105,108,123,129,152,153,163,164,178,183,188,195,205,206,207,219,235,250,257,261,268,278,282,285,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,313,316,334,340,347,348,349,355,356,357,359,362,370,394,422,434,440,451,456,461,463,465,468,474,476,477,478,480,494,501,506,509,514,518,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'selection_statement':([123,206,207,349,357,440,477,478,480,509,514,518,],[228,228,228,228,228,228,228,228,228,228,228,228,]),'init_declarator_list_opt':([23,69,],[87,87,]),'conditional_expression':([105,108,123,129,152,183,188,195,205,206,207,219,235,250,257,261,268,278,282,285,291,303,313,316,334,340,347,348,349,355,356,357,359,362,370,422,434,440,451,456,461,465,468,474,476,477,478,480,494,501,506,509,514,518,],[175,175,175,175,175,175,175,175,175,175,175,351,175,351,351,175,351,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,351,175,175,175,175,175,486,175,175,175,175,175,175,175,175,175,175,175,175,175,]),'enumerator':([96,143,144,255,],[142,142,142,371,]),'parameter_type_list_opt':([192,335,391,],[330,432,330,]),'typedef_name':([0,5,20,41,65,70,72,80,95,111,123,128,132,133,134,136,152,192,202,206,241,242,291,313,316,318,326,335,340,391,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'compound_statement':([73,123,126,206,207,349,357,440,477,478,480,509,514,518,],[124,229,233,229,229,229,229,229,229,229,229,229,229,229,]),'assignment_operator':([150,],[278,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',944),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',952),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',957),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',958),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',966),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',967),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',972),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',977),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',978),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',983),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',984),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',985),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',996),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',997),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1012),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1013),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1124),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1125),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1154),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1155),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1161),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1169),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1170),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1189),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1190),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1201),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1232),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1233),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1242),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1247),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1248),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1256),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1257),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1268),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1276),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1277),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1282),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1283),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1288),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1299),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1307),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1312),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1322),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1326),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1337),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1346),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1357),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1366),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1376),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1387),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1388),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1395),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1396),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1402),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1408),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1412),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1416),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1420),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1424),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1428),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1433),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1437),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1441),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1445),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1450),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1454),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1458),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1462),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1463),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1468),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1475),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1476),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1488),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1492),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1493),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1506),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1507),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1508),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1509),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1510),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1521),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1525),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1526),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1534),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1535),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1536),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1537),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1538),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1560),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1564),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1568),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1572),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1573),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1574),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1579),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1580),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1588),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1589),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1590),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1591),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1592),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1598),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1602),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1606),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1607),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1613),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1614),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1615),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1621),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1622),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1628),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1633),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1637),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1641),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1642),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1647),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1651),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1659),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1660),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1661),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1674),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1675),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1684),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1688),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1689),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1690),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1691),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1697),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1698),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1704),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1705),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1716),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1717),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1727),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1728),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1738),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1744),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1750),
]
